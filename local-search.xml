<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>app项目测试</title>
    <link href="undefined2020/01/21/app%E6%B5%8B%E8%AF%95/"/>
    <url>2020/01/21/app%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="app项目功能测试"><a href="#app项目功能测试" class="headerlink" title="app项目功能测试"></a>app项目功能测试</h2><h3 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">运行</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）App安装完成后的试运行，可正常打开软件。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）App打开测试，是否有加载状态进度提示。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）App打开速度测试，速度是否可观。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）App页面间的切换是否流畅，逻辑是否正确</span><br></pre></td></tr></table></figure><h3 id="注册测试"><a href="#注册测试" class="headerlink" title="注册测试"></a>注册测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">注册</span><br><span class="line"></span><br><span class="line">--同表单编辑页面</span><br><span class="line"></span><br><span class="line">--用户名密码长度</span><br><span class="line"></span><br><span class="line">--注册后的提示页面</span><br><span class="line"></span><br><span class="line">--前台注册页面和后台的管理页面数据是否一致</span><br><span class="line"></span><br><span class="line">--注册后，在后台管理中页面提示</span><br></pre></td></tr></table></figure><h3 id="登录测试"><a href="#登录测试" class="headerlink" title="登录测试"></a>登录测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">登录</span><br><span class="line"></span><br><span class="line">--使用合法的用户登录系统。</span><br><span class="line"></span><br><span class="line">--系统是否允许多次非法的登陆，是否有次数限制。</span><br><span class="line"></span><br><span class="line">--使用已经登陆的账号登陆系统是否正确处理。</span><br><span class="line"></span><br><span class="line">--使用禁用的账号登陆系统是否正确处理。</span><br><span class="line"></span><br><span class="line">--用户名、口令（密码）错误或漏填时能否登陆。</span><br><span class="line"></span><br><span class="line">--删除或修改后的用户，原用户登陆。</span><br><span class="line"></span><br><span class="line">--不输入用户口令和用户、重复点（确定或取消按钮）是否允许登陆。</span><br><span class="line"></span><br><span class="line">--登陆后，页面中登陆信息。</span><br><span class="line"></span><br><span class="line">--页面中有注销按钮。</span><br><span class="line"></span><br><span class="line">--登陆超时的处理。</span><br></pre></td></tr></table></figure><p>###注销测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">注销</span><br><span class="line"></span><br><span class="line">--注销原模块，新的模块系统能否正确处理。</span><br><span class="line"></span><br><span class="line">--终止注销能否返回原模块，原用户。</span><br><span class="line"></span><br><span class="line">--注销原用户，新用户系统能否正确处理。</span><br><span class="line"></span><br><span class="line">--使用错误的账号、口令、无权限的被禁用的账号进行注销</span><br></pre></td></tr></table></figure><h3 id="前后台切换测试"><a href="#前后台切换测试" class="headerlink" title="前后台切换测试"></a>前后台切换测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) APP切换到后台，再回到app，检查是否停留在上一次操作界面。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) APP切换到后台，再回到app，检查功能及应用状态是否正常，IOS4和IOS5的版本的处理机制有的不一样。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) app切换到后台，再回到前台时，注意程序是否崩溃，功能状态是否正常，尤其是对于从后台切换回前台数据有自动更新的时候。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 手机锁屏解屏后进入app注意是否会崩溃，功能状态是否正常，尤其是对于从后台切换回前台数据有自动更新的时候。 </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) 当App使用过程中有电话进来中断后再切换到app，功能状态是否正常 </span><br><span class="line"></span><br><span class="line"><span class="number">6</span>) 当杀掉app进程后，再开启app，app能否正常启动。 </span><br><span class="line"></span><br><span class="line"><span class="number">7</span>) 出现必须处理的提示框后，切换到后台，再切换回来，检查提示框是否还存在，有时候会出现应用自动跳过提示框的缺陷。 </span><br><span class="line"></span><br><span class="line"><span class="number">8</span>) 对于有数据交换的页面，每个页面都必需要进行前后台切换、锁屏的测试，这种页面最容易出现崩溃。</span><br></pre></td></tr></table></figure><h3 id="免登录测试"><a href="#免登录测试" class="headerlink" title="免登录测试"></a>免登录测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">很多应用提供免登录功能，当应用开启时自动以上一次登录的用户身份来使用app.</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) app有免登录功能时，需要考虑IOS版本差异。 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 考虑无网络情况时能否正常进入免登录状态。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 切换用户登录后，要校验用户登录信息及数据内容是否相应更新，确保原用户退出。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 根据MTOP的现有规则，一个帐户只允许登录一台机器。所以，需要检查一个帐户登录多台手机的情况。原手机里的用户需要被踢出，给出友好提示。 </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) app切换到后台，再切回前台的校验 </span><br><span class="line"></span><br><span class="line"><span class="number">6</span>) 切换到后台，再切换回前台的测试 </span><br><span class="line"></span><br><span class="line"><span class="number">7</span>) 密码更换后，检查有数据交换时是否进行了有效身份的校验 </span><br><span class="line"></span><br><span class="line"><span class="number">8</span>) 支持自动登录的应用在进行数据交换时，检查系统是否能自动登录成功并且数据操作无误。 </span><br><span class="line"></span><br><span class="line"><span class="number">9</span>) 检查用户主动退出登录后，下次启动app，应停留在登录界面</span><br></pre></td></tr></table></figure><h3 id="数据更新测试"><a href="#数据更新测试" class="headerlink" title="数据更新测试"></a>数据更新测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">根据应用的业务规则，以及数据更新量的情况，来确定最优的数据更新方案。 </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) 需要确定哪些地方需要提供手动刷新，哪些地方需要自动刷新，哪些地方需要手动+自动刷新。 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 确定哪些地方从后台切换回前台时需要进行数据更新。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 根据业务、速度及流量的合理分配，确定哪些内容需要实时更新，哪些需要定时更新。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 确定数据展示部分的处理逻辑，是每次从服务端请求，还是有缓存到本地，这样才能有针对性的进行相应测试。 </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) 检查有数据交换的地方，均有相应的异常处理。</span><br></pre></td></tr></table></figure><h3 id="离线浏览测试"><a href="#离线浏览测试" class="headerlink" title="离线浏览测试"></a>离线浏览测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">离线浏览 </span><br><span class="line"></span><br><span class="line">很多应用会支持离线浏览，即在本地客户端会缓存一部分数据供用户查看。 </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) 在无网络情况可以浏览本地数据 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 退出app再开启app时能正常浏览 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 切换到后台再切回前台可以正常浏览 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 锁屏后再解屏回到应用前台可以正常浏览 </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) 在对服务端的数据有更新时会给予离线的相应提示</span><br></pre></td></tr></table></figure><h3 id="交叉事件测试"><a href="#交叉事件测试" class="headerlink" title="交叉事件测试"></a>交叉事件测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">针对智能终端应用的服务等级划分方式及实时特性所提出的测试方法。交叉测试又叫事件或冲突测试，是指一个功能正在执行过程中，同时另外一个事件或操作对该过程进行干扰的测试。如；App在前/后台运行状态时与来电、文件下载、音乐收听等关键运用的交互情况测试等。交叉事件测试非常重要，能发现很多应用中潜在的性能问题。</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>） 多个App同时运行是否影响正常功能</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>） App运行时前/后台切换是否影响正常功能</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>） App运行时拨打/接听电话</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>） App运行时发送/接收信息</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>） App运行时发送/收取邮件</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>） App运行时切换网络（<span class="number">2</span>G、<span class="number">3</span>G、wifi）</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>） App运行时浏览网络</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>） App运行时使用蓝牙传送/接收数据</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>） App运行时使用相机、计算器等手机自带设备</span><br></pre></td></tr></table></figure><h3 id="兼容性测试"><a href="#兼容性测试" class="headerlink" title="兼容性测试"></a>兼容性测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">主要测试内部和外部兼容性</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）与本地及主流App是否兼容</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）基于开发环境和生产环境的不同，检验在各种网络连接下(WiFi、<span class="number">2</span>G,<span class="number">3</span>G,<span class="number">4</span>G,<span class="number">5</span>G等)，App的数据和运用是否正确</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）与各种设备是否兼容，若有跨系统支持则需要检验是否在各系统下，各种行为是否一致</span><br><span class="line"></span><br><span class="line"> --不同操作系统的兼容性，是否适配</span><br><span class="line"></span><br><span class="line">--不同手机屏幕分辨率的兼容性</span><br><span class="line"></span><br><span class="line">--不同手机品牌的兼容性</span><br></pre></td></tr></table></figure><h3 id="手势操作测试"><a href="#手势操作测试" class="headerlink" title="手势操作测试"></a>手势操作测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">手势操作测试</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）手机开锁屏对运行中的App的影响</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）切换网络对运行中的App的影响</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）运行中的App前后台切换的影响</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）多个运行中的App的切换</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）App运行时关机</span><br></pre></td></tr></table></figure><h3 id="UI测试"><a href="#UI测试" class="headerlink" title="UI测试"></a>UI测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">文案的测试</span><br><span class="line">字体，字号，格式，规范</span><br><span class="line">标题和正文，中英文换行，错别字，大小写，全半角标点</span><br><span class="line"></span><br><span class="line">   图片的测试</span><br><span class="line">清晰，尺寸，配色，风格；</span><br><span class="line"></span><br><span class="line">布局的测试</span><br><span class="line">尺寸大小，位置合理，排序规律，对齐方式；</span><br><span class="line"></span><br><span class="line">控件的测试</span><br><span class="line">对话框</span><br><span class="line"></span><br><span class="line">状态</span><br><span class="line">是否在对话框显示的同时可进行程序其他操作</span><br><span class="line"></span><br><span class="line">位置</span><br><span class="line">显示的位置是否在可视范围内，是否子啊屏幕中央</span><br><span class="line">多个一级二级对话框并存时，层级关系是否正确</span><br><span class="line"></span><br><span class="line">移动</span><br><span class="line">是否可以移动对话框</span><br><span class="line"></span><br><span class="line">文本框</span><br><span class="line"></span><br><span class="line">默认值</span><br><span class="line">是否为空</span><br><span class="line">是否有提示文案</span><br><span class="line"></span><br><span class="line">边界值</span><br><span class="line">长度限制，最多限制字符，超出屏幕上下方等</span><br><span class="line">超出限制的界面提示，显示，处理，跳转等</span><br><span class="line"></span><br><span class="line">内容</span><br><span class="line">前置/中置/后置空格内容</span><br><span class="line">中文/英文/数字普通文本内容</span><br><span class="line">引号/逗号特殊富豪内容</span><br><span class="line">全角/半角内容</span><br><span class="line">复制粘贴的内容</span><br><span class="line">大小写全半角的内容</span><br><span class="line">不符合格式的内容</span><br><span class="line"></span><br><span class="line">滑动滚轮</span><br><span class="line"></span><br><span class="line">滚轮的触控区域</span><br><span class="line">滚轮的数值限制</span><br><span class="line">向上向下滑到极限值的处理</span><br><span class="line">滚轮的对应跳转</span><br><span class="line"></span><br><span class="line">日期滚轮</span><br><span class="line">涉及到年月日的跳转</span><br><span class="line"></span><br><span class="line">时间滚轮</span><br><span class="line">涉及到<span class="number">24</span>小时和<span class="number">12</span>小时，上下午的跳转</span><br><span class="line"></span><br><span class="line">上下微调按钮</span><br><span class="line">默认起始值</span><br><span class="line">调整的变化值</span><br><span class="line">最大值与最小值</span><br><span class="line">输入数据后微调的值</span><br><span class="line">输入的数据是否作有效性验证</span><br><span class="line"></span><br><span class="line">选项按钮</span><br><span class="line"></span><br><span class="line">单选按钮</span><br><span class="line">默认选项是否正确合理</span><br><span class="line">选中其他选项，会自动取消当前选项</span><br><span class="line">存在多个选项组时，选择其中一组的选项不会影响其他选项组</span><br><span class="line"></span><br><span class="line">多选按钮</span><br><span class="line">默认选项是否正确合理</span><br><span class="line">选择其他选项不会影响当前选项</span><br><span class="line"></span><br><span class="line">图标按钮</span><br><span class="line">图标图片是否正确合适</span><br><span class="line">点击图标时否调出对应页面</span><br><span class="line">图标tooltip触发时机是否正确合理</span><br><span class="line"></span><br><span class="line">默认形态</span><br><span class="line">是否勾选</span><br><span class="line">选项值的记忆</span><br></pre></td></tr></table></figure><h3 id="消息通知测试"><a href="#消息通知测试" class="headerlink" title="消息通知测试"></a>消息通知测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">APP消息推送如何测试？</span><br><span class="line">消息推送对象</span><br><span class="line">消息推送一般可以自定义推送对象，有全部推送，精确推送，及安卓和IOS渠道推送，注意推送对象是否正确，推送之前确认自己是否在测试环境操作，以免造成生产问题。</span><br><span class="line"></span><br><span class="line">消息简介</span><br><span class="line">客户端收到消息推送有两种形式，客户端后台运行一般推送显示在通知栏，客户端前台运行一般弹出弹框，简介内容注意字数过多溢出情况。</span><br><span class="line"></span><br><span class="line">消息详情</span><br><span class="line">注意详情所支持的内容，包括文字、图片、表情包、换行以及链接跳转。</span><br><span class="line"></span><br><span class="line">消息推送场景（支持定时推送）</span><br><span class="line">（<span class="number">1</span>）消息推送时间：</span><br><span class="line">a)设置过去时间</span><br><span class="line">b)未推送之前修改消息内容</span><br><span class="line">c)删除消息，查看是否还会推送</span><br><span class="line">（<span class="number">2</span>）客户端运行状态</span><br><span class="line">a)前台运行</span><br><span class="line">b)后台运行</span><br><span class="line">c)进程关闭状态</span><br><span class="line">（<span class="number">2</span>）特殊场景</span><br><span class="line">a)多个提醒冲突</span><br><span class="line">b)当天设置当天推送</span><br><span class="line">c)当天设置隔几天起效</span><br><span class="line">如果用户设置不接收消息通知，看是否接到通知</span><br></pre></td></tr></table></figure><h3 id="安装卸载测试"><a href="#安装卸载测试" class="headerlink" title="安装卸载测试"></a>安装卸载测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">安装</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>正常安装测试，检查是否安装成功。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>APP版本覆盖测试。例如：先安装一个<span class="number">1.0</span>版本的APP,再安装一个高版本(<span class="number">1.1</span>版本)的APP，检查是否被覆盖。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>回退版本测试。例如：先装一个<span class="number">2.0</span>版本的APP,再安装一个<span class="number">1.0</span>版本的APP,正常情况下版本是可以回退的。</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>安装时内存不足，弹出提示。</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>根据安装手册操作，是否正确安装。</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>安装过程中的意外情况（强行断电、断网、来电话了、查看信息）等等，检查会发生的情况。</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>通过‘同步软件’，检查安装时是否同步安装了一些文件。</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>在不同型号、系统、屏幕大小、分辨率上的手机进行安装。</span><br><span class="line"></span><br><span class="line"><span class="number">9.</span>安装时是否识别有SD卡，并默认安装到sd卡中。</span><br><span class="line"></span><br><span class="line"><span class="number">10.</span>安装完成后，能否正常启动应用程序。</span><br><span class="line"></span><br><span class="line"><span class="number">11.</span>安装完成后，重启手机能否正常启动应用程序。</span><br><span class="line"></span><br><span class="line"><span class="number">12.</span>安装完成后，是否对其他应用程序造成影响。</span><br><span class="line"></span><br><span class="line"><span class="number">13.</span>安装完成后，能否添加快捷方式。</span><br><span class="line"></span><br><span class="line"><span class="number">14.</span>安装完成后，杀毒软件是否会对其当做病毒处理。</span><br><span class="line"></span><br><span class="line"><span class="number">15.</span>多进程进行安装，是否安装成功。</span><br><span class="line"></span><br><span class="line"><span class="number">16.</span>在安装过程中，所有的提示信息必须是英文或者中文，提示信息中不能出现代码、符号、乱码等。</span><br><span class="line"></span><br><span class="line"><span class="number">17.</span>安装之后，是否自动启动程序。</span><br><span class="line"></span><br><span class="line"><span class="number">18.</span>是否支持第三方安装。</span><br><span class="line"></span><br><span class="line"><span class="number">19.</span>在安装中点击取消。</span><br><span class="line"></span><br><span class="line">卸载</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>用自己的卸载程序进行卸载，检查是否卸载干净。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>用第三方工具，检查是否卸载干净。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>在卸载过程中，点击取消按钮，看是否正常退出卸载程序，检查软件是否还能继续正常使用。</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>卸载过程中，出现意外（比如手机关机，没电，查看信息，接打电话），程序是否还能运行。</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>在卸载过程中，突然重启设备，再次访问程序，是否还能运行。</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>在没用使用程序时，删除目录文件，看程序是否能运行。</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>在使用过程中，直接删除目录文件，程序是否还能运行。</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>不同系统、硬件环境、网络环境下进行卸载。</span><br><span class="line"></span><br><span class="line"><span class="number">9.</span>卸载成功后，是否对其他程序有影响。</span><br><span class="line"></span><br><span class="line"><span class="number">10.</span>卸载后再次安装，是否正常使用。</span><br><span class="line"></span><br><span class="line"><span class="number">11.</span>在卸载过程中，所有的提示信息必须是英文或者中文，提示信息中不能出现代码、符号、乱码等。</span><br></pre></td></tr></table></figure><h3 id="升级更新测试"><a href="#升级更新测试" class="headerlink" title="升级更新测试"></a>升级更新测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">新版版发布后，配合不同网络环境的自劢更新提示及下载、安装、更新、启劢、运行的验证测试。  </span><br><span class="line">升级：</span><br><span class="line"><span class="number">1</span>）测试升级后的功能是否与需求说明一样</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）测试与升级模块相关的模块的功能是否与需求一致</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）升级安装意外情况的测试（如死机、断电、重启）</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）升级界面的UI测试</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）不同操作系统间的升级测试</span><br><span class="line">更新：</span><br><span class="line"><span class="number">1</span>) 当客户端有新版本时，有更新提示。 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 当版本为非强制升级版时，用户可以取消更新，老版本能正常使用。用户在下次启动app时，仍能出现更新提示。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 当版本为强制升级版时，当给出强制更新后用户没有做更新时，退出客户端。下次启动app时，仍出现强制升级提示。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 当客户端有新版本时，在本地不删除客户端的情况下，直接更新检查是否能正常更新。</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) 当客户端有新版本时，在本地不删除客户端的情况下，检查更新后的客户端功能是否是新版本。 </span><br><span class="line"></span><br><span class="line"><span class="number">6</span>) 当客户端有新版本时，在本地不删除客户端的情况下，检查资源同名文件如图片是否能正常更新成最新版本。</span><br></pre></td></tr></table></figure><h3 id="用户体验测试"><a href="#用户体验测试" class="headerlink" title="用户体验测试"></a>用户体验测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以主观的普通消费者的角度去感知产品或服务的舒适、有用、易用、友好亲切程度。 通过不同个体、独立空间和非经验的统计复用方式去有效评价产品的体验特性提出修改意见提升产品的潜在客户满意度。</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）是否有空数据界面设计，引导用户去执行操作。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）是否滥用用户引导。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）是否有不可点击的效果，如：你的按钮此时处于不可用状态，那么一定要灰掉，或者拿掉按钮，否则会给用户误导</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）菜单层次是否太深</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）交互流程分支是否太多</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>）相关的选项是否离得很远</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>）一次是否载入太多的数据</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>）界面中按钮可点击范围是否适中</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>）标签页是否跟内容没有从属关系，当切换标签的时候，内容跟着切换</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>）操作应该有主次从属关系</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>）是否定义Back的逻辑。涉及软硬件交互时，Back键应具体定义</span><br><span class="line"></span><br><span class="line"><span class="number">12</span>）是否有横屏模式的设计，应用一般需要支持横屏模式，即自适应设计</span><br></pre></td></tr></table></figure><h3 id="回归测试"><a href="#回归测试" class="headerlink" title="回归测试"></a>回归测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）Bug修复后且在新版本发布后需要进行回归测试。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）Bug修复后的回归测试在交付前、要进行全量用例的回归测试。</span><br></pre></td></tr></table></figure><h3 id="时间测试"><a href="#时间测试" class="headerlink" title="时间测试"></a>时间测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">时间测试 </span><br><span class="line"></span><br><span class="line">客户端可以自行设置手机的时区、时间，因此需要校验该设置对app的影响。 </span><br><span class="line"></span><br><span class="line">--中国为东<span class="number">8</span>区，所以当手机设置的时间非东<span class="number">8</span>区时，查看需要显示时间的地方，时间是否展示正确，应用功能是否正常。时间一般需要根据服务器时间再转换成客户端对应的时区来展示，这样的用户体验比较好。比如发表一篇微博在服务端记录的是<span class="number">10</span>：<span class="number">00</span>，此时，华盛顿时间为<span class="number">22</span>：<span class="number">00</span>，客户端去浏览时，如果设置的是华盛顿时间,则显示的发表时间即为<span class="number">22</span>:<span class="number">00</span>,当时间设回东<span class="number">8</span>区时间时，再查看则显示为<span class="number">10</span>：<span class="number">00</span>。</span><br></pre></td></tr></table></figure><h3 id="定位，照相机服务测试"><a href="#定位，照相机服务测试" class="headerlink" title="定位，照相机服务测试"></a>定位，照相机服务测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">定位、照相机服务 </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) App有用到相机，定位服务时，需要注意系统版本差异 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 有用到定位服务、照相机服务的地方，需要进行前后台的切换测试，检查应用是否正常。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 当定位服务没有开启时，使用定位服务，会友好性弹出是否允许设置定位提示。当确定允许开启定位时，能自动跳转到定位设置中开启定位服务。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 测试定位、照相机服务时，需要采用真机进行测试。</span><br></pre></td></tr></table></figure><h3 id="app上线后舆情的跟踪"><a href="#app上线后舆情的跟踪" class="headerlink" title="app上线后舆情的跟踪"></a>app上线后舆情的跟踪</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">新app上线之后，用户对此应用的评价，存在哪些测试期间未发现的bug；</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>业务功能测试</tag>
      
      <tag>UI测试</tag>
      
      <tag>消息通知测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Postman使用教程</title>
    <link href="undefined2020/01/14/Postman%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <url>2020/01/14/Postman%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="postman的使用步骤"><a href="#postman的使用步骤" class="headerlink" title="postman的使用步骤"></a>postman的使用步骤</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>打开postman-选择request-输入request名，选择一个文件夹/新建一下文件夹-点击创建即可</span><br><span class="line"></span><br><span class="line">（request name为这个接口的名字，collection 为该接口在文件夹中的名字）</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>将url放到文本框中，Postman 可以自动帮我们解析出对应参数。</span><br><span class="line"></span><br><span class="line">- 如果想要暂时不传参数，可以方便的通过不勾选的方式去实现</span><br><span class="line">- 如果想要批量的编辑参数，可以点击右上角的Bulk Edit，去实现批量编辑</span><br><span class="line"></span><br><span class="line">- postman的使用心得？</span><br><span class="line"></span><br><span class="line">- Postman中tests使用的语言为js,只需要写结果逻辑的判断代码即可</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Postman</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Postman</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试工作使用的软件和工具</title>
    <link href="undefined2020/01/14/%E6%B5%8B%E8%AF%95%E5%B7%A5%E4%BD%9C%E4%BD%BF%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7/"/>
    <url>2020/01/14/%E6%B5%8B%E8%AF%95%E5%B7%A5%E4%BD%9C%E4%BD%BF%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>随意生成自己想要的格式，大小图片</p><p>在线ps图片:<a href="https://ps.gaoding.com/#/?hmsr=zc-cc" target="_blank" rel="noopener">https://ps.gaoding.com/#/?hmsr=zc-cc</a></p><p>有很多真机可以模拟线上bug</p><p>云测平台：<a href="https://www.testin.cn/realmachine/index.htm" target="_blank" rel="noopener">https://www.testin.cn/realmachine/index.htm</a></p><p>可查看不同时间段内app的新增用户和活跃用户</p><p>腾讯移动分析：<a href="https://mta.qq.com/mta/ctr_index/login?go_to_url=https%3A%2F%2Fmta.qq.com%2Fmta%2Foverview%2Fctr_all_app_new" target="_blank" rel="noopener">https://mta.qq.com/mta/ctr_index/login?go_to_url=https%3A%2F%2Fmta.qq.com%2Fmta%2Foverview%2Fctr_all_app_new</a></p><p>查看app的排名，分辨率，用户行为</p><p>百度流量研究院：<a href="https://tongji.baidu.com/research/app" target="_blank" rel="noopener">https://tongji.baidu.com/research/app</a></p><p>手机，电脑，平板，手表，显示器的屏幕尺寸大全</p><p>屏幕尺寸大全：<a href="http://www.woshipm.com/screen/" target="_blank" rel="noopener">http://www.woshipm.com/screen/</a></p><p>智能识别验证码</p><p>百度智能云：<a href="https://login.bce.baidu.com/?account=&amp;redirect=http%3A%2F%2Fconsole.bce.baidu.com%2F#/index/overview" target="_blank" rel="noopener">https://login.bce.baidu.com/?account=&amp;redirect=http%3A%2F%2Fconsole.bce.baidu.com%2F#/index/overview</a></p><p>免费下载ppt模版</p><p>芒果派：<a href="http://www.788ppt.com/hot.html?type=1&amp;source=baidu&amp;plan=tongyongci1&amp;unit=mianfeidepptmoban&amp;keyword=mianfeidepptmoban&amp;e_creative=34612485553&amp;e_adposition=cl3&amp;e_keywordid=152145293237&amp;e_keywordid2=149976561014&amp;bd_vid=11992267364725561060" target="_blank" rel="noopener">http://www.788ppt.com/hot.html?type=1&amp;source=baidu&amp;plan=tongyongci1&amp;unit=mianfeidepptmoban&amp;keyword=mianfeidepptmoban&amp;e_creative=34612485553&amp;e_adposition=cl3&amp;e_keywordid=152145293237&amp;e_keywordid2=149976561014&amp;bd_vid=11992267364725561060</a></p><p>提bug的工具</p><p>jira:<a href="https://jira.xxxx.cn/secure/Dashboard.jspa" target="_blank" rel="noopener">https://jira.xxxx.cn/secure/Dashboard.jspa</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wiki是一种协作的写作模式，来源于夏威夷语，它最大的特点就是分享性，开放性以及互动性。wiki站点允许任何访问它的用户都可以修改、编辑以及创建上面的内容。主要存放一些数据库文档和app的路由配置表，上线记录，工期安排</span><br></pre></td></tr></table></figure><p>Wiki/confluence:<a href="https://confluence.qingclass.cn/index.action#all-updates" target="_blank" rel="noopener">https://confluence.qingclass.cn/index.action#all-updates</a></p><p>协同工作软件</p><p>Tower：<a href="https://tower.im/teams/2ae0a1e4b57e43bda42cfe609c9d146e/projects/" target="_blank" rel="noopener">https://tower.im/teams/2ae0a1e4b57e43bda42cfe609c9d146e/projects/</a></p><p>共享文件</p><p>石墨：<a href="https://shimo.im/dashboard/used" target="_blank" rel="noopener">https://shimo.im/dashboard/used</a></p><p>接口文档存放的地方</p><p>swagger：<a href="https://shimo.im/dashboard/used" target="_blank" rel="noopener">https://shimo.im/dashboard/used</a></p><p>测试分发平台：.firm和蒲公英</p><p>接口管理平台/自动化接口测试：Yapi</p><p>日志查看：阿里云日志</p>]]></content>
    
    
    <categories>
      
      <category>测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具，软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试工作/学习相关的论坛和网站</title>
    <link href="undefined2020/01/14/%E6%B5%8B%E8%AF%95%E8%AE%BA%E5%9D%9B%E5%92%8C%E7%BD%91%E7%AB%99/"/>
    <url>2020/01/14/%E6%B5%8B%E8%AF%95%E8%AE%BA%E5%9D%9B%E5%92%8C%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##较好的测试博客论坛</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.51</span>testing软件网: http://www<span class="number">.51</span>testing.com/html/index.html </span><br><span class="line"><span class="number">2</span>testhome: https://testerhome.com/topics</span><br><span class="line"><span class="number">3</span>马克飞象： https://maxiang.io/</span><br><span class="line"><span class="number">4.</span>github官网： https://github.com/xirong/my-git/blob/master/how-to-use-github.md</span><br><span class="line"><span class="number">5.</span>hexo官网： https://hexo.io/zh-cn/docs/</span><br><span class="line"><span class="number">6.</span>我的个人博客：https://cxy66yan.github.io/</span><br><span class="line"><span class="number">7.</span>Yapi官网：https://hellosean1025.github.io/yapi/documents/index.html</span><br><span class="line"><span class="number">8.</span>charles官网： https://www.charlesproxy.com/</span><br><span class="line"><span class="number">9.</span>http官网：https://www.w3.org/Protocols/</span><br><span class="line"><span class="number">10.</span>正则表达式调试工具：https://regex101.com/</span><br><span class="line"><span class="number">11.</span>在线ps图片： https://ps.gaoding.com/<span class="comment">#/?hmsr=zc-cc</span></span><br><span class="line"><span class="number">12.</span>tower的官方使用文档： https://tower.im/help/articles/<span class="number">8</span></span><br><span class="line"><span class="number">13.</span>postman接口测试文档：https://www.getpostman.com/</span><br><span class="line"><span class="number">14.</span>云测平台：https://www.testin.cn/realmachine/index.htm</span><br><span class="line"><span class="number">15.j</span>meter官网：http://jmeter.apache.org/</span><br><span class="line"><span class="number">16.</span>云测平台使用文档：https://support.testin.cn/portal/kb/articles/%E8%BF%<span class="number">9</span>C%E7%A8%<span class="number">8</span>B%E7%<span class="number">9</span>C%<span class="number">9</span>F%E6%<span class="number">9</span>C%BAfaq</span><br><span class="line"></span><br><span class="line"><span class="number">17.</span>移动自动化测试博客：https://sutune.me/<span class="number">2017</span>/<span class="number">07</span>/<span class="number">13</span>/autoTest-module/</span><br><span class="line"><span class="number">19.</span>测试开发工程师A的博客：https://www.yuque.com/miyang.meyoung</span><br><span class="line"><span class="number">20.</span>测试开发工程师B的博客: http://blog.sina.com.cn/eagleking0318</span><br><span class="line"><span class="number">21.</span>web自动化测试的博客： http://www.sitven.cn/</span><br><span class="line"><span class="number">22.</span>测试教程网：http://www.testclass.net/</span><br><span class="line"><span class="number">23.</span>测试窝：https://www.testwo.com/</span><br><span class="line"><span class="number">24.</span>FreeBug：https://www.freebuf.com/</span><br><span class="line"><span class="number">25.</span>酷壳：https://coolshell.cn/</span><br><span class="line"><span class="number">26.</span>有赞技术团队：https://tech.youzan.com/</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>测试网站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用python进行验证码识别</title>
    <link href="undefined2020/01/14/%E4%BD%BF%E7%94%A8python%E8%BF%9B%E8%A1%8C%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/"/>
    <url>2020/01/14/%E4%BD%BF%E7%94%A8python%E8%BF%9B%E8%A1%8C%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<p>###百度<strong>OCR</strong>使用教程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>打开百度云网址：https://cloud.baidu.com/</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>点击进入管理控制台：https://console.bce.baidu.com</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>左侧导航栏–&gt;选择人工智能–&gt;选择文字识别；</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>点击创建应用–&gt;获取API KEY和SECRET KEY；</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> 安装baidu-aip模块；（pip3 install Baidu-api）</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>调用aip模块中的AipOcr，输入参数ID，KEY 和SECRET</span><br><span class="line"></span><br><span class="line">(<span class="keyword">from</span> api <span class="keyword">import</span> ApiOcr</span><br><span class="line"></span><br><span class="line">APP_ID=‘’</span><br><span class="line"></span><br><span class="line">APi_KEY=‘’</span><br><span class="line">SECRET_KEY=‘’</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>定义get_file_content方法获取图片二进制内容，参数为图片路径</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>创建image对象，填写图片实际路径（用client下的basicGeneral获取识别信息words）</span><br></pre></td></tr></table></figure><h3 id="python自动识别web项目登录的验证码"><a href="#python自动识别web项目登录的验证码" class="headerlink" title="python自动识别web项目登录的验证码"></a>python自动识别web项目登录的验证码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipOcr</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app_id = <span class="string">'17990316'</span></span><br><span class="line">access_id = <span class="string">'0ef07eb536e0440c88281d627364430b'</span></span><br><span class="line">access_secret = <span class="string">'28ad15a4ae584d19aef3052a1bb940ec'</span></span><br><span class="line">client = AipOcr(app_id, access_id, access_secret)</span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">'http://xb-test.easylesson.cn/index.html#/login'</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">options = &#123;&#125;</span><br><span class="line">options[<span class="string">"language_type"</span>] = <span class="string">"ENG"</span></span><br><span class="line">options[<span class="string">"detect_direction"</span>] = <span class="string">"true"</span></span><br><span class="line">options[<span class="string">"detect_language"</span>] = <span class="string">"true"</span></span><br><span class="line">options[<span class="string">"probability"</span>] = <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_content</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">return</span> fp.read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ocr</span><span class="params">(img_path)</span>:</span></span><br><span class="line">    image = get_file_content(img_path)</span><br><span class="line"></span><br><span class="line">    <span class="string">""" 带参数调用通用文字识别, 图片参数为本地图片 """</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#         return client.basicGeneral(image, options)['words_result'][0]['words']</span></span><br><span class="line">        <span class="keyword">return</span> client.basicAccurate(image, options)[<span class="string">'words_result'</span>][<span class="number">0</span>][<span class="string">'words'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'----'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># code_base_url表示验证码图片要放置的地址</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(code_base_url, username, password)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment">#     print(browser.current_url)</span></span><br><span class="line">        <span class="keyword">if</span> browser.current_url[<span class="number">-5</span>:] == <span class="string">'login'</span>:</span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[1]/div/div/input'</span>).clear()</span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[2]/div/div/input'</span>).clear()</span><br><span class="line">            browser.find_element_by_xpath(</span><br><span class="line">                <span class="string">'/html/body/div[1]/div/div/div[2]/form/div[3]/div/div/div[1]/div/input'</span>).clear()</span><br><span class="line"></span><br><span class="line">            browser.save_screenshot(<span class="string">f'<span class="subst">&#123;code_base_url&#125;</span>/all.png'</span>)</span><br><span class="line">            photo = browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[3]/div/div/div[2]/img'</span>)</span><br><span class="line">            <span class="comment"># x = photo.location['x']</span></span><br><span class="line">            <span class="comment"># y = photo.location['y']</span></span><br><span class="line">            x = <span class="number">2012</span></span><br><span class="line">            y = <span class="number">639</span></span><br><span class="line">            <span class="comment"># width = photo.size['width']</span></span><br><span class="line">            <span class="comment"># height = photo.size['height']</span></span><br><span class="line">            width = <span class="number">275</span></span><br><span class="line">            height = <span class="number">65</span></span><br><span class="line">            <span class="comment"># 打开图片  截图</span></span><br><span class="line">            im = Image.open(<span class="string">f'<span class="subst">&#123;code_base_url&#125;</span>/all.png'</span>)</span><br><span class="line">            im = im.crop((x, y, x + width, y + height))</span><br><span class="line">            im.save(<span class="string">f'<span class="subst">&#123;code_base_url&#125;</span>/code.png'</span>)</span><br><span class="line">            code = ocr(<span class="string">f'<span class="subst">&#123;code_base_url&#125;</span>/code.png'</span>)</span><br><span class="line">            code = code.replace(<span class="string">' '</span>, <span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[1]/div/div/input'</span>).send_keys(username)</span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[2]/div/div/input'</span>).send_keys(password)</span><br><span class="line">            browser.find_element_by_xpath(</span><br><span class="line">                <span class="string">'/html/body/div[1]/div/div/div[2]/form/div[3]/div/div/div[1]/div/input'</span>).send_keys(code)</span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div[1]/div/div/div[2]/form/div[4]/div/button'</span>).click()</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    desktop_url = os.path.join(os.path.expanduser(<span class="string">'~'</span>), <span class="string">"Desktop"</span>)</span><br><span class="line">    login(desktop_url, <span class="string">'yukang'</span>, <span class="string">'yukang'</span>)</span><br><span class="line">    print(<span class="string">'hello world'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>识别验证码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>ocr</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python知识点.md</title>
    <link href="undefined2020/01/14/python%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <url>2020/01/14/python%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##python切片</p><p>###字符串没有步长的切片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hebe=“sdfghjasd”</span><br><span class="line"></span><br><span class="line">格式hebe[start:end]</span><br><span class="line"></span><br><span class="line">Start:表示开始截取的下标，end表示截取下标的前一位，开始索引和结束索引如果是从头开始或一致接渠道最后一个可不写[:]=dfghjasd</span><br><span class="line"></span><br><span class="line">从前往后索引为正，从后往前，索引为负</span><br><span class="line"></span><br><span class="line">hebe[<span class="number">1</span>:<span class="number">6</span>]=dfghi</span><br><span class="line"></span><br><span class="line">hebe[<span class="number">-4</span>:]=iasd</span><br></pre></td></tr></table></figure><p>###字符串有步长的切片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hebe [start: stop: stride]</span><br><span class="line"></span><br><span class="line">步长为几就是每隔几个取一个,其他规则同无步长</span><br></pre></td></tr></table></figure><h2 id="python命名规则"><a href="#python命名规则" class="headerlink" title="python命名规则"></a>python命名规则</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python变量名命名规则:</span><br><span class="line">　　<span class="number">1.</span>变量名通常由字母,数字,下划线组成;</span><br><span class="line">　　<span class="number">2.</span>数字不能作为变量名开头;</span><br><span class="line">　　<span class="number">3.</span>不能以python中的关键字命名;</span><br><span class="line">　　<span class="number">4.</span>变量名要有意义;</span><br><span class="line">　　<span class="number">5.</span>不要用汉字和拼音去命名;</span><br><span class="line">　　<span class="number">6.</span>变量名要区分大小写;</span><br><span class="line">　　<span class="number">7.</span>推荐使用驼峰型(GuessAge或guessAge)和下划线(guess_age)来命名;</span><br><span class="line">　　<span class="number">8.</span>常量通常使用大写来定义.</span><br></pre></td></tr></table></figure><h3 id="os的使用"><a href="#os的使用" class="headerlink" title="os的使用"></a>os的使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">- [ ] Import os，<span class="comment">#导入标准库os模块，利用其中的API</span></span><br><span class="line">python路径拼接os.path.join()函数的用法</span><br><span class="line">os.path.join()函数：连接两个或更多的路径名组件</span><br><span class="line">   <span class="number">1.</span>如果各组件名首字母不包含’/’，则函数会自动加上</span><br><span class="line">　<span class="number">2.</span>第一个以”/”开头的参数开始拼接，之前的参数全部丢弃,当有多个时，从最后一个开始</span><br><span class="line">　<span class="number">3.</span>如果最后一个组件/为空，则生成的路径以一个’/’分隔符结尾</span><br><span class="line"></span><br><span class="line">print(<span class="string">"2:"</span>,os.path.join(<span class="string">'/aaaa'</span>,<span class="string">'/bbbb'</span>,<span class="string">'/ccccc.txt'</span>)) <span class="comment">#不良写法习惯</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="number">2</span>: /ccccc.txt</span><br><span class="line"></span><br><span class="line">print(<span class="string">"22:"</span>,os.path.join(<span class="string">'/aaaa/'</span>,<span class="string">'bbbb/'</span>,<span class="string">'ccccc.txt'</span>)) <span class="comment">#通常可以这样写</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="number">22</span>: aaaa/bbb/ccccc.txt</span><br><span class="line"></span><br><span class="line">path1=<span class="string">'/aaaa'</span></span><br><span class="line">path2=<span class="string">'/bbbb'</span></span><br><span class="line">path3=<span class="string">'/cccc'</span></span><br><span class="line">path10=path1+path2+path3</span><br><span class="line">print(path10)</span><br><span class="line">/aaaa/bbbb/cccc</span><br><span class="line"></span><br><span class="line">path1=<span class="string">'/aaaa'</span></span><br><span class="line">path2=<span class="string">'/bbbb'</span></span><br><span class="line">path3=<span class="string">'/cccc'</span></span><br><span class="line">path20=os.path.join(path1,path2,path3)</span><br><span class="line">print(path20)</span><br><span class="line">/cccc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">path1=<span class="string">'/aaaa/'</span></span><br><span class="line">path2=<span class="string">'bbbb/'</span></span><br><span class="line">path3=<span class="string">'cccc'</span></span><br><span class="line">path20=os.path.join(path1,path2,path3)</span><br><span class="line">print(path20)</span><br><span class="line">/aaaa/bbbb/cccc</span><br><span class="line"></span><br><span class="line">os.path.expanduser(path)  将路径中的～转换成user目录</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">path=<span class="string">'~/baidu.com'</span></span><br><span class="line">tmp=os.path.expanduser(path)</span><br><span class="line">print(tmp)</span><br><span class="line">/Users/qingclass/baidu.com</span><br><span class="line"></span><br><span class="line">os.path.join(path)  <span class="comment">#把目录和文件名合成一个路径</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>切片</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>功能测试基础知识.md</title>
    <link href="undefined2020/01/04/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>2020/01/04/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<hr><p>[TOC]</p><h2 id="测试理论"><a href="#测试理论" class="headerlink" title="测试理论"></a>测试理论</h2><h3 id="软件开发模型"><a href="#软件开发模型" class="headerlink" title="软件开发模型"></a>软件开发模型</h3><h4 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h4><p><strong>模型：</strong>需求分析-概要设计-详细设计-编码-软件测试-软件维护</p><p><strong>优点：</strong>线性模型，是其他模型的基础，文档驱动；开发的各个阶段比较清晰，当前阶段完成之后只需关注后续阶段</p><p><strong>缺点：</strong>风险后延，不适应需求的变化</p><h4 id="快速原型"><a href="#快速原型" class="headerlink" title="快速原型"></a>快速原型</h4><p><strong>模型：</strong>快速分析-构造-运行-评价-快速分析-构造-运行-评价-快速分析…</p><p><strong>特点：</strong>在开发真实系统之前先构造一个原型，在该原型的基础上，逐渐完成整个系统的开发工作</p><p><strong>优点：</strong>支持用户参与，适应需求变化，减少由于需求不明带来的项目开发风险</p><p>####螺旋模型</p><p><strong>优点：</strong>引进了风险分析活动</p><p><strong>缺点：</strong>需要丰富的风险评估经验和专业知识</p><h3 id="软件测试模型"><a href="#软件测试模型" class="headerlink" title="软件测试模型"></a>软件测试模型</h3><p>####v模型</p><p><strong>示意图：</strong>需求分析-概要设计-详细设计-编码-单元测试-集成测试-系统测试-验收测试</p><p><strong>缺点：</strong>返工量大，灵活性比较低</p><h4 id="w模型"><a href="#w模型" class="headerlink" title="w模型"></a>w模型</h4><p><strong>示意图：</strong>需求分析（验收/系统测试设计）-概要设计（集成测试设计）-详细设计（单元测试设计）-编码（单元测试）-集成（集成测试）-实施（系统测试）-交付（验收测试）</p><p><strong>优点：</strong>测试伴随着整个软件的开发周期，早介入，早发现，早修复且不仅对程序，文档和设计也进行测试</p><p>####H模型</p><p><strong>示意图：</strong>测试准备-测试就绪点-测试执行</p><h2 id="软件测试的分类"><a href="#软件测试的分类" class="headerlink" title="软件测试的分类"></a>软件测试的分类</h2><h3 id="按阶段划分"><a href="#按阶段划分" class="headerlink" title="按阶段划分"></a>按阶段划分</h3><p><strong>单元测试：</strong>针对软件设计中的最小单位-程序模块，进行正确性检查的测试工作</p><p><strong>集成测试：</strong>在单元测试的基础上，将所有程序模块进行有序的递增的测试，重点测试不同模块的接口部分</p><p><strong>系统测试：</strong>将整个软件系统看作一个整体进行测试，测试的依据是软件需求文档</p><p><strong>验收测试：</strong>检验软件是否符合用户需求的测试</p><p>​    α测试：内部版本，软件开发者内部交流，该版本软件bug较多，普通用户最好不要安装</p><p>​    β 测试：公测版本，对所有用户开放的测试版本 ，软件公司免费发布，用户从相关网站上下载，通过一些专业爱好者的测试，将问题反馈给开发者，开发者进行有针对性的修改</p><p>​    γ测试：软件版本正式发行的候选版本，该版本已经相当成熟了与即将发布的正式版本相差无几，成为正式发布的候选版本</p><h3 id="按是否查看源代码"><a href="#按是否查看源代码" class="headerlink" title="按是否查看源代码"></a>按是否查看源代码</h3><p><strong>黑盒测试:</strong>完全不考虑程序内部结构和内部特性，注重于测试软件的功能需求，只关心软件的输入数据和输出数据</p><p>​    ‘功能测试’：逻辑功能测试，界面测试，安装测试</p><p>​    ‘性能测试’：时间性能，稳定性测试，负载测试，压力测试</p><p><strong>白盒测试：</strong>看源代码和程序结构</p><p><strong>灰盒测试：</strong>介于白盒测试和黑盒测试之间，灰盒测试多用户集成测试阶段，不仅考虑输入和输出还关注程序内部的情况</p><h3 id="按是否运行"><a href="#按是否运行" class="headerlink" title="按是否运行"></a>按是否运行</h3><p><strong>静态测试：</strong>不实际运行被测软件，而只是静态的检查程序代码，界面或文档中可能存在的错误过程</p><p><strong>动态测试：</strong>实际运行被测程序，输入相应的测试数据检查实际输出结果和预期结果是否相符的过程</p><h3 id="按是否自动化"><a href="#按是否自动化" class="headerlink" title="按是否自动化"></a>按是否自动化</h3><p><strong>人工测试/手工测试</strong>：测试人员手动去进行的测试</p><p><strong>自动化测试：</strong>利用代码或工具帮助人工进行测试</p><h3 id="软件测试的其他分类"><a href="#软件测试的其他分类" class="headerlink" title="软件测试的其他分类"></a>软件测试的其他分类</h3><p><strong>冒烟测试：</strong>对系统进行最基本功能的测试，保证基本的功能和流程能走通</p><p><strong>回归测试：</strong>当修复一个bug后，把之前的测试用例在新的代码下进行再次测试</p><p><strong>随机测试：</strong>主要是对被测软件的一些重要功能进行复测，也包括测试哪些当前测试用例没有覆盖到的部分</p><p><strong>探索性测试：</strong>同时设计测试和执行测试，测试人员通过测试不断学习被测系统</p><h2 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h2><p>定义：为特定的目的而设计的一组测试输入，执行条件和预期结果的文档</p><h3 id="测试用例的8大要素"><a href="#测试用例的8大要素" class="headerlink" title="测试用例的8大要素"></a>测试用例的8大要素</h3><p>用例编号，用例标题，测试项目，用例级别，预置条件，测试输入，执行步骤，预期结果</p><h3 id="测试用例设计方法"><a href="#测试用例设计方法" class="headerlink" title="测试用例设计方法"></a>测试用例设计方法</h3><p>等价类划分法</p><p>​    有效等价类（满足需求）：</p><p>​    无效等价类（不满足需求）：</p>]]></content>
    
    
    
    <tags>
      
      <tag>功能测试</tag>
      
      <tag>开发模型</tag>
      
      <tag>测试模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电脑手机公司相关常识.md</title>
    <link href="undefined2019/12/28/%E7%94%B5%E8%84%91%E6%89%8B%E6%9C%BA%E7%9B%B8%E5%85%B3%E5%B8%B8%E8%AF%86/"/>
    <url>2019/12/28/%E7%94%B5%E8%84%91%E6%89%8B%E6%9C%BA%E7%9B%B8%E5%85%B3%E5%B8%B8%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>###电脑手机的快捷键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">iphone6s截屏键：关机键+home键</span><br><span class="line"></span><br><span class="line">小米手机的截屏：右边音量下键+屏幕上的三个横线同时摁；</span><br><span class="line"></span><br><span class="line">Vivo手机截屏：右侧手机电源键+音量下键</span><br><span class="line"></span><br><span class="line">OPPO手机截屏：三指往下滑；</span><br><span class="line"></span><br><span class="line">Mac电脑Chrome浏览器开发者工具的快捷键：</span><br><span class="line"></span><br><span class="line">开发者工具：option＋command＋i</span><br><span class="line"></span><br><span class="line">javascript控制台：option＋command＋j</span><br><span class="line"></span><br><span class="line">或者按option＋command＋c也可以打开</span><br><span class="line"></span><br><span class="line">在终端中打开另一个终端的快捷键：command+T</span><br></pre></td></tr></table></figure><h3 id="Mac电脑便利贴"><a href="#Mac电脑便利贴" class="headerlink" title="Mac电脑便利贴"></a>Mac电脑便利贴</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">大的显示器自己的便利贴</span><br><span class="line">Mac笔记本电脑需要自己在appstore里面下载Simple Antnotes获取安装即可-⌘+n新建一个便利签</span><br></pre></td></tr></table></figure><p>###公司常用语</p><p><strong>PMO</strong>:PMO(Project Management Office)一般称为项目管理办公室、项目管理中心或者项目管理部，是在组织内部将实践、过程、运作形式化和标准化，同时在组织内各机能间，为推动专案前进产生各种工作资源冲突时，负责协调整合的机能，所以是为了提高组织管理成熟度的核心部门，它根据业界最佳实践和公认的项目管理知识体系（PMBOK），并结合企业自身的业务和行业特点，为组织量身定制项目管理流程、培养项目经理团队、建立项目管理信息系统、对项目提供顾问式指导、开展多项目管理等，以此确保项目成功率的提高和组织战略的有效贯彻和执行。</p><p><strong>MVP</strong>:MVP的全称为Model-View-Presenter，Model提供数据，View负责显示，Presenter负责逻辑的处理。</p><p>####Mac换行刷新快捷键</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shift+enter,换行</span><br><span class="line">shift+command+R,刷新</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>电脑</tag>
      
      <tag>手机</tag>
      
      <tag>公司</tag>
      
      <tag>常识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试相关常识.md</title>
    <link href="undefined2019/11/19/%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3%E5%B8%B8%E8%AF%86/"/>
    <url>2019/11/19/%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3%E5%B8%B8%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>###测试常识</p><p>微信开发者工具的使用</p><p>微信开发者文档：一个用户针对一个公众号会产生一个OpenID,</p><p>微信开发者工具可以方便微信开发者和测试人员模拟用户的手机操作；</p><p>####大驼峰和小驼峰命名的区别？</p><p>大驼峰：每个单词的首字母大写；小驼峰：第一个单词的首字母小写，后续单词的首字母均大写</p><p>####K12是什么？</p><p>K12是学前教育至高中教育的缩写，现在普遍被用来代指基础教育</p><h4 id="苹果手机怎么清cookies？android手机怎么清cookies？浏览器怎么清cookies"><a href="#苹果手机怎么清cookies？android手机怎么清cookies？浏览器怎么清cookies" class="headerlink" title="苹果手机怎么清cookies？android手机怎么清cookies？浏览器怎么清cookies?"></a>苹果手机怎么清cookies？android手机怎么清cookies？浏览器怎么清cookies?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IOS:设置-Safari-清楚历史记录与网站数据和cookies;</span><br><span class="line"></span><br><span class="line">android：点击手机浏览器的图标-点击右上角的三个点-点击设置-安全与隐私-清除浏览器数据和cookie-勾选cookie和网站数据-确定；</span><br><span class="line"></span><br><span class="line">浏览器：点击浏览器右上方的向上箭头-更多工具-清楚浏览器数据-选择cookie及其他网站数据-清楚数据；</span><br></pre></td></tr></table></figure><h4 id="灰度测试？"><a href="#灰度测试？" class="headerlink" title="灰度测试？"></a>灰度测试？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在某项产品或应用正式发布之前，选择特定人群试用，逐步扩大其适用者数量，以便及时发现和纠正其中的问题</span><br><span class="line"></span><br><span class="line">适用的范围：软件要在不久的将来推出一个全新的功能或者做一次比较大的改版</span><br><span class="line"></span><br><span class="line">灰度测试的方式有两种：软件系统内自带灰度测试发布系统；适用第三方工具辅助进行；</span><br></pre></td></tr></table></figure><h4 id="产品从开发到上线需要经过那几个环境？"><a href="#产品从开发到上线需要经过那几个环境？" class="headerlink" title="产品从开发到上线需要经过那几个环境？"></a>产品从开发到上线需要经过那几个环境？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本地环境-测试环境-回归环境-预上线环境（会连接生产环境的数据库，使用生产环境的数据进行测试）-灰度测试环境-线上环境/生产环境（所有服务器的代码都已经是最新的）</span><br></pre></td></tr></table></figure><h4 id="MVC-MVP-MVVM"><a href="#MVC-MVP-MVVM" class="headerlink" title="MVC?MVP?MVVM?"></a>MVC?MVP?MVVM?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">M:model的缩写，可以理解为网站数据（数据保存）</span><br><span class="line"></span><br><span class="line">V：view的缩写，代表网站的界面（用户的界面）</span><br><span class="line"></span><br><span class="line">C:controller的缩写，可以理解为php, asp等这类后台的语言（业务逻辑）</span><br><span class="line"></span><br><span class="line">P:presenter的缩写</span><br><span class="line"></span><br><span class="line">M：最后一个M,是viewmodel</span><br><span class="line"></span><br><span class="line">MVC是单向的：v-c-m-v</span><br><span class="line"></span><br><span class="line">MVP是双向的：v--p--m</span><br><span class="line"></span><br><span class="line">MVVM:v-viewmodel—m</span><br></pre></td></tr></table></figure><h4 id="url由什么组成？"><a href="#url由什么组成？" class="headerlink" title="url由什么组成？"></a>url由什么组成？</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">url简称统一资源定位符，由协议类型，主机名，路径，文件名组成</span><br><span class="line"></span><br><span class="line">http://baike.baidu.com/view/<span class="number">567419.</span>htm</span><br><span class="line"></span><br><span class="line">URL 就是 Uniform Resource Locator，统一资源定位符， 网址。</span><br><span class="line"></span><br><span class="line">地址构成：</span><br><span class="line"></span><br><span class="line">protocol :// hostname[:port] / path / ;parameters<span class="comment">#fragment</span></span><br><span class="line"></span><br><span class="line">即 通讯协议，主机名，通讯口，路经，参数，查询，信息片断</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line"></span><br><span class="line">https://zhidao.baidu.com/question/2270814807896158308.html?entry=qb_ihome_tag</span><br></pre></td></tr></table></figure><h4 id="什么是域名？域名跟url有什么关系？"><a href="#什么是域名？域名跟url有什么关系？" class="headerlink" title="什么是域名？域名跟url有什么关系？"></a>什么是域名？域名跟url有什么关系？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">域名是人们为了便于记忆，按照一定的规则给Internet上的计算机起的名字，通常由一串用.分割的字符组成，两个或两个以上的词构成，域名是唯一的，url包含域名</span><br><span class="line"></span><br><span class="line">通俗地说，URL是一个详细地址（比如xx家yy房间xx东西）</span><br><span class="line"></span><br><span class="line">域名是一个字符串形式的服务器地址（相当于上面的xx家），这个主要是方便人阅读和记忆。</span><br><span class="line"></span><br><span class="line">IP地址是机器语言形式的服务器地址（相当于上面的xx家），这个是网络底层实际使用的地址，主要是机器来处理的。</span><br><span class="line"></span><br><span class="line">用域名访问服务器的话，计算机先回向域名服务器（dns）请求把域名翻译成IP地址，然后再去用ip地址访问服务器。</span><br><span class="line"> 域名？</span><br><span class="line">域名是由前缀和后缀组成，前缀和后缀之间通过.连接（例如：baidu.com）</span><br></pre></td></tr></table></figure><h4 id="PM-RD-QA-OP是什么意思？"><a href="#PM-RD-QA-OP是什么意思？" class="headerlink" title="PM,RD,QA,OP是什么意思？"></a>PM,RD,QA,OP是什么意思？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PM:Product  Manager 产品经理</span><br><span class="line"></span><br><span class="line">RD:Research <span class="keyword">and</span> Development engineer 研发工程师 有一定经验的专业工作者</span><br><span class="line"></span><br><span class="line">QA:Quality Aassurance  测试人员  保证产品质量</span><br><span class="line"></span><br><span class="line">OP：Operator 操作员 管理员</span><br></pre></td></tr></table></figure><p>####公众号收到消息必须是用户和公众号保持24或48小时活跃</p><h4 id="谷歌浏览器如何让申请个人用户？"><a href="#谷歌浏览器如何让申请个人用户？" class="headerlink" title="谷歌浏览器如何让申请个人用户？"></a>谷歌浏览器如何让申请个人用户？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打开浏览器-点击人头-选择管理用户-点击添加用户-邮箱注册</span><br></pre></td></tr></table></figure><p>####图数据库（GDB）</p><p>在线数据库管理系统，图数据库在进行2度以上的查询速度远高于关系型数据库</p><p>g.E():查询所有</p><h4 id="cookies和session的区别？"><a href="#cookies和session的区别？" class="headerlink" title="cookies和session的区别？"></a>cookies和session的区别？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>cookies数据存在放在客户的浏览器上，session数据存在服务器上；</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>cookies没有session安全；</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>session占用服务器的性能，当考虑减轻服务器的压力时使用cookies;</span><br><span class="line"></span><br><span class="line">总结：最好将登陆信息等重要信息放在session中，其他信息如果保留可以放在cookies里</span><br></pre></td></tr></table></figure><h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN?"></a>CDN?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">简介：CDN的全称是Content Delivery Network即内容分发网站，CDN是构建在现有网络基础之上的智能虚拟网络；</span><br><span class="line"></span><br><span class="line">作用：使用户就近获取所需内容，降低网络堵塞，提高用户访问响应速度和命中率，</span><br></pre></td></tr></table></figure><p><strong>一个汉字占两个字符，一个数字或英文（不分大小写）只占一个字符</strong></p><p>####服务器错误的几种状态</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">500</span>:服务器内部错误，可能是用户权限或者数据库连接错误</span><br><span class="line"></span><br><span class="line"><span class="number">501</span>:服务器还不具有请求功能</span><br><span class="line"></span><br><span class="line"><span class="number">502</span>:服务器上的一个错误网关，先请一下缓存或在服务器上进行刷新试试，如果不行让程序员处理</span><br><span class="line"></span><br><span class="line"><span class="number">503</span>:服务器不可用，出现的原因大多是服务器正在维护或暂停，还可能是cpu占用频率大导致，过一会就好了</span><br><span class="line"></span><br><span class="line"><span class="number">504</span>:代表网关超时，需要专业的负责人处理</span><br><span class="line"></span><br><span class="line"><span class="number">505</span>:http的版本是不受支持的，需要在internet选项的高级下进行设置</span><br></pre></td></tr></table></figure><h4 id="静默授权-非静默授权"><a href="#静默授权-非静默授权" class="headerlink" title="静默授权/非静默授权"></a>静默授权/非静默授权</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">静默授权：只要用户打开网页就可以获取他的openid，unionid,但获取不到用户的头像和昵称</span><br><span class="line"></span><br><span class="line">非静默授权：需要用户手动点击同意，可以获取用户的昵称和头像</span><br></pre></td></tr></table></figure><h4 id="unionid-openid-unionid"><a href="#unionid-openid-unionid" class="headerlink" title="unionid/openid/unionid"></a>unionid/openid/unionid</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>appid</span><br><span class="line"></span><br><span class="line">公众号的唯一标识</span><br><span class="line"></span><br><span class="line">注册即分配，可在公众号后台查询</span><br><span class="line"></span><br><span class="line">用来进行公众号，小程序等的各种交互功能</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>openid</span><br><span class="line"></span><br><span class="line">用户在该公众号下的唯一标识</span><br><span class="line"></span><br><span class="line">加密后的微信号</span><br><span class="line"></span><br><span class="line">一个公众号对应一个openid</span><br><span class="line"></span><br><span class="line">用户在关注公众号后，公众号可获取</span><br><span class="line"></span><br><span class="line">可通过openid来获取用户基本信息</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>unionid</span><br><span class="line"></span><br><span class="line">一个公司有多个公众号和小程序，一个用户对于不同的公众号和小程序有不同的openid,此时就需要申请一个微信开放平台账号，将这些公众号和小程序绑定起来，一个微信用户对同一个微信开放平台下的公众号和小程序就有相同的unionid</span><br></pre></td></tr></table></figure><h4 id="Android-ios怎么进入开发者模式"><a href="#Android-ios怎么进入开发者模式" class="headerlink" title="Android/ios怎么进入开发者模式"></a>Android/ios怎么进入开发者模式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Andriod手机直接在百度上搜索需要进入开发者模式的机型即可</span><br><span class="line"></span><br><span class="line">iOS需要结合xcode才能进入开发者模式</span><br></pre></td></tr></table></figure><p><strong>进行app/公众号测试的时候需要在android，ios,大屏，小屏，不同的操作系统上进行测试，写测试用例的时候，除了根据业务需要写用例之外，还需要考虑实际的业务场景</strong></p><h4 id="逻辑删除-物理删除"><a href="#逻辑删除-物理删除" class="headerlink" title="逻辑删除/物理删除"></a>逻辑删除/物理删除</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">物理删除：将文件或数据测底清除，不可逆</span><br><span class="line"></span><br><span class="line">逻辑删除：只是在逻辑上删除了文件或数据，没有测底删除，可逆，通过某种工具或手段还可恢复</span><br></pre></td></tr></table></figure><p>####前后端如何让对于文本框中的空格/空行需要进行校验</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">前端可以限制字数，进行校验一个空格算一个字符</span><br><span class="line">后端，可以对空行进行校验，对于不满足规则的不让存储在数据库中不允许在数据库中进行修改</span><br></pre></td></tr></table></figure><h4 id="慢查询"><a href="#慢查询" class="headerlink" title="慢查询"></a>慢查询</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户端接口能保持在<span class="number">300</span>ms以内,你就认为它性能还不错</span><br><span class="line">管理端接口能保持在<span class="number">800</span>ms内,你也认为可接受的范围</span><br><span class="line">不用公司对性能的要求不同</span><br></pre></td></tr></table></figure><p>####脏数据怎么产生的？会造成什么影响？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">脏数据：从目标中取出的数据已经过期、错误或者没有意义，这种数据就叫做脏数据。</span><br><span class="line">脏读：读取出来脏数据就叫脏读。</span><br><span class="line"><span class="number">1</span>、数据库中的并发事务处理问题：</span><br><span class="line">脏读：在并发访问的情况下，不同的事务对相同的数据进行操作，在事务A修改数据还未提交的时候，事务B对该数据进行读取，读出了事物A修改过后的数据，但是事物A最终没有提交，这种情况就是数据库中的脏读情况</span><br><span class="line">更新丢失：对于同一行数据不同事务进行更新，结果覆盖</span><br><span class="line">幻读：事务A前后两次读取，后一次读取的数据变多了，事物B在两次读取中间已经进行数据插入</span><br><span class="line">不可重复读：事务A读取了事务B修改前后的两次数据，不符合隔离型</span><br><span class="line">隔离等级：可以解决上述问题，mysql默认可重复读的隔离等级，只会存在读取的数据和数据库不一致的问题</span><br><span class="line"><span class="number">2</span>、mybati一级缓存中的脏数据：</span><br><span class="line">mybatis的一级缓存：默认是SqlSession级别,只要通过session查过的数据，都会放在session上，下一次再查询相同id的数据，都直接冲缓存中取出来，而不用到数据库里去取了。</span><br><span class="line">mybatis一级缓存脏数据：当有不同的sqlSession在对数据库进行操作，一级缓存只能保证当前sqlSession中的增删改在一级缓存中自动更新，就会产生脏数据。</span><br><span class="line"><span class="number">3</span>、mybati二级缓存中的脏数据：</span><br><span class="line">mybatis二级缓存：是SessionFactory级别，和namespace绑定，同一个namespace放到一个缓存对象中，当这个namaspace中执行了非sselect语句的时候，整个namespace中的缓存全部清除掉。</span><br><span class="line">mybatis二级缓存脏数据：引起脏读的操作通常发生在多表关联操作中，比如在两个不同的mapper中都涉及到同一个表的增删改查操作，当其中一个mapper对这张表进行查询操作，此时另一个mapper进行了更新操作刷新缓存，然后第一个mapper又查询了一次，那么这次查询出的数据是脏数据。出现脏读的原因是他们的操作的缓存并不是同一个。</span><br><span class="line"> </span><br><span class="line">所以不推荐使用mybatis的自带一二级缓存，推荐使用第三方缓存：memcached或者redis。</span><br><span class="line">（<span class="number">3</span>）常见问题：</span><br><span class="line">redis中怎么更新缓存避免脏读？</span><br><span class="line">（<span class="number">4</span>）解决方案：</span><br><span class="line">读写部分：</span><br><span class="line"><span class="keyword">if</span>(redis存在数据)&#123;</span><br><span class="line">    读取redis数据</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    数据库读取，同时存redis+设置超时时间</span><br><span class="line"> </span><br><span class="line">更新部分：</span><br><span class="line"><span class="keyword">if</span>(数据库update)&#123;</span><br><span class="line">    更新redis+设置超时时间</span><br><span class="line"> </span><br><span class="line">（<span class="number">5</span>）编码实战：</span><br><span class="line">演示读写部分和更新部分</span><br><span class="line">（<span class="number">6</span>）拓展思考：</span><br><span class="line">还有哪些其他方式进行redis数据更新</span><br><span class="line"><span class="number">1</span>、主动更新：后台点击更新缓存按钮，从DB查找最新数据集合，删除原缓存数据，存储新数据到缓存（或者用定时任务来做）</span><br><span class="line">问题：更新过程中删除掉缓存后刚好有业务在查询，那么这个时候返回的数据会是空，会影响用户体验，如果高并发穿透DB，可能导致服务器崩溃</span><br><span class="line"><span class="number">2</span>、由用户触发更新：前台获取数据时发现没有缓存数据就会去数据库同步数据到缓存</span><br><span class="line">问题：当并发请求获取缓存数据不存在的时候，就会产生并发的查询数据的操作</span><br><span class="line"> </span><br><span class="line"><span class="number">3</span>、提前加载好数据：后台点击更新缓存按钮，从DB查找最新数据集合，这里不删除缓存，通过遍历数据覆盖和删除掉无效的数据</span><br><span class="line">问题：逻辑相对麻烦，而且更新机制无法通用</span><br></pre></td></tr></table></figure><h4 id="容器？事物？"><a href="#容器？事物？" class="headerlink" title="容器？事物？"></a>容器？事物？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">简单地说，一个容器包含了完整的运行时环境：除了应用程序本身之外，这个应用所需的全部依赖、类库、其他二进制文件、配置文件等，都统一被打入了一个称为容器镜像的包中。通过将应用程序本身，和其依赖容器化，操作系统发行版本和其他基础环境造成的差异，都被抽象掉了。比如docker</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">百度百科中解释：指作为单个逻辑工作单元执行的一系列操作，要么完全地执行，要么完全地不执行。</span><br><span class="line">简单的说，事务就是并发控制的单位，是用户定义的一个操作序列。</span><br><span class="line">而一个逻辑工作单元要成为事务，就必须满足ACID属性。</span><br><span class="line">A：原子性（Atomicity）</span><br><span class="line">    事务中的操作要么都不做，要么就全做。</span><br><span class="line">C：一致性（Consistency）</span><br><span class="line">    事务执行的结果必须是从数据库从一个一致性状态转换到另一个一致性状态。</span><br><span class="line">I：隔离性（Isolation）</span><br><span class="line">    一个事务的执行不能被其他事务干扰</span><br><span class="line">D：持久性（Durability）</span><br><span class="line">    一个事务一旦提交，它对数据库中数据的改变就应该是永久性的</span><br><span class="line">事物的隔离级别：</span><br><span class="line"> <span class="number">1.</span>读未提交（Read Uncommitted）</span><br><span class="line">    引发脏读（读取了未提交的数据）</span><br><span class="line"> <span class="number">2.</span>读已提交（Read Committed）</span><br><span class="line">   这是大多数数据库系统默认的隔离级别，但不是MySQL默认的</span><br><span class="line">   只能看见已经提交事务所做的改变</span><br><span class="line">   引发不可重复读，不可重读读意味着我们同一事务执行完全相同的select语句时可能看到不一样的结果。——&gt;导致这种情况的原因可能有：(<span class="number">1</span>)有一个交叉的事务有新的commit，导致了数据的改变;(<span class="number">2</span>)一个数据库被多个实例操作时,同一事务的其他实例在该实例处理其间可能会有新的commit，多个commit提交时，只读一次出现结果不一致</span><br><span class="line"><span class="number">3.</span>可重复读（Repeatable Read）</span><br><span class="line">   这是MySQL的默认事务隔离级别</span><br><span class="line">   它确保同一事务的多个实例在并发读取数据时，看到同样的数据行</span><br><span class="line">   此级别可能出现的问题--幻读（Phantom Read），当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行</span><br><span class="line"> InnoDB和Falcon存储引擎通过多版本并发控制(MVCC，Multiversion Concurrency Control)机制解决了该问题</span><br><span class="line"><span class="number">4.</span>可串行化（Serializable）</span><br><span class="line">    这是最高的隔离级别</span><br><span class="line">    它通过强制事务排序，使之不可能相互冲突，从而解决幻读问题。简言之，它在每个读的数据行上加上共享锁。</span><br><span class="line">    可能导致大量的超时现象和锁竞争</span><br><span class="line">事务通常以begin（start） transaction 开始，以commit 或 rollback 结束。</span><br><span class="line">commit 表示提交，将事务中所有对数据库的更新写会到磁盘的物理数据库中，事务正常结束。</span><br><span class="line">rollback表示回滚，即在事务运行的过程中发生了某种故障，事务不能继续进行，系统将事务中对数据库的所有以完成的操作全部撤消，滚回到事务开始的状态。</span><br><span class="line">事物运行的三种模式：</span><br><span class="line"><span class="number">1.</span>自动提交事务</span><br><span class="line">    每条单独的语句都是一个事务，每个语句都隐含一个commit</span><br><span class="line"><span class="number">2.</span>显式事务</span><br><span class="line">    以begin transaction 开始，以commit 或 rollback 结束。</span><br><span class="line"><span class="number">3.</span>隐性事务</span><br><span class="line">    在前一个事务完成时，新事务隐式启动，但每个事务仍以commit或rollback显示结束</span><br></pre></td></tr></table></figure><h4 id="消息通知的类型"><a href="#消息通知的类型" class="headerlink" title="消息通知的类型"></a>消息通知的类型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">消息通知:App推送，微信公众号通知（用户在<span class="number">48</span>小时内与公众号保存互动），短信通知</span><br><span class="line">App推送：分为消息通知和站内信</span><br><span class="line">这是<span class="number">2</span>种消息类型，消息通知一般用户点击或清除后不会留痕，所以一般的做法是同时发送这<span class="number">2</span>种消息，PUSH强提醒，站内信为了留痕或者保留入口。</span><br><span class="line">基本定义的区别： </span><br><span class="line">站内信主要是APP内部自己设置的重要信息展示模块，展示信息的内容、样式、时间都是由APP自行设计。 </span><br><span class="line">消息通知说的就是APP PUSH通过推送通道进行消息推送，一般展示在手机的通知栏或者通过顶部弹窗展示。 </span><br><span class="line">从展示位置的区别：</span><br><span class="line">消息推送展示在手机操作系统的通知栏或者顶部弹窗，站内信是APP内部，自行设计安排。  </span><br><span class="line">从触达效果的区别：</span><br><span class="line">一般消息推送会伴随声音、震动提示用户，提醒到位；</span><br><span class="line">站内信一般是静默展示，且实现逻辑主要是用户登录APP后客户端去服务端同步数据。</span><br><span class="line">消息痕迹的区别：</span><br><span class="line">消息通知一般用户点击或清除后不会留痕；站内信可以长时间保留，主要是看APP自己的设计。  </span><br><span class="line">从事实现逻辑区别：</span><br><span class="line">消息通知是主动调用手机终端厂商或推送服务方的通道(消息推送可以通过自己研发，显然这样的研发成本较高，大部分创业公司以及互联网转型的公司都采用的是第三方工具，国内较为普遍的是有这些：腾讯信鸽，百度云推送，个推，极光推送，华为云推送。)</span><br><span class="line">站内信一般只是数据记录，在用户登录APP进入站内信模块时才会主动从客户端向服务端请求数据。</span><br></pre></td></tr></table></figure><h4 id="如何判断一个问题是前端还是后端的问题？"><a href="#如何判断一个问题是前端还是后端的问题？" class="headerlink" title="如何判断一个问题是前端还是后端的问题？"></a>如何判断一个问题是前端还是后端的问题？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">后端问题：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>观察日志，有明确的exception(终端查看日志的命令：tail -f)</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>接口报<span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>返回的报文不符合接口文档，参数是否区分大小写，字母拼音错误，int或者string与接口文档不一致。 <span class="number">4.</span>返回的值前端识别不了，协商后，后台配合扩充字段满足的前端需求</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>应该返回<span class="number">0</span>条记录的，但是返回了全部，应该返回<span class="number">1</span>条记录的，但是返回了多条记录</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>应该返回有序的数据，但是返回了无序的数据</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>页面结果不正确（没页数，第一页，第二页，第三页）</span><br><span class="line"></span><br><span class="line">前端问题：</span><br><span class="line"></span><br><span class="line">界面问题：贴图错误，文字错误，样式错误 </span><br><span class="line"></span><br><span class="line">功能问题：请求接口的url错误，http中的请求参数错误</span><br></pre></td></tr></table></figure><h4 id="html-css-js"><a href="#html-css-js" class="headerlink" title="html,css,js?"></a>html,css,js?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Html:文字，页面的跳转</span><br><span class="line"></span><br><span class="line">css:样式，比如排版，布局，颜色，背景</span><br><span class="line"></span><br><span class="line">Js:负责行为，交互类的问题</span><br></pre></td></tr></table></figure><h4 id="B端？C端？"><a href="#B端？C端？" class="headerlink" title="B端？C端？"></a>B端？C端？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">B端：浏览器端</span><br><span class="line"></span><br><span class="line">        后端：主页负责逻辑处理和运算</span><br><span class="line"></span><br><span class="line">        前端：主要负责展示</span><br><span class="line"></span><br><span class="line">C端：客户端</span><br><span class="line"></span><br><span class="line">         客户端：安卓，iOS</span><br><span class="line"></span><br><span class="line">  h5:是一个页面</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>测试相关常识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="undefined2019/11/06/H5%E6%B5%8B%E8%AF%95/"/>
    <url>2019/11/06/H5%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>H5是HTML5简称，是最新的web端开发语言版本，是移动端的web页面；从广义上来说，HTML5是包括HTML,CSS,JS在内的一套技术组合；<br>HTML负责网页的具体内容和结构；CSS网页的样式，主要负责美化，JS负责网页的交付效果，比如对用户鼠标点击事件作出相应；<br>H5应用的地方：APP的活动专题页面，新闻网页，微信公众号文章页面，在PC或者手机浏览器都可以直接访问H5页面；<br>优点：可以跨平台使用，开发成本相对较低，可随时上线更新版本，适合快速迭代，可以轻量的触达用户，提供更便捷的服务</p><p>如何识别H5？<br>1.长按页面，看会不会有震动（andriod）或者出现文字选择粘贴(andriod/ios)；<br>2.横竖屏相互切换，能自适应且布局不会乱掉；</p><p>测试关注点？<br>1.业务逻辑测试，跟业务需求来定；<br>2.页面元素ui测试（文字，图片，页面布局等测试）<br>文字：风格是否一致，错别字，标点符号统一，换行是否显示正常，一行长文字是省略显示还是全显示，图片与文字是否一致，刷新页面文字是否展示；<br>图片：静态（大小，格式），动态（大小，风格，准确性动态图，转场动画，loading动画，点击动画等），图片适配（不同屏幕和分辨率进行适配）；<br>页面布局：页面文字图片是否能自适应屏幕，整体布局是否合理等；<br>内嵌链接：空链接，刷新链接数据是否展示，链接跳转是否正确；<br>3.页面操作（刷新与返回，翻页，弹窗出现/关闭，浮层页面，页面提示，手机操作相关）<br>刷新与返回：页面刷新是否仍然处于当前页面，用户主动点击刷新按钮是否仍处于当前页面，点击返回，回退页面是否是期望页面；<br>翻页：遇到翻页加载的页面，需要注意内容为一页或多页的情况；数据分页加载时，注意后续页面请求数据的正确；快速操作场景中，请求页数是不是依次递增（如第一页尚未加载出来的时候仍然继续上拉操作时是否发出对应的请求）；<br>页面的提示：弱网络下，数据加载较慢，是否有对应的loading提示；接口获取异常时，提示是否合理；刷新页面或加载新内容时页面是否有抖动；<br>手机操作相关：锁屏知乎展示的页面；退到后台再重新呼出在前台展示；<br>4.适配测试<br>图片高清适配，字体大小适配，页面布局宽度适配，横竖屏适配（考虑：不同屏幕尺寸和分辨率的机型进行适配，不同平台安卓和iOS进行适配，横竖屏适配，日夜间模式适配，深色浅色模式适配（iOS13系统））；</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>接口测试</title>
    <link href="undefined2019/10/07/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    <url>2019/10/07/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##接口的分类</p><p><strong>程序内部的接口</strong></p><p>方法与方法，模块与模块之间的交互，程序内部抛出的接口（比如一个app需要先登录才能挑选商品）</p><p><strong>系统对外的接口</strong></p><p>从别的网站或服务器上获取资源或者信息，别人肯定不会把数据库共享给你，会提供一个他们写好的获取数据的方法，从而达到数据库的共享</p><p>##接口测试工具：Yapi</p><p>###特点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>基于Json5和Mockjs定义接口返回数据的结构和文档，效率提升多倍</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>扁平化权限设计，既保证了大型企业级项目的管理，又保证了易用性</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>类似postman的接口调试</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>自动化测试，支持对response断言</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>MockServer除支持普通的随机mock外，还增加了Mock期望功能，根据设置的请求过滤规则，返回期望数据</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>支持postman，har,swagger数据导入</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>免费开源，内部部署，信息再也不怕泄漏</span><br></pre></td></tr></table></figure><p>###Yapi的使用文档</p><p>测试集合-动态（查看项目的操作日志）；-设置（项目组长可以编辑项目信息）；-成员管理（可以添加成员）</p><p>新建一个接口分三步：获取权限，找到一个项目，新建接口</p><p>如果在项目列表中找不到自己想要的项目,可以联系项目组长，把自己添加到项目中</p><p><strong>1.创建分组</strong>只有超级管理员可以创建分组</p><p><strong>2.创建项目</strong>分组成员可创建项目（不是成员可联系分组组长）；项目名称不能重复，包括其他分组；基本路径为接口统一添加了前缀</p><p>1.修改项目（点开项目-项目列表详情页-设置-可修改项目头像和图标/将项目迁移到不同分组内）</p><p>2.复制项目（鼠标放到项目上，左上角有一个复制按钮）</p><p>3.删除项目（进入项目-设置-项目设置-危险操作-查看）</p><p><strong>3.Yapi使用时需要安装Cross-request插件</strong></p><p>Yapi测试使用流程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建分组（个人空间旁边的+号）-创建项目（点击头像旁边的+号/添加项目按钮）-设置（swagger自动同步-创建测试结合，导入接口,自动更新swagger接口数据到Yapi平台）-新建测试结合-新建接口（上一个接口里的参数或返回值作为下一个接口的参数时，.&#123;key&#125;.&#123;params|body&#125;.&#123;path&#125;-其中 ，. 是使用 动态变量 的标志，<span class="number">.269</span>.params 即表示 key 值为 <span class="number">269</span> 用例的请求参数，<span class="number">.269</span>.body 即表示 key 值为 <span class="number">269</span> 用例的返回值。）</span><br></pre></td></tr></table></figure><p>###Yapi的介绍</p><p>1.人员组成：超级管理员（创建组长，分配组长，管理所有成员信息），组长（创建项目，管理分组或项目信息，管理开发着雨成员），开发者/成员（不允许创建分组，不允许修改分组或项目信息）</p><p>组长一般是由项目组长或BU负责人担任（BU是英文business unit的缩写,BU manager –业务单元管理!）</p><p>组长分为：分组组长（修改/删除/创建分组下的项目，分组组长只需要对项目负责，将项目的操作任务安排给项目组长）和项目组长（只属于某一个项目无法操作项目所属分组，是Yapi的基础管理者）</p><p>在每个项目中将服务端开发者设置为项目组长权限，客户端开发者设置为开发者权限</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yapi只需要配置相关的参数和断言语句，就能实现自动化测试</span><br></pre></td></tr></table></figure><p>###Yapi中一个接口的返回结果作为下一个接口的请求参数该如何设置？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">设置-开启json5/开启消息通知(query-返回数据开启)</span><br><span class="line"></span><br><span class="line">设置-环境配置-<span class="keyword">global</span>（全局变量，接口运行或测试集合中可以通过&#123;&#123;<span class="keyword">global</span>.全局变量名&#125;&#125;）来访问当前环境变量下定义的全局变量</span><br><span class="line">**请求配置：**</span><br><span class="line">请求参数处理脚本（context.requestHeader.nonce= context.utils.md5(`$&#123;context.hostname&#125;-$&#123;storage.getItem(<span class="string">"userId"</span>)&#125;-$&#123;Date.now()&#125;`)</span><br><span class="line">context.requestHeader.version=<span class="string">"1.2.0"</span></span><br><span class="line">context.requestHeader.channel=<span class="string">"BE83628C-4A99-4F2F-B26F-AC828D591908"</span></span><br><span class="line">context.requestHeader.platform=<span class="string">"iOS"</span></span><br><span class="line">context.requestHeader.deviceInfo=<span class="string">"model=iPhone10,3&amp;os=iOS 12.2&amp;size=1125x2436&amp;net=unknown"</span></span><br><span class="line"><span class="keyword">if</span>(context.pathname!=<span class="string">"/yiban-app/api/user/v1.0.0/getCheckcode"</span>)&#123;</span><br><span class="line">    context.requestHeader.token=storage.getItem(<span class="string">"token"</span>)</span><br><span class="line">    context.requestHeader.userId=storage.getItem(<span class="string">"userId"</span>)）</span><br><span class="line">响应数据处理脚本（<span class="keyword">if</span>(context.pathname==<span class="string">"/yiban-app/api/user/v1.0.0/getCheckcode"</span>)&#123;</span><br><span class="line">    storage.setItem(<span class="string">'token'</span>, context.responseData.data.token)</span><br><span class="line">    storage.setItem(<span class="string">'userId'</span>, context.responseData.data.userVo.userId)）</span><br><span class="line">这个根据公司的请求头来规范</span><br></pre></td></tr></table></figure><h4 id="断言？"><a href="#断言？" class="headerlink" title="断言？"></a>断言？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">assert</span>.equal(body.code, <span class="number">200</span>)</span><br><span class="line">//心愿id数组</span><br><span class="line">list_1 = body.data.othersTeamWish.map(item=&gt;item.partnerWishId)</span><br><span class="line">//对心愿id数组作降序</span><br><span class="line">list_2 = body.data.othersTeamWish.map(item=&gt;item.partnerWishId).sort(function(a, b)&#123;return b - a&#125;)</span><br><span class="line">//默认的待认领列表按时间降序排列，如果list_1有list_2相同，则排序正确</span><br><span class="line"><span class="keyword">assert</span>.deepEqual(list_1, list_2)</span><br></pre></td></tr></table></figure><h4 id="终端中请求mock地址"><a href="#终端中请求mock地址" class="headerlink" title="终端中请求mock地址?"></a>终端中请求mock地址?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X post ‘mock地址’ | jq ‘.’</span><br></pre></td></tr></table></figure><p>###如何写接口测试用例？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">接口测试用例可分为混合场景测试用例和单个接口测试用例</span><br><span class="line"></span><br><span class="line">写测试用例之前需要先进行场景设计，模拟用户的实际操作，不知道的接口或参数可以直接用charles抓包解决；</span><br><span class="line">写接口测试用例首先看接口文档，看接口文档（swagger）涉及到哪写方面,j接着在石墨上根据着几个大点进行细分</span><br><span class="line">[TOC]</span><br><span class="line"><span class="comment">####怎么做接口测试？</span></span><br><span class="line">项目的前后端调用主要是机遇http协议的接口，所以测试接口时主要是通过工具或代码模拟http请求的发送与接收</span><br><span class="line"></span><br><span class="line"><span class="comment">####什么是接口测试？</span></span><br><span class="line">接口测试是测试系统组件间接口的一种测试，接口测试主要用于检测外部系统与系统之间以及内部各个只系统之间的交互点，测试的重点是要检查数据的交换，传递和控制管理过程，以及系统之间的相互逻辑关系等</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###接口测试流程？</span></span><br><span class="line">需求分析-需求评审-场景设计-编写用例-准备数据-执行测试</span><br><span class="line"><span class="comment">####为什么要进行接口测试？</span></span><br><span class="line">前后端工作进度不一样，只依赖前端进行限制已经完全不能满足安全要求</span><br><span class="line"><span class="comment">###怎么进行接口测试？</span></span><br><span class="line">通过工具模拟客户端向服务端发送请求并接收服务器返回的数据来对接口的功能，逻辑业务，异常，安全进行测试</span><br><span class="line">功能测试：测试这个借口的功能是否实现，并测试这个借口是否按照接口文档进行开发的</span><br></pre></td></tr></table></figure><p><strong>接口用例设计主要是参数校验，功能校验、业务场景校验、安全性及性能校验</strong></p>]]></content>
    
    
    <categories>
      
      <category>Yapi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>接口测试</tag>
      
      <tag>Yapi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>敏捷开发</title>
    <link href="undefined2019/09/20/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/"/>
    <url>2019/09/20/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##App进行一次迭代的流程：</p><p><strong>1.需求评审会</strong>：产品经理，开发（前端，iOS，andriod）,测试坐在一起，产品对这一期的需求进行讲解，开发和测试可以对不懂或难以理解，不好实现的功能进行说明，没有疑问，开发先领一下任务（测试也可以领），看一下需要多长时间能够完成。<br><strong>2.启动会</strong>，开发说一下自己对所领任务的一个需求理解，产品对开发说的不足的地方进行补充，然后大家一起确定一下完成任务需要多长时间，什么时候可以提审，测试什么时候可以测，大概需要多长时间可以测完；产品什么时候可以上线；确定好时间之后只给开发一次延期的机会，如果一次延期还做不完给予扣绩效处罚。<br><strong>3.开发对产品进行开发，测试理解需求文档，写测试用例；</strong><br><strong>4.开发写完，测试开始根据测试用例进行测试；</strong>（开发自测没有问题，会打包发一个测试的链接，点开链接下载测试版的APP，进行测试，有缺陷的话会提交到jira上）(如果时间比较紧的话，开发可以改完一部分bug之后，直接开发)（一般情况下后台的接口会先开发完，开发完之后可以先测接口）<br><strong>5.测试环境测完，发现问题开发进行改正，改完测试回测没有问题可以发布预生产环境，预生产环境测完没有问题可以发布到真正的生产环境中</strong>线上如果有用户反馈及时跟踪定位缺陷，在下一个版本进行修复；<br><strong>6.本次迭代完成之后测试写一份测试报告</strong><br>在测试过程中，测试环境可以随便更改，但线上环境不要随便动，会影响线上用户的使用（切记），如果在测试过程中对于需求不是特别清楚，可以直接问产品，一定要记得及时沟通，有什么需要开发协助的可以直接跟开发或者开发领导提</p>]]></content>
    
    
    
    <tags>
      
      <tag>敏捷开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>公众号测试</title>
    <link href="undefined2019/09/03/%E5%85%AC%E4%BC%97%E5%8F%B7%E6%B5%8B%E8%AF%95/"/>
    <url>2019/09/03/%E5%85%AC%E4%BC%97%E5%8F%B7%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##基础功能点</p><p>​    是否可以正常的关注和取消关注<br>    我们自己提供出去的二维码能够被用户识别，扫描后即可关注我们<br>    用户回复关键字，是否能得到正确的回复<br>    用户是否可以查看往期文章，历史资料<br>    群发用户是否可以收到我们的消息</p><p>##扩展功能点（微商网站类型）</p><p>​    测试基础功能<br>        登录，注册，支付，注册发送的验证码是否可以用等等<br>    测试性能<br>        有时一些微站会进行秒杀活动，需要进行性能测试，保证我们的API接口不崩溃<br>    测试数据库<br>        检查数据是否正常入库或者已进行修改<br>    测试界面的一些数据信息<br>        进行一些操作之后，看看界面的一些信息是否做实时更新<br>    界面检查<br>        不同的手机界面展示不一样</p>]]></content>
    
    
    <categories>
      
      <category>公众号</category>
      
    </categories>
    
    
    <tags>
      
      <tag>公众号</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pycharm永久激活方法</title>
    <link href="undefined2019/09/03/Pycharm%E6%B0%B8%E4%B9%85%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/"/>
    <url>2019/09/03/Pycharm%E6%B0%B8%E4%B9%85%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##Pycharm的永久激活方法<br><strong>第一步：首先电脑上有专业版的Pycharm,点击此链接，下载破解补丁</strong><br>[<a href="https://pan.baidu.com/s/1mcQM8CLUnweY02ahKEr4PQ]" target="_blank" rel="noopener">https://pan.baidu.com/s/1mcQM8CLUnweY02ahKEr4PQ]</a></p><p><strong>第二步：将下载好的破解补丁文件移动到 /Applications/PyCharm.app/Contents/bin/ 目录中</strong></p><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;  mv 破解补丁 /Applications/PyCharm.app/Contents/bin/  </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>第三步：用编辑器打开 /Applications/PyCharm.app/Contents/bin/pycharm.vmoptions 文件，添加  -javaagent:你pycharm的安装路径\bin\JetbrainsCrack-release-enc.jar在最后一行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">​```python</span><br><span class="line">  cd /Applications/PyCharm.app/Contents/bin/</span><br><span class="line">  sudo vi pycharm.vmoptions</span><br></pre></td></tr></table></figure><p><strong>在文件的最下面一行输入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:/Applications/PyCharm.app/Contents/bin/破解补丁</span><br></pre></td></tr></table></figure><p><strong>第四步：启动PyCharm,输入下方的激活码激活，然后点击ok即可。</strong></p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;  ```python</span><br><span class="line">  YZVR7WDLV8-eyJsaWNlbnNlSWQiOiJZWlZSN1dETFY4IiwibGljZW5zZWVOYW1lIjoiamV0YnJhaW5zIGpzIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifV0sImhhc2giOiIxMTA1NzI3NC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-rsJR5mlJcjibqRu1gQAMUCngMe8i+AOWIi+JZkNFYPET2G1ONcLPcIzoATTRi6ofkDm5l+<span class="number">3</span>Y4HXjBPjVU6bHDdMBAzCnUqpXKsCknwSYyPSU0Y5pzuLvw6O9aPlQ46UBoTEC2BL5W6f11S7NlAq7tTbDuvFUynqSGAmTEfuZtKmzRmp20ejTPuMlSO7UqSkZvkg6YvSTrax1d2K+P9SAmVGZ9iC7AzBs4AwTf84QB9qHvE/Nh0oELSHWGG9hsZZ7sVghI/<span class="number">39</span>/jPQFTp8GLFsl36ZPybPhGDam721zxS9H++/eJk23Jz3nxaRluE4dWmpHrDg1qBHp8qVpSFejg2QYw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/<span class="number">5</span>oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/<span class="number">78</span>TmVqFl8nOeD5+<span class="number">07</span>B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+<span class="number">2</span>h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/<span class="number">72</span>W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+<span class="number">9</span>zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/<span class="number">1</span>SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+<span class="number">9</span>x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure><p> ```</p>]]></content>
    
    
    <categories>
      
      <category>Pycharm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mac</tag>
      
      <tag>Pycharm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="undefined2019/09/02/test/"/>
    <url>2019/09/02/test/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##测试人事面试的问题</p><p>*<em>1.自我介绍 *</em></p><p>您好！我叫…，今年…岁，来自…，毕业于…，一直从事…行业，目前有3年的工作经验，熟悉功能测试，自动化测试和接口测试，最近的一个项目是…(对最近的一个项目进行介绍)。</p><p><strong>2.什么专业？为什么想要干测试呢？</strong></p><p> …</p><p><strong>3.你为什么要从上家公司离职？</strong> </p><p>在之前的公司待了两年，技术上没有什么发展空间了，还年轻，就想换一个更好的环境，有一个更大的发展空间。</p><p><strong>4.未来3到5年的一个职业规划？</strong></p><p> … </p><p><strong>5.你们公司在哪？</strong></p><p>（具体到街道，哪号楼，公司旁边有啥？你平时座什么车去？） … </p><p><strong>6.你们公司有多少个人？有几个测试？几个开发？你们由谁管？</strong></p><p>23个人，公司的人员组成：人事（1），老板（1），财务（2），行政（1）， 我们公司技术团队有18个人，前端（4），后台（4），UI设计师（1），andriod（1）,ios（2）,测试（3），运维（1）,产品经理（2）</p><p><strong>7.你们公司主要做什么的？</strong></p><p> … </p><p><strong>8.你经常和那些部门沟通配合？</strong> </p><p>我们经常和前端，后端，UI,产品沟通配合</p><p><strong>9.你们公司老板叫什么？</strong></p><p> … </p><p><strong>10.你之前薪水是多少？现在期望薪资是多少？</strong> </p><p>… </p><p><strong>11.你的薪资是由什么组成的？</strong> </p><p>基本工资+绩效，基本工资.k,绩效工资.k,绩效根据每个月KPI考核表评定，公司五险一金是按照国家最低标准交的，每个月大概扣四百多，扣除个人所得税800多，每个月工资税后大概7.5k左右，不过每个月都有交通补贴（10）+餐补（15），每个月到手差不多8k左右。 </p><p><strong>12.你对公司加班有什么看法？</strong></p><p> 合理的加班或者是线上有急事这样的加班，肯定是义不容辞的，但是如果是形式性加班，每天固定几点才能走或者是996这样的，比较不希望有这样的情况。 </p><p>*<em>13.你还有什么问题要问的吗？ *</em></p><p>技术面试：咱们项目组有多少个人？项目目前处于什么阶段测试情况？都做哪些方面的测试？ 人事面试：咱们公司五险一金的基数？公司加班多不多？上下班时间弹性吗？多久涨一次薪？ </p><p>*<em>14.你的项目做了多久？ *</em></p><p>6个月 </p><p>*<em>15.说一下你的优点？ *</em></p><p>性格外向，喜欢交朋友，擅于与人沟通，具备团队合作精神；有责任心，耐心，勇于担当；学习能力强，能吃苦，抗压能力强；对于要做的事情很执着，一分钟都不想耽误，直至完成；工作生活中都很守时重诺；</p><p>*<em>16.说一下你的缺点？ *</em></p><p>太追求完美，只要自己认定的事，不仅要做成，还要做的非常棒，不允许有任何瑕疵，因此做事情的时候，自己总会有很大压力，担心达不到自己的预期； </p><p>*<em>17.你的领导是怎么评价你的？ *</em></p><p>工作很努力，学习能力强，什么事交给我做很放心 </p><p><strong>18.你的同事是怎么评价你的？</strong></p><p> 之前的同事她们都很喜欢跟我搭档做事，说我特别的靠谱，好沟通 </p><p><strong>19.能否接受出差？</strong></p><p> 出差的话，可以接受，但不知道贵公司出差频率怎么样？大概去哪些城市？</p><p><strong>20.你对我们公司有什么了解的吗？</strong></p><p> … </p><p>*<em>21.谈谈你对跳槽的看法？ *</em></p><p>跳槽分为很多种，对于处理不好同事关系等原因在公司待不下去跳槽，这个我是不看好的，这是属于个人问题，如果不改正，到下一家公司也很难待下去；如果是在一个公司呆了两三年，技术和个人发展很长一段时间没有增长，可以适当的转换环境，在新的环境里可以有新的思路，这种我是不反对的，而我选择跳槽也是因为这个原因。</p><p>*<em>22.你想找一个什么样儿的公司？ *</em></p><p>找一个可以能用到我会的这些方面的公司，其次是能在这个公司被认可，希望大家都喜欢技术层面的，有气氛，大家一起想把项目做成，大家都积极努力。 </p><p>*<em>23.你的优势在哪？ *</em></p><p>首先，比较喜欢做测试，兴趣还是很重要的，所以会非常积极的研究适合现在用的技术，研究一些适合现在用的工具，思维比较缜密，测试对细节的思考也是比较重要的，跟团队的沟通和交流也还可以。</p><p>##功能测试面试的问题</p><p><strong>1.常用的Linux命令</strong></p><p>ls:查看当前目录下的文件内容；</p><p>cd:切换当前工作目录；</p><p>touch：创建文件； mkdir:创建目录/文件夹；</p><p>rm:删除；cp:复制；rm:移除；</p><p> Cat/more/head/tail查看日志文件内容；</p><p>grep:搜索文本文件名；</p><p> ln-s:创建软连接；ln:创建硬连接；</p><p> tar-zcvf 包名.tar.gz 被打包的文件：打包和解包；tar-zxvf 包名.tar.gz:解包和解压缩；</p><p> tar -zxvf 包名.tar.gz -C 路径 解压到指定路径下 </p><p>chmod:修改文件权限；</p><p>kill -9 进程的id ：强制杀死某个进程； top:动态查看系统资源；</p><p> netstat -anptu | grep 进程名：查看某个程序的端口号；</p><p> ps -aux | grep 进程名：查看指定应用的进程；</p><p><strong>2.用Linux干吗</strong></p><p>Linux是一个操作系统，（大多数的软件服务器都用它，因为它快，安全）作为测试用linux搭建测试环境，开发把项目写好，把项目打成jar包或war包给我们，我们在linux里面进行部署,我们使用Apache/Nigix/Tomcat,把war包上传上去，该创建文件夹创建文件夹，该创建用户创建用户（搭建环境里面用到的linux命令，创建文件，创建文件夹，压缩，解压）环境搭建好之后，当测试过程中遇到问题，需要连接数据库连接不到数据库，或需要重启服务的时候，我们需要重启电脑，当系统出现问题的时候，需要查询日志，第一查询软件的日志，我们从客户端里查不到，因为日志是写在系统里的，写在linux服务器里的，第二需要查询linux系统本身的日志，比如linux系统启动不起来了</p><p><strong>3.mysql数据库的增删改查，关联查询，子查询，内连接（需要熟练）</strong></p><p><strong>4.Navicat是什么？</strong></p><p>Navicat是连接数据库的客户端</p><p><strong>5.软件测试的模型分为哪几种？</strong></p><p>​ V模型(重点) 绘制：需求分析-概要设计-详细设计-编码-单元测试-集成测试-系统测试-验收测试 优点：阶段清晰，文档驱动 缺点：不适应需求变化，风险后延（bug修复时间较晚），返工量大 W模型（重点） 绘制：开发V：需求分析-概要设计-详细设计-编码-集成-实施 -交付 测试V:系统测试设计-集成测试设计-单元测试设计-单元测试-集成测试-系统测试-验收 优点：关注软件开发的全过程，早介入，早发现，早修复，缺陷的修复随着开发过程成指数上升 缺点：灵活度低 H模型（了解） 组成：测试准备，测试就绪点，测试执行 优点:将测试流程独立出来，测试流程与其他流程并行 缺点：技术要求高，管理要求高</p><p><strong>6.软件测试的分类？</strong></p><p>​ a.按照阶段划分 单元测试：对单独的功能或模块进行测试 集成测试：对多个功能进行组合测试 系统测试：站在系统的角度，看程序是否满足客户需求 验收测试：客户针对自己的需求进行测试 负责人：客户或者第三方机构或客户授权乙方进行测试 分类：α测试 （内测）， β测试 （公测）， γ测试（候选版本） b.按是否覆盖源代码划分 黑盒测试：不需要关注代码，只需要聚焦业务功能 </p><p>功能测试</p><p>​ 业务功能（登录注册等） 界面测试（UI）关注界面美观，页面布局等 易用性测试（鼠标三次点击直达用户目的，enter键等快捷键） 安装测试 卸载和升级测试 性能测试:时间性能,稳定性能,压力测试,负载测试 白盒测试:需要看代码 灰盒测试:既要关注代码，又要关注业务功能 c.按是否运行划分 静态测试:测的是需求或设计文档 动态测试:测的是程序 d.按照是否自动化划分 手工测试:测试人员手动进行测试的方法 自动化测试:通过工具或代码帮助测试人员更加高效进行测试的一种方法 e.其他 冒烟测试:最基本的功能和流程 回归测试:bug回归和旧功能回归 随机测试：根据测试人员的经验对一些重要的业务功能或测试用例未覆盖的某些功能进行 探索性测试：具体问题，具体分析</p><p><strong>7.测试用例的10要素？</strong></p><p>用例编号（ID），测试点(正向/逆向)，模块，优先级，前置条件，测试数据，测试步骤，预期结果，实际结果，是否自动化</p><p><strong>8.测试用例的8种设计方法？</strong></p><p>等价类划分法，边界值法，错误推测法，场景法，判定表法，因果图法，流程图法，正交法</p><p><strong>9.你在测试过程中编写过测试用例吗？都用了哪些方法？(常用)</strong></p><p>等价划分类：分为有效等价类和无效等价类，例如：三角形两边之和大于第三边是一个定理，如果我们输入一个参数，他们的和，小于第三个参数，那么相当于两边之和小于第三边，就构成不了三角形，就相当于是无效等价类。 输入的两个参数的和，加起来大于第三边的话，就相当于有效等价类。</p><p>边界值分析法：例如：购买0个，购买1个，购买-1个，这就属于边界值，购买时候的最大数量也是属于边界值，超过最大数量，等于最大数量或者小于最大数量相当于是边界。</p><p>错误猜测法：主要是根据经验吧，因为测试的时候每个系统都可能是登录系统，之前登录系统可能发现过某些bug，再去猜一下，这个系统是不是也可能会出现这样的bug。</p><p>场景法：模拟用户的使用场景。</p><p><strong>10.什么是缺陷？</strong></p><p>执行测试用例时，预期结果和实际结果不一致</p><p><strong>11.如何判断是不是缺陷？</strong>只要满足一下五个条件之一就算缺陷</p><p>软件未实现产品说明说要求的功能 软件中出现了产品说明书中明确指出不应该出现的错误 软件实现了产品说明中未提及的功能 软件未实现产品说明书中，虽未提及但应该实现的功能 难以理解，运行缓慢，不好使用等多站在用户的角度考虑问题</p><p><strong>11.缺陷产生的根本原因</strong></p><p>需求变更，沟通不畅，信息不同步，软件复杂度，进度压力</p><p><strong>12.缺陷的10大要素？</strong></p><p>ID，缺陷的标题，严重程度，模块，优先级，复现步骤，预期结果，实际结果，状态，缺陷的类型</p><p>严重程度：严重（s1）：主功能不可用，例如闪退，不能启动等 一般（s2）：次功能不可用，边界或异常未进行处理等 微小（s3）：易用性，界面展示，小的性能等问题 建议（s4）：建议性问题</p><p>优先级： p0：必须在24小时之内解决 p1：产品上线前解决 p2：下一个版本就解决</p><p>状态：新建（new），打开(open)，延期，拒绝(rejected)，再次打开(reopen)，关闭(closed),已解决（fixed） 缺陷的类型：功能错误，界面错误，兼容性错误，易用性，改进意见</p><p><strong>13.测试的5大流程？</strong></p><p>​ a.需求分析与评审 以需求评审会的形式，参与的人员：产品经理，项目经理，开发，测试，ui等 测试的主要职责：1.确保自己对文档有清晰的理解，没有疑惑 2.确定文档的正确性与完整性，能够指导后期的工作 3.对文档中存在不合理的地方提出自己的修改意见</p><p> b.编写测试计划与测试方案 测试计划：管理型文档，主要解决：谁来做？做什么？ 测试方案：技术型文档，主要解决：怎么做？</p><p> c.设计测试用例与评审</p><p> d.执行测试用例与缺陷跟踪</p><p> e.编写测试报告</p><p><strong>14.敏捷开发的5个活动</strong></p><p>迭代，迭代计划，每日站会，评审会，回顾会</p><p>敏捷开发的周期一般为1-2周，一次迭代（sprint）增加几个功能</p><p>###面试题</p><p><strong>1.内存溢出与内存泄漏</strong></p><p>内存溢出（ out of memory）：是指程序在申请内存时，没有足够的内存空间供其使用；</p><p>内存泄露 （memory leak）：是指程序在申请内存后，无法释放已申请的内存空间，一次内存泄露危害 可以忽略，但内存泄露堆积后果很严重，无论多少内存,迟早会被占光；</p><p>二者的关系：内存泄露会最终会导致内存溢出；</p><p><strong>2.冷启动与热启动</strong></p><p>app被后台杀死后，在这个状态打开app，这种启动方式叫做冷启动；</p><p>热启动：指app没有被后台杀死，仍然在后台运行，通常我们再次去打开这个app，这种启动方式叫 热启动</p><p><strong>3.怎么定位一个bug是前后端的问题?fildder的主要应用场景?</strong></p><p>用fildder进行抓包，首先看到底是请求的时候发送的参数错误了还是返回的时候返回错了，如果请求是对的，返回是错的，那肯定就是服务器的问题如果是请求的时候参数就传错了，那基本上就是前端的问题。</p><p>fildder的主要用于抓包，请求参数，请求参数类型，浏览器不支持的时候可以抓包，抓请求，抓响应，也可以进行打断点，功能测试,接口测试需要看一下开发前端页面调用的接口对不对，我需要过滤一下，APP测试时模拟弱网测试。</p><p><strong>4.bug提给开发，就向石沉大海一样，你该怎么做？</strong></p><p>首先我会跟先跟开发沟通一下，问是这个bug之前提过重复了，还是说他现在有紧急的任务需要处理，这个bug不是很严重，可以延期再处理，还是说他认为这个bug不是bug，如果开发认为不是bug,我会整理好一个详细的bug出现的文档，拿给开发，如果他坚持不改，我会直接找他的上级领导，让他的领导与他沟通；</p><p><strong>5.测试过程中，开发人员认为不是bug怎么办？</strong></p><p>首先我会先正确理解出现的错误时bug还是软件缺陷，如果是软件缺陷，我会直接找部门经理，由部门经理与开发人员协调，如果是bug，我会理清楚bug出现的原因，然后整理成报告给相应的开发人员，如果他还不改的话，我会跟部门的负责人说，让领导进行处理。</p><p><strong>6.常用的响应状态码？</strong></p><p>200请求成功，201新增成功，204删除成功 </p><p>302请求重定向 400代表客户端异常，</p><p>401代表访问的页面没有授权，403表示没有权限访问这个页面，404代表没有这个页面 </p><p>500代表服务器异常，504代表服务器端超时，没返回结果</p><p><strong>7.GET请求和POST请求的区别：</strong></p><p>​ 1、GET使用URL或Cookie传参。而POST将数据放在BODY中。 2、GET的URL会有长度上的限制，则POST的数据则可以非常大。 3.get的效率高于post 4、POST比GET安全，因为数据在地址栏上不可见。 5、一般get请求用来获取数据，post请求用来发送数据。</p><p><strong>8.为什么https比http安全？</strong></p><p>https在 http基础上增加了数据加密 ，从而使得客户端和服务器之间传输的数据更加安全</p><p><strong>9.Web测试与APP测试的差异性?</strong></p><p>a.web是b/s架构，app是C/s架构,APP的兼容性测试尤为重要：由于手机厂商生产的手机型号及相关软硬件存在千千万万的差异性，进而APP端需 要着重考虑分辨率、系统版本、尺寸、主流机型等等；</p><p>b.APP性能测试指标不一样：除了需要和web一样考虑APP客户端的性能外，我们还需要考虑电量、流量的消耗、 GPU渲染等；</p><p>c.APP网络测试场景的复杂性：如2G、3G、4G、5G、wiﬁ、弱网环境等</p><p>d.APP基于手机载体存在的交叉事件测试、前后台切换、安装/卸载/升级测试</p><p>e.APP基于手机载体特有的一些用户操作习惯类测试，如横竖屏切换、多点触控、事件触发区域等</p><p><strong>10.测试一般分为三轮测试</strong></p><p>第一轮，提交测试之后，快速的把所有功能都测一遍，第一时间发现所有的bug，然后让开发去修改，这样比较节省时间，提高效率。然后再细测每一个功能，直到所有的bug都改完以后，开始测第二轮。</p><p>第二轮测试以后发现bug的话，可能就还会有第三轮测试，希望在第二轮就能把所有的bug解决完，不要再产生新的bug。</p><p>第三轮主要是回归了，不会像第一轮和第二轮那么仔细，主要回归一些重点，没有问题以后，测试就会通过了，通过以后会发测试通过邮件，开发会把代码部署到预上线环节，然后我们再会去预上线环节去验证，主要验证一些主要功能点，以及在测试环境中产生的一些bug，看看代码是否都更新正确，代码更新到预上线环节以后，希望别出现更错的情况。</p><p>比如A文件有10行代码的更新，但是上传到预上线环节的时候，没有上传上去，我们主要通过在测试环境产生的bug和一些功能点来确认代码更新正确，另外因为预上线环节和测试环节，环境不同，可能会导致出现新的bug，然后我们会让开发去定位，看看是测试环境没有测试出来，还是因为环境改变产生的新bug，反复的进行确认，直到预上线环境没有问题，就会更新到线上了，至于什么时候上线由产品决定，我们只是测完以后告诉产品我们测完了。</p><p><strong>11.工作如何分配的？</strong><br>我们组长让我们一人负责一块，但是功能可能会有交叉的地方，我们每个人都会看一眼，其余功能，我们没事的时候，也会去测试一下，因为了解整个系统才是最关键的，才能保证每一次变化都能知道，写好测试用例，所以，除了平时固定负责的模块，其他模块如果其他人忙不过来的话，我们也会帮忙测的，主要就是通过测试用例的形式来测试</p><p><strong>12.有哪些测试环境？</strong><br>测试环境一般分为4个测试环境，开发那边有一个本地环境，这个是他们自己调试用，代码开发完以后发布到测试环境，测试环境主要是应为他们发的，测试环境测完以后没有问题，会更新到预上线环境，预上环境测完没有问题就会发布到线上环境，预上线环境是用来主要是模拟线上更新，因为预上线环境和线上环境是比较像的，其次是可以用预上线环境来验证一些线上bug，可能测试环境的代码已经跟线上不一样了，所以有一些线上bug可能没办法在测试环境验，在测试环境验不是很严谨，一般在预上线环境验，还有没有更新代码的时候，有回滚方案，测试完以后呢，开发会把他们最后一次提交的Git版本号发出来，如果有问题的话还会进行回滚，对于线上的问题，如果出现了紧急bug，我们会启动紧急更新流程，第一时间确认一下问题，确认完问题存在以后，开发会去修复，修复完以后会执行一些核心的测试用例，以保证改完以后这个bug不会产生新的bug，然后上线，及时响应。</p><p><strong>13.你以前工作的测试流程是什么？</strong></p><p>先开需求评审，一般是两周一个迭代，迭代开始之前的周四或者周五我们进行需求评审，这是第一次评审，一般是确定一下做哪些功能，哪些功能不做，测试这边也会给出一下需要的时间，开发给出大概需要的时间，都OK之后呢，产品就会去修改文档了，修改完之后呢，我们用Git管理的需求的文档，他们会把文档上传上去，之后呢，我们会把文档拉下来，之后就准备写测试用例了，大概是希望在周四之前把测试用例都写完，写完之后呢，会再进行一次评审，这个评审存在的一个问题就是产品和开发的参与度不是很高，他们提出的测试用例可能有限，但是也会给一些建议，所以呢，我们之前也给出过一些方法，比如每个人至少给出两条建议，但是如果项目进度特别赶的话，可能也不是很理想，所以自己在写测试用例的过程中写的比较好，写完之后呢，就等待提测，一般是周五的时候会提测，有时候也会有延期的情况，提交测试的环境呢，都是运维部署的，不是测试部署的。</p><p>运维部署完之后，告诉我们开始测试，我们开始执行测试用例，发现bug的话，就提交到那个jira的项目管理工具上，这个bug指派给负责人以后，我们会跟踪一下，如果修复了我们会验证一下，如果没有修复好的话呢，会再指给相应的人，如果修复好以后就关闭了。</p><p>这相当于第一轮测试完毕，第一轮完毕以后会有第二轮。因为第一轮测试完毕之后也还需要把所有的功能都再看一遍，没有问题的话，就发布预上线环境，更新到预上线环境之后，会再验证一下，并叫上产品一起验证。</p><p>整个过程都是发邮件的形式，如果想立即上线就会发布到线上环境，然后再测一下，如果没有问题就OK了，如果有问题的话就再走回滚流程。</p><p>需求评审（产品，测试，开发，开会，评审需求文档）开会讨论做什么，不做什么——测试预估测试时间——等产品更新文档——用GIT管理产品文档——GIT拉取到本地——写测试用例——产品开发一起评审——调整测试用例——等待提测——运维部署——执行测试用例——发现bug——提交到jira项目管理工具——指派给负责人——开发修复——验证——修复好以后——关闭</p><p><strong>14.讲讲你的项目是如何做自动化测试的？</strong></p><p>前提：手工测试完毕了（应该是在系统测试之后，自动化做回归测试），要求项目需求变动不频繁，项目周期长，项目需要做回归测试的。</p><p>门类：自动化测试还是属于黑盒测试，只是用代码替代人来做功能测试。</p><p>正题：一般我们都是在项目稳定，在做回归测试的时候做自动化的测试。我们web主要是用python+selenium作自动化，,首先用火狐浏览器的firebug插件定位元素（多数用Xpath和CSS方法定位元素），然后用python中的unittest框架来测试，重写setUp（）与tearDown（）方法，setUp中主要是初始化webdriver，打开网址，和设置一些统一的浏览器条件（如登录，浏览器最大化），tearDown中主在测试结束后关闭一些资源（如关闭driver退出），然后根据用例要去会写一个testXXX（）为名字的方法写具体的测试用例（定位元素，跳转页面，填充数据，最后在try 中断言结果在except中截图）。</p><p>Ps：更高级的可以讲PO模式，pytest框架。Pytest是web与app都能用。</p><p>结合项目来说：</p><p>Example1：在我的测试的商城后台的商品管理的添加、修改。是写一个python类继承unittest，在setUp方法中初始化driver，登录后台管理员。在tearDown中关闭driver。在定义个testcommoditychange的方法，在方法里找到商品按钮点击进入商品页面，定位“商品列表”的元素定位到商品管理的页面，定位“添加商品”按钮今如添加商品页面，然后通过读取配置文件（yaml，txt等很多文件格式都行）中提前写好的测试用以数据，按要去，分别定位添加到商品的分类属性总，然后点击发布商品按钮，断言结果与测试用以的预期结果是否相同。在main方法中执行测试用例。</p><p>然后在测试之前加入HTMLTestRunner这个类。利用它来生成测试报告。</p><p><strong>15.一个测试需要具备什么好的条件?</strong></p><p>了解和熟悉自己的项目，多看看产品文档，使用系统，每一个分支操作之后都应该知道是什么结果，只有这样才能写出好的测试用例，还要和产品多交流和沟通，也能增加对产品的认知，要多学习一些有用的工具，符合现阶段使用的，并不是说学的越多越好。</p><p>代码能力也很重要，写完代码才能理解一些代码层面的bug，不断学习不断总结。</p><p><strong>16.测试人员在产品开发过程中，任务是什么？</strong></p><p>保证产品质量，控制好项目的进度，因为测试既连接产品又连接开发，测试有时候有必要提醒一下项目有进度上的风险，比如想周五提测，结果周五跟他们对接的时候，发现他们不能按时提测，要下周二才能提测，这时候就存在测试不完的情况，这也是一种风险，希望能提前发现，提前预警。</p><p>17.通过支付宝/微信给朋友转账设计测试用例?</p><p>1）正确流程的测试：输入金额，信息，支付密码 2）密码验证：是否提示支付密码，以及错误密码的提示，多次输入错误密码的情况 3）留言验证：符号，表情等其他是否可以输入 4）发送后返回界面的展示 5）异常随机错误：发红包界面随机的点击 6）发送成功后金额的显示 7）对方是否可以领取 8）断网，后台切换再重新打开app 9）手机版本兼容性测试 1）发送单个红包金额验证，最大最小阈值的验证。金额为0 等异常的验证，提示信息是否正确。 2）群发红包，红包的输入的最大限额，小数点位数限制，数值为0的验证。 3）文字输入框的验证。是否可输入非文字的内容。 4）红包的最大个数的验证。 5）普通红包与随机红包的验证：金额是否平均分，或随机分。 6）领取金额跟发送的红包金额是否相等， 7）塞钱按钮是否可用 8）为领完红包退回的验证。24小时超时退换的验证。 9）安卓与苹果系统之间是否可以互发互抢红包。 9）支付方式的验证：不同支付方式的验证，余额不足的处理。密码错误是否有提示。 10）支付密码是否在前端加密，在网络传输过程中是否加密， 11）送红包的响应时间是多少 12）是否支持不同的手机，不同的系统平台，版本，发红包抢红包，收红包，不同的手机，不同的平台，不同的版本是否可以相互发送红包抢红包收红包 13）红包的界面是否跟原型效果图一样</p><h2 id="接口测试"><a href="#接口测试" class="headerlink" title="接口测试"></a>接口测试</h2><p><strong>1.什么是接口文档？什么是接口清单？他们之间有什么关系？</strong></p><p>接口文档就是API文档，接口文档是架构师或开发写的，在定义接口文档的时候，里面有很多粗略的地方，第一：哪些字段必填不知道，哪些字段是什么类型不知道，第二：他们整理的只是一个通用的模板，真正实施的时候，例如真正查询的时候是指定查询，模糊查询还是组合查询上面根本就没有写，此时我们对其进行整理，整理出指定时的接口，模糊时的接口，组合时的接口，</p><p>当不知道此时开发还没开发，目的是开发照着接口文档进行开发，接口文档是公用的（产品，开发，测试等），接口文档里包含有哪些资源的定义，资源的url,有几个参数，写的比较笼统，写的不清楚，为了防止漏测和评审，我们才从接口文档里整理接口清单，接口清单里主要包括，请求和响应，请求里面包含，请求的url，请求参数，请求方法，响应里面包含响应状态码和响应的数据。</p><p><strong>2.Jmeter测试工具都用哪些原件？</strong><br>Jmeter的常用原件有，HTTP请求——信息头（请求需要带头信息）——cookie信息管理器（模拟用户登录，获取token）有的token放在header里，有的放在cookie里的，如果放在header里的话就不用加cookie管理器——json提取器（可以提取到所有请求的返回信息）有一个缺点不能提取返回的头信息——正则提取器（可以提取信息头里的）——聚合报告（有很多属性统计，测QPS可以用聚合报告）——察看结果树（查看json结果访问数据）——函数助手（可以随机起名自动生成一个代码）——if控制器循环之类的，但是用的不多，剩下的都是要用的时候才能想起来。</p><p><strong>3.使用jmeter怎么测？</strong></p><p>基于测试计划创建线程组，基于线程组添加http请求，基于测试计划添加查看结果树和聚合报告，可以在http请求里面添加同步定时器和断言。</p><p><strong>4.接口测试中依赖登录的接口如何测试？</strong></p><p>获取token，模拟登录状态。</p><p><strong>5.接口测试中，最重要的是什么？</strong></p><p>最重要的是覆盖率，你请求的参数要覆盖比较全。例如：你测购买的时候，肯定有一个参数叫购买数量，可以发送请求的时候，这个购买数量的字段可以等于0，也可以等于1，也可以等于负值，相当于我们用这种参数呢，把这种情况都覆盖到，如果有要求的话，我们还会测一下这个接口的性能，QPS是比较关注的，接口在并发请求的情况下，会不会有什么问题。不过我们一般前期不做性能测试，只在项目的中后期做性能测试。</p><p>##移动端测试</p><p><strong>1.常用的adb命令</strong></p><p>adb –help 帮助命令；adb start-server 开启adb服务；adb kill-server 结束adb服务；</p><p>adb devices 查看设备列表，获取设备名称；adb push 将电脑文件发送到手机；</p><p>adb pull 将手机文件拉到电脑；adb logcat 查看手机运行日志；</p><p>adb shell dumpsys window windows| findstr usedApp 查看包名和启动名；</p><p>adb install apk所在路径 安装apk到手机；adb uninstall 包名 卸载apk文件；</p><p>adb shell am start -W 包名/启动名 获取app应用启动时间；</p><p><strong>2.用过什么测试框架？</strong></p><p>Unitest，pytest</p><p>##性能测试</p><p><strong>1.性能测试工具？</strong></p><p>jmeter和Loadrunner</p><p>jmeter做性能测试主要关注的目标是什么？</p><p>这个就需要看聚合报告了，测试目标是什么就看什么（错误率，响应时间，吞吐量）</p><p>Loadrunner 由三部分组成：</p><p>a. Virtual User Generator（简称：VuGen）：编写脚本（脚本的增强）</p><p>b. Controller ：场景搭建及运行</p><p>d. Analysis ：结果分析</p><p><strong>2.Loadrunner做性能测试的流程？分类？指标？</strong></p><p>流程：需求分析–&gt;测试计划–&gt;测试用例–&gt;编写脚本–&gt;设计场景–&gt;运行场景–&gt;场景监控–&gt;结果分析–&gt;系统调优–&gt;测试报告</p><p>分类：压力测试，负载测试，并发测试，稳定性测试</p><p>指标：并发数(支持多少用户同时进行请求。)，吞吐量也叫QPS(每秒查询率)，响应时间（比如测一个接口的时候，看多长时间能返回），点击数，资源利用率（内存，cpu,硬盘），错误率</p><p><strong>3.TPS和QPS有什么区别？</strong></p><p>QPS针对单个接口，叫每秒查询率，之前做纯API服务的时候，没有界面，只给用户提供API调用的时候，我们会测试，这个接口的QPS，我们用jmeter测试的，用jmeter写好请求以后呢，我们会比如先模拟20个线程组，去通知请求接口，看它的QPS到达什么程度，直到出现error，出现错误返回的时候，我们就停止，不一定是线程组的数量越多，它的QPS就越高，当QPS达到一定的程度，并且没有错误的时候，会有一个最高值，我们认为它的最高值就是它的QPS。</p><p>TPS相当于是事物，引导事物数，相当于多个接口，比如在电商网站购买东西的时候，一个购买行为可能要请求好几个接口，所有的接口组合在一起，叫TPS，主要是描述用户行为的，支持某种用户的行为能力，我认为是这样的，但是我们没有测过TPS，主要还是测QPS。</p><p>##常识</p><p>B2C：商家对客户，京东、当当、天猫;</p><p>B2B：商家对商家，阿里巴巴(不零售，只批发，淘宝很多商家都会去阿里巴巴进货)；</p><p>C2C：个人对个人，淘宝市场，淘宝，QQ商城；</p><p>1.windows系统的常用命令？</p><p>cd 切换目录；cd.. 返回上一级目录；cd \ 返回到根目录；</p><p>dir 显示目录中的内容；ctrl +z 中断命令执行；</p><p>md 创建目录；rd删除目录；copy 复制文件；move 移动文件；</p><p>del 删除文件；exit退出当前cmd窗口；ipconfig查看本机的ip;</p>]]></content>
    
    
    <categories>
      
      <category>手工测试,接口测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>blogs</title>
    <link href="undefined2019/08/27/blogs/"/>
    <url>2019/08/27/blogs/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>#如何在hexo新建文件并上传至博客<br>1.首先打开终端，切换到_posts文件所在路径，hexo new 文件名（新建一个.md文件）</p><p>2.以Typora的形式打开进行编辑，完成之后在终端中输入：hexo generate，回车，生成静态页面</p><p>3.再输入：hexo server，回车，到localhost:4000预览博客效果</p><p>4.最后输入：hexo deploy，回车，同步到github上去就行了</p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blogs</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Charles手机和浏览器抓包</title>
    <link href="undefined2019/08/27/Charles/"/>
    <url>2019/08/27/Charles/</url>
    
    <content type="html"><![CDATA[<h1 id="charles-浏览器和手机抓包"><a href="#charles-浏览器和手机抓包" class="headerlink" title="charles 浏览器和手机抓包"></a>charles 浏览器和手机抓包</h1><p>@(charles)[http|https]<br>[TOC]</p><p>##http手机抓包操作步骤</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打开Charles，点击proxy-点击Mac OS x proxy取消前面的对勾，对勾保存是电脑抓包-点击proxy setting-在enable transparent http proxy 前面打对勾然后点击ok-点击设置保证跟电脑连接的是同一个局域网点击链接的wifi-选择手动-输入服务器的IP（安装了Charles的电脑的IP地址，可在Charles-help-local IP adress中查看）和端口号-点击Charles（⭕️）开始录制按钮，手机这边操作就可以开始抓包了；</span><br></pre></td></tr></table></figure><p>##Charles Android/ios手机抓https协议</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>电脑端打开Charles-help-ssl proxying-install Charles root certificate</span><br><span class="line"><span class="number">2.</span>下载安装证书，默认路径不需要更改，在钥匙串访问中选择证书双击证书文件-选择始始终信任</span><br><span class="line"><span class="number">3.</span>电脑端打开Charles-help-ssl proxying-install Charles root certificate on a mobile  device <span class="keyword">or</span> remote browers-下载安装证书，默认路径不需要更改，在钥匙串访问中选择证书双击证书文件-选择始始终信任</span><br><span class="line"><span class="number">4.</span>设置手机代理,要抓包的手机与电脑在同一个局域网下（链接同一个Wi-Fi即可），打开手机设置-选择已经连接的Wi-Fi-手动代理-输入安装charles电脑的IP（charles-help-localip address）和端口号（proxy-proxy setting-proxies）</span><br><span class="line"><span class="number">5.</span>手机在浏览器中输入：chls.pro/ssl</span><br><span class="line"><span class="number">6.</span>手机弹出提示：安装配置描述文件，选择允许，即可</span><br></pre></td></tr></table></figure><h2 id="Charles过滤"><a href="#Charles过滤" class="headerlink" title="Charles过滤"></a>Charles过滤</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">方法一：打开Charles，页面左下方有一个filters，在里面输入自己想要过滤的内容部分即可</span><br><span class="line"></span><br><span class="line">方法二：菜单栏选择 “Proxy”-&gt;”Recording Settings”，在弹出的窗口中选择 Include 栏，再点击“Add”，在弹出的窗口中输入需要监控的协议，主机地址，端口号等信息，来添加一个项目。</span><br><span class="line"></span><br><span class="line">方法三：在想过滤的网络请求上右击，选择 “Focus”，之后在 Filter 一栏勾选上 Focussed 一项</span><br></pre></td></tr></table></figure><p>##Charles模拟弱网测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打开charles-proxy-throttle Settings-勾选Enable settings-在throttle preset中选择要模拟的网路环境，如果没有的话可以自己在下方设置-ok</span><br></pre></td></tr></table></figure><p>##charles如何打断点，修改response数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>打开将要访问的网址，通过Charles抓到想要修改数据的接口,双击接口连接勾选Breakpoints</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>点击Charles-proxy-Breakpoints settings</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span>进入breakpoint settings页面,设置完成之后，点击ok</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4.</span>重新访问该接口，charles自动跳转到breakpoints页面</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5.此时修改Response数据，点击Edit Response，切换底部tab至Text，修改所需要的数据</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6.修改数据后，点击Execute，查看访问的页面，数据将会显示已修改的Response数据</span><br></pre></td></tr></table></figure><p>##Charles设置断点</p><p>1.选中接口-双击-compose</p><p>2.设置断点：<br>代理-断点设置-启用断点-添加（有些不知道天什么的可以用不填/*）<br>选择该接口-右键选择断点-proxy-breakpoint settings中进行编辑（请求或响应）</p><p>在请求上：即从应用程序发送请求之后，但后端接收到请求之前<br>在响应上：即在后端发送响应之后但在响应之前</p><p>##Charles的破解方法：</p><p><strong>1.修改charles.jar文件或者替换掉原来的软件。</strong><br>从官网上下载Charles，安装完毕，需要点击运行一起，command + q 彻底退出一次<br>在命令行终端输入 sudo spctl –master-disable 信任任何来源 （避免软件提示破损问题）<br>在命令行终端输入 open /Applications/Charles.app/Contents/Java/ 打开并替换 charles.jar（最好备份一下源文件, 我修改源文件名charles.jar.bak）<br>替换完成后，在此打开charles软件<br>替换 charles.jar的文件的下载地址<br>百度云：链接:<a href="https://pan.baidu.com/s/1_-Qsq_BzpQiqCStaD8XjUQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1_-Qsq_BzpQiqCStaD8XjUQ</a> 密码:vsgq<br><strong>2.注册码</strong><br>按照常规安装好charles软件之后，打开软件，点击工具栏中的help –&gt; register<br>输入如下信息：<br>Registered Name: <a href="https://zhile.io" target="_blank" rel="noopener">https://zhile.io</a><br>License Key: 48891cf209c6d32bf4<br>使用Charles进行手机抓包（iOS）<br><strong>注意：对某个手机进行抓包的时候，该手机的安全证书必须是跟该电脑连接同一个Wi-Fi安装的</strong></p><p>###手机上安装安全证书：（iOS-iphonex）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span>在浏览器中输入http://chls.pro/ssl</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>设置-通用描述文件-点击安装</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>设置-通用-关于本机-证书信任设置点击开启\</span><br></pre></td></tr></table></figure><p>###手机上安装安全证书：（android-vivox27）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如何将之前的安全证书删除：</span><br><span class="line"></span><br><span class="line">设置-安全与隐私更多安全设置-用户凭据-点击证书-删除</span><br><span class="line"></span><br><span class="line">重新安装证书：</span><br><span class="line"></span><br><span class="line">电脑和手机连接同一个网络，电脑上点击安装安全证书-手机在浏览器器中输入http://charlesproxy.com/getssl -点击下载-在浏览器的下载中心打开</span><br></pre></td></tr></table></figure><p>####Charles中一个手机可以在不同网段下安装多个证书</p><p>#####charles抓包iOS手机报服务器开小差？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">电脑和手机连接同一个网段，电脑上点击help-安装证书到手机-OK-手机浏览器中输入chls.pro/ssl-下载-设置-通用-描述文件-安装-设置-通用-关于本机-证书信任设置-开启即可</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>charles</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Charles</tag>
      
      <tag>http</tag>
      
      <tag>https</tag>
      
      <tag>激活</tag>
      
      <tag>打断点</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql</title>
    <link href="undefined2019/08/25/mysql/"/>
    <url>2019/08/25/mysql/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>#查</p><h1 id="mysql忘记密码解决方法"><a href="#mysql忘记密码解决方法" class="headerlink" title="mysql忘记密码解决方法"></a><a href="https://junconec.github.io/2019/07/23/mysql/" target="_blank" rel="noopener">mysql忘记密码解决方法</a></h1><p>mysql 解决忘记密码问题</p><p>mac下mysql 1045 (28000): Access denied for user ‘root’@’localhost’ (using password:</p><p>新入了mac pro，安装好mysql后，用终端进入mysql遇到个问题： 1045 (28000): Access denied for user ‘root’@’localhost’ (using password: N</p><p>讲道理，我还设密码呢，但是第一次进来就报错，goo了一下大概原因可能是mysql创建的时候给自动分配了密码。</p><p>不管分配没分配密码，反正一般的解决方法就是：先跳过验证，再重设密码。</p><p>具体步骤：</p><ol><li><p>先关闭MySQL服务；<br>执行</p><p>sudo /usr/local/mysql/support-files/mysql.server stop</p></li></ol><p>或者在系统偏好设置中关闭MySQL服务(如果电脑有设置密码的，此处会要求输入计算机密码)</p><p>2.去mysql文件夹里设置跳过验证（3步）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">先进入mysql文件夹：</span><br><span class="line">cd /usr/local/mysql/bin/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">设置权限，如果电脑有设置密码（开机和解锁计算机时要求输入的那个密码），在输入此句后会要求输入密码。输入密码后按回车确认</span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line">跳过验证</span><br><span class="line">./mysqld_safe --skip-grant-tables &amp;</span><br></pre></td></tr></table></figure><p>3.开始设置我们自己的新密码</p><p>打开一个新的终端，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysql -u root -p</span><br></pre></td></tr></table></figure><p>然后会要求输入密码，因为此时根本没有密码，所以直接点确认，显示以下信息表示成功进入mysql(与windows系统一样)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 20</span><br><span class="line">Server version: 5.7.11</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>现在设置新密码，注意要打引号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE mysql.user SET authentication_string=PASSWORD(&apos;cc77&apos;) where User=&apos;root&apos;;</span><br></pre></td></tr></table></figure><p>回车确认，显示以下信息表示修改密码成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 1</span><br></pre></td></tr></table></figure><p>然后刷新一下，让上述修改生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>刷新成功会显示以下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><p>4.重启mysql,用新密码登录，可以登录成功了。但是进行其他mysql操作，会显示：</p><p>ERROR 1820 (HY000) :You must reset your password using AlTER USER statement before executing this statement.</p><p>意思是还要再重设一遍密码，直接输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD = PASSWORD(&apos;cc77&apos;);</span><br></pre></td></tr></table></figure><p>修改成功后，终端会显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure><p>至此，修改密码彻底完成，可以做任何相关sql操作了</p><h3 id="mysql数据库表中的增删改查？"><a href="#mysql数据库表中的增删改查？" class="headerlink" title="mysql数据库表中的增删改查？"></a>mysql数据库表中的增删改查？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名（列名） values (值)</span><br><span class="line"></span><br><span class="line">delete <span class="keyword">from</span> 表名 where 字段<span class="number">1</span>=值<span class="number">1</span></span><br><span class="line"></span><br><span class="line">update 表名 set 字段<span class="number">1</span>=值<span class="number">1</span> where 条件</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> 表名 where 条件</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
      <tag>数据库的增删改查</tag>
      
      <tag>子查询</tag>
      
      <tag>左连接</tag>
      
      <tag>右连接</tag>
      
      <tag>内连接</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux命令</title>
    <link href="undefined2019/08/25/linux%E5%91%BD%E4%BB%A4/"/>
    <url>2019/08/25/linux%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>#操作系统及其分类</p><p>####操作系统</p><p>负责协调硬件设备和软件资源的系统软件</p><p>#####桌面操作系统</p><p>windows界面化</p><p>macOS</p><p>Linux</p><p>#####服务器操作系统</p><p>Linux （安全 稳定 免费）</p><p>Windows  server （付费）</p><p>#####嵌入式操作系统</p><p>Linux</p><h5 id="移动设备操作系统"><a href="#移动设备操作系统" class="headerlink" title="移动设备操作系统"></a>移动设备操作系统</h5><p>Android</p><p>iOS</p><h1 id="Linux版本"><a href="#Linux版本" class="headerlink" title="Linux版本"></a>Linux版本</h1><h5 id="Linux内核版本"><a href="#Linux内核版本" class="headerlink" title="Linux内核版本"></a>Linux内核版本</h5><p>稳定版</p><p>发行版</p><h5 id="Linux发行版本"><a href="#Linux发行版本" class="headerlink" title="Linux发行版本"></a>Linux发行版本</h5><p>Ubuntu</p><p>Centos</p><p>Redhat</p><h4 id="Linux和Windows的区别"><a href="#Linux和Windows的区别" class="headerlink" title="Linux和Windows的区别"></a>Linux和Windows的区别</h4><p>windows通过盘符（C/D/E盘）管理文件和目录而Linux没有盘符的概念，所有的文件和目录都在根目录下（/）</p><h1 id="Linux命令大全"><a href="#Linux命令大全" class="headerlink" title="Linux命令大全"></a>Linux命令大全</h1><p>##Linux常用的几个基本命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">ls 查看文件夹下的内容</span><br><span class="line">ls -a :显示所有文件包含隐藏文件</span><br><span class="line">ls  -l :显示文件的所有详细信息</span><br><span class="line">ls -lh :人性化显示文件大小</span><br><span class="line">ls -alh :查看某个文件下的所有文件包含隐藏文件并显示文件的详细信息，文件大小人性化显示</span><br><span class="line"></span><br><span class="line">ls与通配符一起使用</span><br><span class="line"></span><br><span class="line">ls *.txt :匹配任意字符任意次</span><br><span class="line">ls ?.txt ：只匹配一个字符</span><br><span class="line">ls [abc]/[a-f].py ：匹配[]中任意字符相匹的文件名</span><br><span class="line">ls [abc]*.py :匹配以[]中字符开头的文件名</span><br><span class="line"></span><br><span class="line">cd :切换到家目录</span><br><span class="line">cd ~ : 切换到家目录</span><br><span class="line">cd . :切换到当前目录</span><br><span class="line">cd .. :切换到上一级目录</span><br><span class="line">cd - :返回上一次所在的目录 </span><br><span class="line"></span><br><span class="line">touch 创建文件(eg1:touch <span class="number">1.</span>txt；eg2:touch <span class="number">1.</span>txt <span class="number">2.</span>txt <span class="number">3.</span>txt)</span><br><span class="line">解释：如果文件不存在创建一个新文件，如果文件存在修改文件的修改时间</span><br><span class="line"></span><br><span class="line">mkdir 创建文件夹</span><br><span class="line">mkdir file_name创建一个目录</span><br><span class="line">mkdir &#123;file_name1 file_name2 file_name3&#125;一次创建多个目录</span><br><span class="line">mkdir -p a/b/c 递归创建多级目录</span><br><span class="line">    </span><br><span class="line">rm 删除文件(eg:rm <span class="number">1.</span>txt)</span><br><span class="line">rm -r ：删除目录及目录下的所有内容</span><br><span class="line">rm -i ：交互式删除，删除时会弹出是否确认删除弹窗</span><br><span class="line">rm -f ：强制删除文件或目录</span><br><span class="line">rm -r 删除目录(rm -r file_name)</span><br><span class="line"></span><br><span class="line">clear 清屏</span><br><span class="line">pwd 查看自己在哪</span><br><span class="line">quit() 退出终端</span><br></pre></td></tr></table></figure><h4 id="Linux终端命令格式"><a href="#Linux终端命令格式" class="headerlink" title="Linux终端命令格式"></a>Linux终端命令格式</h4><p>命令  [-选项][参数]</p><p>[]代表可有可无</p><p>####终端中如何查阅帮助信息</p><p>-help or man</p><p>##Liunx的其他命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cp 命令：复制文件/目录</span><br><span class="line">mv 命令：删除文件/目录</span><br><span class="line"></span><br><span class="line">查看文件内容</span><br><span class="line">cat 文件名：查看⽂文件内容、⽂文件合并、追加⽂文件内容等</span><br><span class="line">more 文件名：分屏显示⽂文件内容</span><br><span class="line">grep 搜索文本文件名：搜索⽂文本⽂文件内容</span><br><span class="line">grep -v  文件名: 反向显现内容</span><br><span class="line">grep -n 文件名: 显示⾏行行号</span><br><span class="line">grep -i  文件名:忽略略⼤大⼩小写</span><br><span class="line">   </span><br><span class="line">&gt;/&gt;&gt; ：重定向</span><br><span class="line">| ：管道 </span><br><span class="line"></span><br><span class="line">find -name <span class="string">"文件名"</span>：查找文件并显示文件的路径信息</span><br><span class="line">ln -s [绝对路路径]源⽂文件 链接⽂文件：创建软链接</span><br><span class="line">ln 源⽂文件 链接⽂文件：创建硬链接</span><br></pre></td></tr></table></figure><h3 id="打包压缩解压的命令"><a href="#打包压缩解压的命令" class="headerlink" title="打包压缩解压的命令"></a>打包压缩解压的命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf 包名.tar.gz 被打包的⽂文件 作用:打包和压缩</span><br><span class="line">tar -zxvf 包名.tar.gz 作⽤用:解包和解压缩</span><br><span class="line">tar -zxvf 包名.tar.gz -C /home/admin/桌⾯面/tar 作⽤用:包⾥里里 ⾯面的内容解包解压到 tar⽬目录下</span><br><span class="line">（-c : 打包；-v: 显示进度；-f: 指定包名，必须放在最后 ；-t: 查看包内容；-x: 解包）</span><br><span class="line">zip2(two) :压缩 解压缩 </span><br><span class="line">zip ：压缩</span><br><span class="line">unzip ：解压缩</span><br></pre></td></tr></table></figure><h3 id="修改文件权限的命令"><a href="#修改文件权限的命令" class="headerlink" title="修改文件权限的命令"></a>修改文件权限的命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chmod:修改文件权限</span><br><span class="line">chmod 命令-字母法</span><br><span class="line">chmod u+rw filename 给⽤用户增加权限</span><br><span class="line">chmod g-rw filename 给组⽤用户减少权限</span><br><span class="line">chmod a=x filename 给所有⽤用户设置执⾏行行权限，去掉了了原 有权限</span><br><span class="line">chmod u+rw,g+rw,o+rw filenmae 给三个⽤用户类型增加 读写权限，注意,号分割⽤用户类型</span><br><span class="line">chmod 命令-数字法</span><br><span class="line">chmod 755 ⽂文件名(u/g/o=用户/组/其他，r/w/x分别为4/2/1)</span><br></pre></td></tr></table></figure><h3 id="需要管理员权限的命令"><a href="#需要管理员权限的命令" class="headerlink" title="需要管理员权限的命令"></a>需要管理员权限的命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">which ：查找程序的安装位置</span><br><span class="line">su:切换用户</span><br><span class="line">exit：退出当前登录帐号</span><br><span class="line">who:查看当前操作系统的⽤用户信息</span><br><span class="line">reboot :重启 </span><br><span class="line">shutdown:关机(需要root权限) </span><br><span class="line">ps -aux:显示当前系统的所有进程</span><br><span class="line">ps -aux | grep &quot;进程名&quot;:查看某个进程</span><br><span class="line">kill：杀死进程 （kill 进程id）</span><br><span class="line">top:动态查看系统资源</span><br><span class="line">netstat -anptu | grep &quot;进程名&quot;：查看某个端口信息</span><br></pre></td></tr></table></figure><h3 id="查看日志信息的命令"><a href="#查看日志信息的命令" class="headerlink" title="查看日志信息的命令"></a>查看日志信息的命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">head :查看文件前10行内容,如果想查看其他行数就指定一个数字</span><br><span class="line">head 文件名</span><br><span class="line">head -15 ⽂件名</span><br><span class="line">tail:查看文件结尾n行内容</span><br><span class="line">tail 文件名:⼯作中查看⽇志⽂件，查看内容较多的文件结尾几行内容 </span><br><span class="line">tail -f 文件名 :实时监控⽇志文件,⽅便定位bug</span><br><span class="line">ping 127.0.0.1 &gt; ⽂文件名 ：使⽤用ping命令不停向⽂件中写入内容</span><br></pre></td></tr></table></figure><p>###ls -l 的扩展</p><p>ls -l 可以查看⽂文件夹下⽂文件的详细信息，从左到右依次是:<br><strong>权限</strong>第1个字符如果是 d 表示⽬目录，如果是 - 表示⽂文件 权限类型:rw- </p><p><strong>硬连接数</strong>通俗地讲，就是有多少种⽅方式，可以访问到当前 ⽬目录或⽂文件</p><p><strong>拥有者</strong>家⽬目录下 ⽂文件或⽬目录 的拥有者通常都是当前⽤用户 </p><p><strong>组</strong>在linux中，很多时候，会出现组名和⽤用户名相同的情况 ⼤大⼩小<br><strong>时间</strong><br><strong>文件名</strong></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>操作系统</tag>
      
      <tag>linux</tag>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>