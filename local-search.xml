<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Postman操作步骤</title>
    <link href="undefined2020/04/21/Postman/"/>
    <url>2020/04/21/Postman/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h2><p><img src="/Users/qingclass/Desktop/CXY66yan.github.io/CxyBlogs/source/_posts/Postman/pos.jpg" srcset="undefined" alt="post"></p>]]></content>
    
    
    <categories>
      
      <category>Postman1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Postman1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jmeter</title>
    <link href="undefined2020/03/15/Jmeter/"/>
    <url>2020/03/15/Jmeter/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="Jmeter简介"><a href="#Jmeter简介" class="headerlink" title="Jmeter简介"></a>Jmeter简介</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.1</span> 概念：由Apatch组织使用Java语言开发的一款测试工具</span><br><span class="line"><span class="number">1.2</span> 作用：</span><br><span class="line"><span class="number">1.</span> 接口测试</span><br><span class="line"><span class="number">2.</span> 性能测试</span><br><span class="line"><span class="number">3.</span> 压力测试</span><br><span class="line"><span class="number">4.</span> 数据库测试</span><br><span class="line"><span class="number">5.</span> web测试</span><br><span class="line"><span class="number">6.</span> Java程序测试</span><br><span class="line"><span class="number">1.3</span> 优点：</span><br><span class="line"><span class="number">1.</span> 开源、免费</span><br><span class="line"><span class="number">2.</span> 跨平台</span><br><span class="line"><span class="number">3.</span> 小巧</span><br><span class="line"><span class="number">4.</span> 支持多协议</span><br><span class="line"><span class="number">5.</span> 功能强大</span><br><span class="line"><span class="number">1.4</span> 缺点：</span><br><span class="line"><span class="number">1.</span> 不支持IP欺骗（只有性能测试使用）</span><br><span class="line"><span class="number">2.</span> 不支持JS和Web自动化Ui操作</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>功能测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Jmeter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试工程师必备技能</title>
    <link href="undefined2020/01/23/%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/"/>
    <url>2020/01/23/%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="测试工程师相关技能整理"><a href="#测试工程师相关技能整理" class="headerlink" title="测试工程师相关技能整理"></a>测试工程师相关技能整理</h1><h2 id="通用技能"><a href="#通用技能" class="headerlink" title="通用技能"></a>通用技能</h2><p><strong>业务相关</strong>：<br>业务需求知识，业务管理流程，行业现状和发展方向</p><p><strong>管理相关</strong>：</p><p><strong>时间管理（四象限法则）</strong></p><p>重要且紧急，重要不紧急，紧急不重要，不紧急不重要</p><p><strong>目标管理（SMART法则）</strong></p><p>S（Specific）：目标明确，M（Measurable）：目标可度量</p><p>A（Attainable）：目标可实现性</p><p>R（Relevant）：目标必须和其它目标具有相关性</p><p>T（Time-based）：目标具有明确的截止期限</p><p><strong>知识管理</strong></p><h4 id="工具：xmind、有道云笔记、印象笔记、Blog、GitHub、CSDN、testerhome-51testing等"><a href="#工具：xmind、有道云笔记、印象笔记、Blog、GitHub、CSDN、testerhome-51testing等" class="headerlink" title="工具：xmind、有道云笔记、印象笔记、Blog、GitHub、CSDN、testerhome,51testing等"></a>工具：xmind、有道云笔记、印象笔记、Blog、GitHub、CSDN、testerhome,51testing等</h4><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>今天完成了什么内容、明天需要做什么</p><p>自己哪些方面做得好，哪些做得不够好，下次需要改进</p><p>近期工作计划、学习计划（制定todolist）</p><p>职业规划</p><p>人生规划</p><h2 id="沟通"><a href="#沟通" class="headerlink" title="沟通"></a>沟通</h2><p>敢于沟通：主动了解和听取对方的想法，敢于表达自己的观点</p><p>勤于沟通：多和别人交流自己的意见和想法</p><p>善于沟通：提升沟通技巧和效率</p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><h5 id="抓包工具"><a href="#抓包工具" class="headerlink" title="抓包工具"></a>抓包工具</h5><p>fiddler，Charles，wireshark</p><h5 id="缺陷管理工具"><a href="#缺陷管理工具" class="headerlink" title="缺陷管理工具"></a>缺陷管理工具</h5><p>jira，禅道</p><h5 id="文档协作管理工具"><a href="#文档协作管理工具" class="headerlink" title="文档协作管理工具"></a>文档协作管理工具</h5><p>wiki–协同创作超文本系统 ，Docs–在线协作编辑工具，Xmind–思维导图软件，tower</p><h5 id="接口测试工具"><a href="#接口测试工具" class="headerlink" title="接口测试工具"></a>接口测试工具</h5><p>postman，HttpRequester，Yapi</p><h5 id="压力测试工具"><a href="#压力测试工具" class="headerlink" title="压力测试工具"></a>压力测试工具</h5><p>Jmeter，LoadRunner</p><h5 id="安全测试工具"><a href="#安全测试工具" class="headerlink" title="安全测试工具"></a>安全测试工具</h5><p>AWVS–网站及服务器漏洞扫描软件<br>sqlmap–检测与利用SQL注入漏洞的免费开源工具<br>Nmap–网络扫描和嗅探工具</p><h5 id="客户端测试"><a href="#客户端测试" class="headerlink" title="客户端测试"></a>客户端测试</h5><p>adb命令，系统版本兼容，屏幕分辨率兼容，屏幕类型兼容（普通屏幕、全面屏、刘海屏、挖孔屏等），导航栏类型兼容（虚拟导航栏、手势导航栏、mBack导航栏等），厂商兼容</p><h5 id="服务端测试"><a href="#服务端测试" class="headerlink" title="服务端测试"></a>服务端测试</h5><h5 id="自动化测试"><a href="#自动化测试" class="headerlink" title="自动化测试"></a>自动化测试</h5><p><strong>UI自动化测试</strong></p><p><strong>Android自动化测试</strong><br>UIAutomator<br>appium（基于webdriver框架）<br>uiautomator2（轻量级，仅支持Android） -AirTest：<a href="http://airtest.netease.com/" target="_blank" rel="noopener">http://airtest.netease.com/</a><br><strong>iOS自动化测试</strong><br>WebDriverAgent<br>appium（基于WebDriverAgent框架） -AirTest：<a href="http://airtest.netease.com/" target="_blank" rel="noopener">http://airtest.netease.com/</a><br><strong>Web自动化测试</strong><br>Selenium<br><strong>微信小程序自动化测试</strong><br>ChromeDriver<br><strong>接口自动化</strong><br>Python+request<br>Robot Framework<br>HttpRunner<br>Postman+Newman<br>Jmeter+Ant<br>Vue+Flask&amp;Django<br><strong>专项测试<em>8<br>app性能测试<br>PerfDog：<a href="https://testerhome.com/topics/21137" target="_blank" rel="noopener">https://testerhome.com/topics/21137</a><br>adb（安卓）<br>ffmpeg（音视频）<br>*</em>H5性能测试<em>8<br>Chrome Devtool<br>W3C Performance API<br>*</em>稳定性测试</strong><br>Monkey<br>MonkeyRunner<br>MonkeyScript<br><strong>弱网测试</strong><br>Charles<br>AppCrawler<br><strong>耗电量分析</strong><br>dumpsys batterystatus<br>Battery-Historian<br>BugReport<br><strong>流量分析</strong><br>Proxy<br>TCPDUMP<br><strong>性能测试</strong><br>内存<br>Android Studio Profile<br>PerfDog<br>leakCanary<br>CPU<br>Android Studio Profile<br>Android Monitor<br>PerfDog<br>iOS Instruments<br>卡顿分析<br>Systrace<br>Overdraw</p><h4 id="编程相关"><a href="#编程相关" class="headerlink" title="编程相关"></a>编程相关</h4><h5 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h5><p>PyCharm — Python  ，Sublime – shell</p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>unittest，pytest，request</p><h4 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h4><p>linux基本命令（find、netstat、ps等）<br>linux三剑客<br>grep<br>awk<br>sed</p><h4 id="代码版本控制"><a href="#代码版本控制" class="headerlink" title="代码版本控制"></a>代码版本控制</h4><p>git，svn</p><h4 id="DataBase"><a href="#DataBase" class="headerlink" title="DataBase"></a>DataBase</h4><p>MySQL，MongoDB</p><h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><p>Python正则表达式  ，shell编程之正则表达式:<a href="http://www.imooc.com/learn/378" target="_blank" rel="noopener">http://www.imooc.com/learn/378</a></p><h4 id="持续集成-amp-持续交付"><a href="#持续集成-amp-持续交付" class="headerlink" title="持续集成&amp;持续交付"></a>持续集成&amp;持续交付</h4><p>Jenkins<br>Docker</p><h4 id="平台开发"><a href="#平台开发" class="headerlink" title="平台开发"></a>平台开发</h4><p>Vue.js<br>Nodejs<br>Python Django/Flask</p>]]></content>
    
    
    <categories>
      
      <category>测试必备技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>H5页面测试</title>
    <link href="undefined2020/01/23/H5%E9%A1%B5%E9%9D%A2%E6%B5%8B%E8%AF%95/"/>
    <url>2020/01/23/H5%E9%A1%B5%E9%9D%A2%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="H5的介绍"><a href="#H5的介绍" class="headerlink" title="H5的介绍"></a>H5的介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">H5是HTML5简称，是最新的web端开发语言版本，是移动端的web页面；从广义上来说，HTML5是包括HTML,CSS,JS在内的一套技术组合；</span><br><span class="line"></span><br><span class="line">HTML负责网页的具体内容和结构；CSS网页的样式，主要负责美化，JS负责网页的交付效果，比如对用户鼠标点击事件作出相应；</span><br><span class="line"></span><br><span class="line">H5应用的地方：APP的活动专题页面，新闻网页，微信公众号文章页面，在PC或者手机浏览器都可以直接访问H5页面；</span><br><span class="line"></span><br><span class="line">优点：可以跨平台使用，开发成本相对较低，可随时上线更新版本，适合快速迭代，可以轻量的触达用户，提供更便捷的服务</span><br></pre></td></tr></table></figure><h2 id="如何识别H5？"><a href="#如何识别H5？" class="headerlink" title="如何识别H5？"></a>如何识别H5？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>长按页面，看会不会有震动（andriod）或者出现文字选择粘贴(andriod/ios)；</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>横竖屏相互切换，能自适应且布局不会乱掉；</span><br></pre></td></tr></table></figure><h2 id="测试关注点？"><a href="#测试关注点？" class="headerlink" title="测试关注点？"></a>测试关注点？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>业务逻辑测试，跟业务需求来定；</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>页面元素ui测试（文字，图片，页面布局等测试）</span><br><span class="line"></span><br><span class="line">文字：风格是否一致，错别字，标点符号统一，换行是否显示正常，一行长文字是省略显示还是全显示，图片与文字是否一致，刷新页面文字是否展示；</span><br><span class="line"></span><br><span class="line">图片：静态（大小，格式），动态（大小，风格，准确性动态图，转场动画，loading动画，点击动画等），图片适配（不同屏幕和分辨率进行适配）；</span><br><span class="line"></span><br><span class="line">页面布局：页面文字图片是否能自适应屏幕，整体布局是否合理等；</span><br><span class="line"></span><br><span class="line">内嵌链接：空链接，刷新链接数据是否展示，链接跳转是否正确；</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>页面操作（刷新与返回，翻页，弹窗出现/关闭，浮层页面，页面提示，手机操作相关）</span><br><span class="line"></span><br><span class="line">刷新与返回：页面刷新是否仍然处于当前页面，用户主动点击刷新按钮是否仍处于当前页面，点击返回，回退页面是否是期望页面；</span><br><span class="line"></span><br><span class="line">翻页：遇到翻页加载的页面，需要注意内容为一页或多页的情况；数据分页加载时，注意后续页面请求数据的正确；快速操作场景中，请求页数是不是依次递增（如第一页尚未加载出来的时候仍然继续上拉操作时是否发出对应的请求）；</span><br><span class="line"></span><br><span class="line">页面的提示：弱网络下，数据加载较慢，是否有对应的loading提示；接口获取异常时，提示是否合理；刷新页面或加载新内容时页面是否有抖动；</span><br><span class="line"></span><br><span class="line">手机操作相关：锁屏知乎展示的页面；退到后台再重新呼出在前台展示；</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>适配测试</span><br><span class="line"></span><br><span class="line">图片高清适配，字体大小适配，页面布局宽度适配，横竖屏适配（考虑：不同屏幕尺寸和分辨率的机型进行适配，不同平台安卓和iOS进行适配，横竖屏适配，日夜间模式适配，深色浅色模式适配（iOS13系统））；</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>H5</category>
      
    </categories>
    
    
    <tags>
      
      <tag>H5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>性能测试</title>
    <link href="undefined2020/01/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <url>2020/01/23/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="App的性能测试注意点"><a href="#App的性能测试注意点" class="headerlink" title="App的性能测试注意点"></a>App的性能测试注意点</h2><p>评估App的时间和空间特性 ：</p><p>1)极限测试：在各种边界压力情况下，如电池、存储、网速等，验证App是否能正确响应。</p><p>–内存满时安装App</p><p>–运行App时手机断电</p><p>–运行App时断掉网络</p><p>2)响应能力测试：测试App中的各类操作是否满足用户响应时间要求 。（安装包放到云测上可以测试）</p><p>–App安装、卸载的响应时间</p><p>–App各类功能性操作的影响时间</p><p>3)压力测试：反复/长期操作下、系统资源是否占用异常。（itestin）</p><p>–App反复进行安装卸载，查看系统资源是否正常</p><p>–其他功能反复进行操作，查看系统资源是否正常</p><p>4)性能评估：评估典型用户应用场景下，系统资源的使用情况。（Jmeter）</p><p>###PerfDog</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>Android/iOS移动应用的性能测试工具</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>PerfDog支持基于云端的看 板，可以存储、管理PerfDog收集的所有测试数据。可以对应用的APP，游戏，小程序，H5，web，进行CPU和内存实时监测，并且还支持手机温度、电量、网络、FPS等指标的测试和监控，真的算是功能完备的性能测试工具，满足了大部分性能测试的需求，极大的提升了性能测试的效率，PerfDog是由WeTest腾讯质量开放平台发行，能快速定位分析性能问题，提升APP应用及游戏性能和品质，手机无需ROOT/越狱，手机硬件、游戏及应用无需做任何更改，极简化即插即用。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>PerfDog官网：perfdog.qq.com</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>腾讯WeTest官网：wetest.qq.com</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>性能测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PerfDog</tag>
      
      <tag>性能测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端</title>
    <link href="undefined2020/01/23/%E5%89%8D%E7%AB%AF/"/>
    <url>2020/01/23/%E5%89%8D%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="前端常见的组件库"><a href="#前端常见的组件库" class="headerlink" title="前端常见的组件库"></a>前端常见的组件库</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">React 组件库，Angular 组件库， Vue.js 组件库</span><br></pre></td></tr></table></figure><h1 id="常见的前端9种UI框架介绍"><a href="#常见的前端9种UI框架介绍" class="headerlink" title="常见的前端9种UI框架介绍"></a>常见的前端9种UI框架介绍</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">一：Element</span><br><span class="line"></span><br><span class="line">官网地址：http://element-cn.eleme.io/<span class="comment">#/zh-CN</span></span><br><span class="line"></span><br><span class="line">介绍：element ui框架的按钮组件，这款由饿了么前端开源的UI框架，用于开发PC端的页面；</span><br><span class="line"></span><br><span class="line">二：iview</span><br><span class="line"></span><br><span class="line">官网地址：https://www.iviewui.com/</span><br><span class="line"></span><br><span class="line">介绍：iView 是一套基于 Vue.js 的开源 UI 组件库，主要服务于 PC 界面的中后台产品。使用单文件的 Vue 组件化开发模式 基于 npm + webpack + babel 开发，支持 ES2015 高质量、功能丰富 友好的 API ，自由灵活地使用空间，由TalkingData开发维护，有很多知名互联网企业都在使用。</span><br><span class="line"></span><br><span class="line">三：vuetify</span><br><span class="line"></span><br><span class="line">官网地址：https://vuetifyjs.com/zh-Hans/</span><br><span class="line"></span><br><span class="line">介绍：Vuetifyjs 根据材料设计规格提供 UI 布局。 V <span class="number">1.0</span> Alpha 版本提供了超过 <span class="number">80</span>个 reusbale 组件，其中包含一个易于记忆的语义设计，它基于名称简单明了 type-<span class="keyword">as</span>-you 的类型属性。在GitHub 上有超过 <span class="number">7</span>K 的 star</span><br><span class="line"></span><br><span class="line">四：vue-strap</span><br><span class="line"></span><br><span class="line">官网地址：http://yuche.github.io/vue-strap/</span><br><span class="line"></span><br><span class="line">介绍：基于 Vue.js 的 Bootstrap 组件 该仓库包含一系列基于 Bootstrap 标记和 CSS 的本地 Vue.js 组件。所以不需要 jQuery 和 Bootstrap 的 JavaScript 文件，唯一需要依赖的是: Vue.js Bootstrap CSS ，VueStrap 不依赖某个非常精确的 Bootstrap 版本。如果喜欢bootstrap的小伙伴又不想换jquery的开发方式是不二的选择。</span><br><span class="line"></span><br><span class="line">五：cube-ui</span><br><span class="line"></span><br><span class="line">官网地址：https://didi.github.io/cube-ui/<span class="comment">#/zh-CN/example</span></span><br><span class="line"></span><br><span class="line">介绍：cube-ui 是滴滴团队开发的基于 Vue.js 实现的精致移动端组件库。支持按需引入和后编译，轻量灵活；扩展性强，可以方便地基于现有组件实现二次开发。</span><br><span class="line"></span><br><span class="line">六：buefy</span><br><span class="line"></span><br><span class="line">官网地址：https://buefy.github.io/<span class="comment">#/</span></span><br><span class="line"></span><br><span class="line">介绍：Buefy 基于 Bulma 和 Vue.js 的轻量级UI组件，它提供了即装即用的轻量级组件。虽然组件选择有限，但是值得你去尝试。</span><br><span class="line"></span><br><span class="line">七：vue-beauty</span><br><span class="line"></span><br><span class="line">官网地址： https://fe-driver.github.io/vue-beauty/<span class="comment">#/components/button</span></span><br><span class="line"></span><br><span class="line">介绍：基于 ant design 的漂亮的 vue 组件库；vue-beauty 是一套基于 vue.js 和 ant-design样式 的PC端 UI 组件库，旨在帮助开发者提升产品体验和开发效率、降低维护成本。</span><br><span class="line"></span><br><span class="line">八：at-ui</span><br><span class="line"></span><br><span class="line">官网地址： https://at-ui.github.io/at-ui/<span class="comment">#/zh</span></span><br><span class="line"></span><br><span class="line">介绍：AT-UI 是一个模块化的前端 UI 框架，开发基于Vue.js 的快速和强大的 Web 界面。专门为桌面应用程序构建，AT-UI提供了一套 npm + webpack + babel 前端开发工作流程。全英文的文档对用户来说可能是具有有挑战性的，但它提供了一个体面的干净整洁的 UI 组件。</span><br><span class="line"> </span><br><span class="line">九：Vue-Blu</span><br><span class="line"></span><br><span class="line">官网地址： https://chenz24.github.io/vue-blu/<span class="comment">#/</span></span><br><span class="line"></span><br><span class="line">介绍：Vue-Blu是基于Vuejs和Bulma开发的开源UI组件库。旨在为PC端的前端开发(特别是中后台产品)提供一个快速且灵活的解决方案。全面、灵活且强大的ui组件，API友好。</span><br></pre></td></tr></table></figure><p>#前端Mock工具?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rap2</span><br></pre></td></tr></table></figure><h2 id="投放"><a href="#投放" class="headerlink" title="投放"></a>投放</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">市场投放？把我们的微信号放到别人的公众号上</span><br><span class="line">产品运营？在自己的公众号上发自己的广告</span><br><span class="line">公众号</span><br><span class="line">信息流：在抖音，知乎上投放的广告</span><br><span class="line">广告式转化（关注通知）和交互式转化（群，个人号）</span><br><span class="line">投放的<span class="number">4</span>个小时之后，<span class="number">48</span>小时之后失效</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web自动化测试</title>
    <link href="undefined2020/01/22/Web%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    <url>2020/01/22/Web%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="Web自动化测试环境的安装"><a href="#Web自动化测试环境的安装" class="headerlink" title="Web自动化测试环境的安装"></a>Web自动化测试环境的安装</h2><p>1.安装Pycharm；</p><p>2.安装selenium；</p><p>3.安装浏览器（goole/firefox）;</p><p>4.安装浏览器驱动</p><p>goole驱动的下载地址：</p><p>火狐驱动的下载地址：<a href="https://github.com/mozilla/geckodriver/releases（插件：chropath）" target="_blank" rel="noopener">https://github.com/mozilla/geckodriver/releases（插件：chropath）</a></p><p>谷歌驱动的下砸地址：<a href="https://sites.goole.com/a/chromium.org/chromedriver/downloads(不同的浏览器版本需要下载对应的驱动版本)" target="_blank" rel="noopener">https://sites.goole.com/a/chromium.org/chromedriver/downloads(不同的浏览器版本需要下载对应的驱动版本)</a></p><h2 id="什么样的项目适合自动化？"><a href="#什么样的项目适合自动化？" class="headerlink" title="什么样的项目适合自动化？"></a>什么样的项目适合自动化？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">需求变更不频繁，项目周期长，项目需要回归测试</span><br></pre></td></tr></table></figure><p>##web元素定位的8种方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">id是唯一的</span><br><span class="line">name属性是可以重复的</span><br><span class="line">class_name可以重复，取得=的时元素的class属性，如果有多个只能取其中一个</span><br><span class="line">用某个方法时前提时该元素有这个属性，没有不能用</span><br><span class="line">tag_name利用标签名定位，一个页面会有多个标签相同的标签，只能用于模糊定位，很少用</span><br><span class="line">link_text专门用于定位超链接的（&lt;a&gt;标签&lt;a&gt;），通过超链接中的全部文本内容来定位元素</span><br><span class="line">partial_link_text也是专门用于定位超链接的（&lt;a&gt;标签&lt;a&gt;），可以通过超链接中的全部/部分文本内容定位元素</span><br><span class="line">xpath</span><br><span class="line">(1.路径定位：相对路径/绝对路径；绝对路径很少用，一般用相对路径，相对路径以//*：任意层级任意标签</span><br><span class="line">2.利用元素属性：//*[@属性名=属性值]；属性与逻辑结合//*[@属性名1=属性值1 and @属性名2=属性值2]</span><br><span class="line">3.层级和属性结合：通过该元素很难定位到，可以通过先找到其父级再找到该元素//*[@属性名=属性值]/标签名）</span><br><span class="line">css_selector</span><br><span class="line">id选择器：#id属性值</span><br><span class="line">class选择器：.class属性值</span><br><span class="line">元素选择器：根据元素的标签名选择</span><br><span class="line">属性选择器：[属性名=属性值]</span><br><span class="line">层级选择器：先找到其父级再找到其子级</span><br><span class="line">element1 &gt; element2; element1  element2</span><br><span class="line"></span><br><span class="line">find_elements_by_xxx()定位一组元素</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="comment">#初始化浏览器对象</span></span><br><span class="line">driver=webdriver.Chrome()</span><br><span class="line"><span class="comment">#打开百度网页</span></span><br><span class="line">driver.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line"><span class="comment">#input_box=driver.find_element_by_id('kw')</span></span><br><span class="line"><span class="comment">#input_box.send_keys("手机")</span></span><br><span class="line"><span class="comment">#driver.find_element_by_name('tj_trhao123').click()</span></span><br><span class="line"><span class="comment">#driver.find_element_by_class_name('bri').click()</span></span><br><span class="line"><span class="comment">#driver.find_element_by_link_text('新闻').click()</span></span><br><span class="line"><span class="comment">#睡2秒</span></span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line"><span class="comment">#退出浏览器</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="常用操作元素的方法"><a href="#常用操作元素的方法" class="headerlink" title="常用操作元素的方法"></a>常用操作元素的方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">click():单击</span><br><span class="line"></span><br><span class="line">send_keys():模拟输入</span><br><span class="line"></span><br><span class="line">clear():清除文本</span><br></pre></td></tr></table></figure><h2 id="常用操作浏览器的方法"><a href="#常用操作浏览器的方法" class="headerlink" title="常用操作浏览器的方法"></a>常用操作浏览器的方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">maximize_window()                 最大化浏览器窗口</span><br><span class="line">set_window_size(width,height)     设置浏览器窗口的大小</span><br><span class="line">set_window_position(x,y)          设置浏览器窗口的位置</span><br><span class="line">back()                            后退-模拟浏览器的后腿操作</span><br><span class="line">forword()                         前进-模拟浏览器的前进操作</span><br><span class="line">refresh()                         刷新-模拟浏览器的刷新操作</span><br><span class="line">close()                           关闭当前浏览器窗口</span><br><span class="line">quit()                            关闭浏览器驱动对象</span><br><span class="line">title                             获取页面标题</span><br><span class="line">current_url                       获取当前的url</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="comment">#初始化浏览器对象</span></span><br><span class="line">driver=webdriver.Chrome()</span><br><span class="line"><span class="comment">#打开百度网页</span></span><br><span class="line">driver.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">driver.find_element_by_link_text(<span class="string">'新闻'</span>).click()</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#driver.maximize_window()</span></span><br><span class="line"><span class="comment">#driver.minimize_window()</span></span><br><span class="line"><span class="comment">#driver.set_window_size(100,100)</span></span><br><span class="line"><span class="comment">#driver.set_window_position(1000,500)</span></span><br><span class="line"><span class="comment">#driver.back()</span></span><br><span class="line"><span class="comment">#driver.forword()</span></span><br><span class="line"><span class="comment">#print(driver.title)</span></span><br><span class="line"><span class="comment">#print(driver.current_url)</span></span><br><span class="line"><span class="comment">#睡2秒</span></span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#退出浏览器</span></span><br><span class="line"><span class="comment">#driver.close()</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h2 id="常用获取元素信息的方法"><a href="#常用获取元素信息的方法" class="headerlink" title="常用获取元素信息的方法"></a>常用获取元素信息的方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">size                     返回元素的大小</span><br><span class="line">text                     获取元素的文本内容(超链接上的文本内容)</span><br><span class="line">get_attribute(<span class="string">"xxx"</span>)     获取元素的属性值，括号中传的为属性名</span><br><span class="line">is_displayed             判断元素是否可见</span><br><span class="line">is_enabled               判断元素是否可用</span><br><span class="line">is_selected              判断元素是否被选中，用来检查复选框或单选框是否被选中</span><br></pre></td></tr></table></figure><p>代码见下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="comment">#初始化浏览器对象</span></span><br><span class="line">driver=webdriver.Chrome()</span><br><span class="line"><span class="comment">#打开百度网页</span></span><br><span class="line">driver.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#elemen1t=driver.find_element_by_id('kw')</span></span><br><span class="line"><span class="comment">#print(element1.size)</span></span><br><span class="line"><span class="comment">#element2=driver.find_element_by_id('su')</span></span><br><span class="line"><span class="comment">#print(element2.text)</span></span><br><span class="line"><span class="comment">#print(driver.find_element_by_link_text('新闻').text)</span></span><br><span class="line"><span class="comment">#print(driver.find_element_by_link_text('新闻').size)</span></span><br><span class="line"><span class="comment">#print(driver.find_element_by_id("su").get_attribute("id"))</span></span><br><span class="line"><span class="comment">#print(driver.find_element_by_id('su').is_displayed())</span></span><br><span class="line"><span class="comment">#print(driver.find_element_by_id('su').is_enabled())</span></span><br><span class="line">print(driver.find_element_by_id(<span class="string">'su'</span>).is_selected())</span><br><span class="line"><span class="comment">#睡2秒</span></span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#退出浏览器</span></span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>##常用鼠标操作的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在selenium中将鼠标的操作方法封装在ActionChains类中</span><br><span class="line">实例化对象：action=ActionChains（driver）</span><br><span class="line">context_click(element)              右击-模拟鼠标的右击操作</span><br><span class="line">double_click(element)               双击-模拟鼠标的双击操作</span><br><span class="line">drag <span class="keyword">and</span> drop (source,target)       拖动-模拟鼠标的拖动效果</span><br><span class="line">move to element(element)            悬停</span><br><span class="line">perform                             执行，此方法用于执行以上所有鼠标操作</span><br></pre></td></tr></table></figure><p>代码见下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化浏览器对象</span></span><br><span class="line">driver=webdriver.Chrome()</span><br><span class="line"><span class="comment">#打开百度网页</span></span><br><span class="line">driver.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#实例化ActionChains对象</span></span><br><span class="line">action=ActionChains(driver)</span><br><span class="line"><span class="comment">#定位元素</span></span><br><span class="line">element=driver.find_element_by_id(<span class="string">'xxx'</span>)</span><br><span class="line"><span class="comment">#调用右击的方法</span></span><br><span class="line">action.context_click(element)</span><br><span class="line"><span class="comment">#执行</span></span><br><span class="line">action.perform()</span><br><span class="line"></span><br><span class="line"><span class="comment">#action.context_click(element).perform()</span></span><br><span class="line"><span class="comment">#睡2秒</span></span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#退出浏览器</span></span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>##常用键盘操作方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">selenium中将键盘的操作方法都封装在Keys类中</span><br><span class="line">send_keys(Keys.BACK_SPACE)             删除键</span><br></pre></td></tr></table></figure><p>代码见下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="comment">#初始化浏览器对象</span></span><br><span class="line">driver=webdriver.Chrome()</span><br><span class="line"><span class="comment">#打开百度网页</span></span><br><span class="line">driver.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#定位元素</span></span><br><span class="line">element=driver.find_element_by_id(<span class="string">'kw'</span>)</span><br><span class="line">element.send_keys(<span class="string">'福'</span>)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#删除键</span></span><br><span class="line">element.send_keys(Keys.BACK_SPACE)</span><br><span class="line"><span class="comment">#空格键</span></span><br><span class="line">element.send_keys(Keys.SPACE)</span><br><span class="line"><span class="comment">#制表键</span></span><br><span class="line">element.send_keys(Keys.TAB)</span><br><span class="line"><span class="comment">#回退键</span></span><br><span class="line">element.send_keys(Keys.ESCAPE)</span><br><span class="line"><span class="comment">#回车键</span></span><br><span class="line">element.send_keys(Keys.ENTER)</span><br><span class="line"><span class="comment">#复制键</span></span><br><span class="line">element.send_keys(Keys.CONTROL,<span class="string">'c'</span>)</span><br><span class="line"><span class="comment">#粘贴键</span></span><br><span class="line">element.send_keys(Keys.CONTROL,<span class="string">'v'</span>)</span><br><span class="line"><span class="comment">#全选键</span></span><br><span class="line">element.send_keys(Keys.CONTROL,<span class="string">'a'</span>)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">element.send_keys(<span class="string">'到了'</span>)</span><br><span class="line"><span class="comment">#睡2秒</span></span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#退出浏览器</span></span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>##元素等待</p><h4 id="显式等待"><a href="#显式等待" class="headerlink" title="显式等待"></a>显式等待</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">定位元素时如果能定位到元素则直接返回该元素，不触发等待，如果定位不到该元素，则过一段时间再去定位，如果在达到最大时长还没有找到该元素，则抛出超时异常TimeoutException</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#step1：selenium中把显示等待的相关方法封装在WebDriverWait类中</span><br><span class="line">from selenium.webdriver.support.wait import WebDriverWait</span><br><span class="line">#初始化浏览器对象</span><br><span class="line">driver=webdriver.Chrome()</span><br><span class="line">#step2 poll_frequency,检测间隔时间，默认0.5s</span><br><span class="line">WebDriverWait(driver,timeout,poll_frequency=0.5)</span><br><span class="line">&quot;&quot;&quot;step3调用方法until(method)直到...才；method函数名称，该函数用来实现对元素的定位，一般用匿名函数来实现:</span><br><span class="line">lambda x: x.driver.find_element_by_id(&apos;id&apos;)&quot;&quot;&quot;</span><br><span class="line">#step4</span><br><span class="line">element=WebDriverWait(driver,3,1).until(lambda x: x.find_element_by_id(&apos;id&apos;))</span><br><span class="line">显示等待作用于元素</span><br></pre></td></tr></table></figure><h4 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">定位元素时如果能定位到元素则直接返回该元素，不触发等待，如果定位不到该元素，则过一段时间再去定位，如果在达到最大时长还没有找到该元素，则抛出元素不存在的异常NoSuchElementException</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">driver.implicitly_wait(timeout)</span><br><span class="line">timeout为等待最大时长，单位：秒；</span><br><span class="line">隐式等待为全局设置，只需要设置一次，就作用于全部元素</span><br></pre></td></tr></table></figure><p>##下拉选择框的操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Select类是selenium为操作select标签特殊封装的</span><br><span class="line">实例化对象：</span><br><span class="line">select=Select(element)；element，&lt;select&gt;标签对应的元素，通过元素定位方式获取</span><br></pre></td></tr></table></figure><p>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select_by_index(index)                  根据option索引来定位，索引从<span class="number">0</span>开始</span><br><span class="line">select_by_value(value)                  根据option属性value值来定位</span><br><span class="line">select_by_visible_text(text)            根据option显示文本来定位</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="comment">#step1：导包</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.select <span class="keyword">import</span> Select</span><br><span class="line"><span class="comment">#初始化浏览器对象</span></span><br><span class="line">driver=webdriver.Chrome()</span><br><span class="line"><span class="comment">#打开网页</span></span><br><span class="line">driver.get(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line"><span class="comment">#step2：实例化对象</span></span><br><span class="line">select=Select(driver.find_element_by_id(<span class="string">'selectA'</span>))</span><br><span class="line"><span class="comment">#step3：调用方法</span></span><br><span class="line">select.select_by_index(<span class="number">2</span>)</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">select.select_by_value(<span class="string">'sh'</span>)</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">select.select_by_visible_text(<span class="string">"A北京"</span>)</span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#退出浏览器</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>##弹出框处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">网页种常见的弹出框有三种：</span><br><span class="line">alert    警告框</span><br><span class="line">confirm   确认框</span><br><span class="line">prompt    提示框</span><br></pre></td></tr></table></figure><p>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>获取弹出框的对象；</span><br><span class="line">alert=driver.switch_to.alert</span><br><span class="line"><span class="number">2.</span>调用；</span><br><span class="line">alert.text         返回弹出框中的文字信息</span><br><span class="line">alert.accept       接受弹出框选项</span><br><span class="line">alert.dismiss      取消弹出框选项</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#step1：获取弹出框对象</span></span><br><span class="line">alert=driver.switch_to.alert</span><br><span class="line"><span class="comment">#step2：调用方法</span></span><br><span class="line">print(alert.text)</span><br><span class="line">alert.accept()</span><br><span class="line">alert.dismiss()</span><br></pre></td></tr></table></figure><p>##滚动条处理</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>设置JS脚本控制滚动条；</span><br><span class="line">js=window.scrollTo(<span class="number">0</span>,<span class="number">1000</span>)</span><br><span class="line"><span class="number">0</span>:左边距，<span class="number">1000</span>：上边距，单位：像素</span><br><span class="line"><span class="number">2.</span>selenium调用执行JS脚本的方法</span><br><span class="line">driver.excute_script(js)</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#step1最底层</span></span><br><span class="line">js1=<span class="string">"window.scrollTo(0,10000)"</span></span><br><span class="line">driver.execute_script(js1)</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line"><span class="comment">#step1最顶层</span></span><br><span class="line">js2=<span class="string">"window.scrollTo(0,0)"</span></span><br><span class="line">driver.execute_script(js2)</span><br><span class="line">sleep(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>##Frame切换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Frame：HTML页面中的一中框架，主要作用是在当前页面指定区域显示另一页面元素；</span><br><span class="line">有两种形式：frameset,iframe</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.frame(frame_reference)     切换到指定frame的方法</span><br><span class="line">frame_reference   可以为frame框架的name，id,或者是定位到的frame元素</span><br><span class="line"></span><br><span class="line">driver.switch_to.default_content()    恢复默认页面的方法</span><br><span class="line">在frame中操作其他页面，必须先回到默认页面，才能进一步操作</span><br></pre></td></tr></table></figure><p>##多窗口切换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在HTML页面中，当点击超链接或按钮时，有的会在新的窗口打开页面</span><br></pre></td></tr></table></figure><p>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">driver.current_window_handle      获取当前窗口句柄</span><br><span class="line">driver.window_handles             获取所有窗口句柄</span><br><span class="line">driver.switch_to.window(handle)   切换至指定句柄窗口</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight plain"><figcaption><span>N</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#获取当前窗口的句柄</span><br><span class="line">print(driver.current_window_handle)</span><br><span class="line">driver.find_element_by_id(&apos;ZCA&apos;).click()</span><br><span class="line">#获取所有窗口的句柄</span><br><span class="line">print(driver.window_handles)</span><br><span class="line">#获取指定窗口的句柄</span><br><span class="line">handle=driver.window_handles[1]</span><br><span class="line">#切换至指定句柄的窗口</span><br><span class="line">driver.switch_to.window(handle)</span><br></pre></td></tr></table></figure><p>##窗口截图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.get_screenshot_as_file(<span class="string">'./img/img01.png'</span>)</span><br></pre></td></tr></table></figure><p>##验证码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">验证码的处理方式：去掉验证码，设置万能验证码，验证码识别技术，记录cookies(通过记录cookies，进行跳过登录)</span><br><span class="line">不同的网站实现自动登录的字段不同，如有需要可以和开发人员确认，在自动登录的时候需要一直保持登录状态，否者就需要重新登录</span><br></pre></td></tr></table></figure><p>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">driver.get_cookie(name)          获取指定cookie，name为cookie的名称</span><br><span class="line">driver.get_cookies()             获取本网站所有本地cookie</span><br><span class="line">driver.add_cookie(cookie_dict)   添加cookie，cookie_dict为一个字典对象，必须包含name和value</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">driver.add_cookie(&#123;<span class="string">"name"</span>:<span class="string">"字段名"</span>,<span class="string">"value"</span>:<span class="string">"值"</span>&#125;)</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">driver.refresh()</span><br></pre></td></tr></table></figure><p>##获取当前系统的时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">now_time=time.strftime(<span class="string">'%Y%m%d_%H%M%S'</span>)</span><br><span class="line">格式化的第一种方式</span><br><span class="line">driver.get_screenshot_as_file(<span class="string">'./img/img_%s.png'</span> % now_time)</span><br><span class="line"></span><br><span class="line">格式化的第二种方式</span><br><span class="line">driver.get_screenshot_as_file(<span class="string">'./img/img_&#123;&#125;.png'</span> .format(now_time))</span><br></pre></td></tr></table></figure><h2 id="UnitTest基本使用"><a href="#UnitTest基本使用" class="headerlink" title="UnitTest基本使用"></a>UnitTest基本使用</h2><p>###TestCase:测试用例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TestCase:测试用例</span><br><span class="line"><span class="number">1.</span>导包   <span class="keyword">import</span> unittest</span><br><span class="line"><span class="number">2.</span>定义测试类   新建测试类必须继承unittest.TestCase</span><br><span class="line"><span class="number">3.</span>定义测试方法   测试方法名称命名必须以test开头</span><br><span class="line"><span class="number">4.</span>执行测试用例</span><br><span class="line">   Pycharm右键用UnitTest或unittest.main()运行</span><br></pre></td></tr></table></figure><p>###TestSuite:测试套件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">多条测试用例集合在一起就是一个测试套件</span><br><span class="line">使用：</span><br><span class="line"><span class="number">1.</span>实例化   suite=unittest.TestSuite()</span><br><span class="line"><span class="number">2.</span>添加用例方法<span class="number">1</span>   </span><br><span class="line">suite.addTest(ClassName(MethodName<span class="string">"))         classname:类名；methodname：方法名</span></span><br><span class="line"><span class="string"> 添加用例方法2 </span></span><br><span class="line"><span class="string">suite.addTest(unittest.makeSuite(ClassName))   </span></span><br><span class="line"><span class="string">  搜索指定ClassName内test开头的方法，并添加到测试套件中 </span></span><br><span class="line"><span class="string">                        </span></span><br><span class="line"><span class="string">注意：TestSuite需要配合TestRunner才能被执行</span></span><br></pre></td></tr></table></figure><h3 id="TextTestRunner-执行测试用例和测试套件的"><a href="#TextTestRunner-执行测试用例和测试套件的" class="headerlink" title="TextTestRunner:执行测试用例和测试套件的"></a>TextTestRunner:执行测试用例和测试套件的</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用：</span><br><span class="line"><span class="number">1.</span>实例化</span><br><span class="line">runner=unittest.TextTestRunner()</span><br><span class="line"><span class="number">2.</span>执行</span><br><span class="line">runner.run(suite)       suite测试套件的名称</span><br></pre></td></tr></table></figure><h3 id="Testloader：测试套件"><a href="#Testloader：测试套件" class="headerlink" title="Testloader：测试套件"></a>Testloader：测试套件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">使用：</span><br><span class="line"><span class="number">1.</span>suite=unittest.TestLoader().discover(start_dir,pattern=<span class="string">"test*.py"</span>)=unittest.defaultTestLoader.discover(start_dir,pattern=<span class="string">"test*.py"</span>)</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">自动搜索指定目录下，指定开头的.py文件，并将查找到的测试用例组装到测试套件</span></span><br><span class="line"><span class="string">start_dir：指定的测试用例的目录；pattern：查找的.py文件的格式</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><p>###TestSuite与Testloader区别</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>TestSuite需要手动添加测试用例，可以添加某个测试类下面的某个测试方法</span><br><span class="line"><span class="number">2.</span>Testloader搜索指定目录下的.py文件，自动动添加某个测试类下的所有测试方法，不能单独添加某个测试方法</span><br></pre></td></tr></table></figure><h2 id="Fixture"><a href="#Fixture" class="headerlink" title="Fixture"></a>Fixture</h2><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在一个测试类中定义多个测试方法，查看每个测试方法执行完成所花费的时长</span><br></pre></td></tr></table></figure><h3 id="Fixture控制级别"><a href="#Fixture控制级别" class="headerlink" title="Fixture控制级别"></a>Fixture控制级别</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">方法级别</span><br><span class="line">使用：1.初始化:def setUp(self);</span><br><span class="line">     2.销毁:def tearDown(self);</span><br><span class="line">     <span class="number">3.</span>运行于测试方法的始末，即运行一次测试方法，就会运行一次setUp，tearDown</span><br><span class="line"></span><br><span class="line">类级别</span><br><span class="line">使用：<span class="number">1.</span>初始化</span><br><span class="line"><span class="meta">      @classmethod</span></span><br><span class="line">      def setUpClass(cls);</span><br><span class="line">     <span class="number">2.</span>销毁</span><br><span class="line"><span class="meta">      @classmethod</span></span><br><span class="line">      def tearDownClass(cls);</span><br><span class="line">     <span class="number">3.</span>运行于测试类的始末，即运行一次测试类，就会运行一次setUpClass，tearDownClass</span><br><span class="line">模块级别</span><br><span class="line">使用：<span class="number">1.</span>初始化</span><br><span class="line">      def setUpModule();</span><br><span class="line">     <span class="number">2.</span>销毁</span><br><span class="line">      def tearDownModule();</span><br><span class="line">     <span class="number">3.</span>运行于整个模块的始末，即整个模块只会运行一次setUpModule，tearDownModule</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestLogin</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 初始化浏览器对象</span></span><br><span class="line">        self.driver = webdriver.Chrome()</span><br><span class="line">        <span class="comment"># 打开学伴B端首页</span></span><br><span class="line">        self.driver.get(<span class="string">"http://xb-test.easylesson.cn/index.html#/login"</span>)</span><br><span class="line">        <span class="comment"># 设置隐士等待</span></span><br><span class="line">        self.driver.implicitly_wait(<span class="number">2</span>)</span><br><span class="line">        <span class="comment">#窗口最大化</span></span><br><span class="line">        self.driver.minimize_window()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_login</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 输入用户名密码，不输入验证码，直接点击登录</span></span><br><span class="line">        username = self.driver.find_element_by_xpath(<span class="string">'//*[@placeholder="帐号"]'</span>).send_keys(<span class="string">'cxy'</span>)</span><br><span class="line">        password =self.driver.find_element_by_xpath(<span class="string">'//*[@placeholder="密码"]'</span>).send_keys(<span class="string">'cxy'</span>)</span><br><span class="line">        verifycode =self.driver.find_element_by_xpath(</span><br><span class="line">            <span class="string">'/html/body/div/div/div/div[2]/form/div[3]/div/div/div[1]/div/input'</span>).send_keys(<span class="string">'sdf'</span>)</span><br><span class="line">        login = self.driver.find_element_by_css_selector(<span class="string">'.login-btn-submit'</span>).click()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="comment"># 退出浏览器驱动</span></span><br><span class="line">        self.driver.quit()</span><br></pre></td></tr></table></figure><h2 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">概念：让程序代替认为去判断程序执行的结果是否符合预期结果的过程</span><br></pre></td></tr></table></figure><h3 id="UnitTest常用的断言方法"><a href="#UnitTest常用的断言方法" class="headerlink" title="UnitTest常用的断言方法"></a>UnitTest常用的断言方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">assertTrue(expr)      验证expr是<span class="literal">True</span>，如果为false则fail</span><br><span class="line">assertFalse(expr)     验证expr是false，如果为true则fail</span><br><span class="line">assertEqual(first,second)          验证first==second，如果不等则fail</span><br><span class="line">assertIn(member,container)   验证是否member <span class="keyword">in</span> container</span><br></pre></td></tr></table></figure><h3 id="捕获异常的方法"><a href="#捕获异常的方法" class="headerlink" title="捕获异常的方法"></a>捕获异常的方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    self.assertTrue(expr)</span><br><span class="line"><span class="keyword">except</span> AssertionError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">raise</span> e</span><br></pre></td></tr></table></figure><p>##参数化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用前需要先安装：pip3 install parameterized</span><br></pre></td></tr></table></figure><p>####一个测试方法写一条用例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义一个函数，测试加法</span></span><br><span class="line"><span class="comment">#一个测试用例中只包含一种方法</span></span><br><span class="line"><span class="comment">#缺点：代码冗余</span></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个加法函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+y</span><br><span class="line"><span class="comment"># 自定义测试类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestAdd</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="comment"># 自定义测试方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add01</span><span class="params">(self)</span>:</span></span><br><span class="line">        num=add(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        self.assertEqual(num,<span class="number">0</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add02</span><span class="params">(self)</span>:</span></span><br><span class="line">        num=add(<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">        is_ok=num==<span class="number">1</span></span><br><span class="line">        self.assertTrue(is_ok)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add03</span><span class="params">(self)</span>:</span></span><br><span class="line">        num=add(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">        self.assertEqual(num,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h4 id="一个测试方法写多条用例"><a href="#一个测试方法写多条用例" class="headerlink" title="一个测试方法写多条用例"></a>一个测试方法写多条用例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">测试加法</span></span><br><span class="line"><span class="string">一个测试方法中包含多个测试用例</span></span><br><span class="line"><span class="string">缺点：结果只有一个</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个加法函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+y</span><br><span class="line"><span class="comment"># 自定义测试类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestAdd</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add</span><span class="params">(self)</span>:</span></span><br><span class="line">        test_data=[(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),(<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>),(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>)]</span><br><span class="line">        <span class="keyword">for</span> x,y,expect <span class="keyword">in</span> test_data:</span><br><span class="line">            print(<span class="string">"x=&#123;&#125; y=&#123;&#125; expect=&#123;&#125;"</span>.format(x, y, expect))</span><br><span class="line">            result=add(x,y)</span><br><span class="line">            self.assertEqual(result,expect)</span><br></pre></td></tr></table></figure><h4 id="参数化"><a href="#参数化" class="headerlink" title="参数化"></a>参数化</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">测试加法</span></span><br><span class="line"><span class="string">一个测试方法中包含多个测试用例</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> parameterized <span class="keyword">import</span> parameterized</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个加法函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义测试类</span></span><br><span class="line">方法一：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestAdd</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    test_data = [(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>)]</span><br><span class="line"><span class="meta">    @parameterized.expand(test_data)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add</span><span class="params">(self,x,y,expect)</span>:</span></span><br><span class="line">            print(<span class="string">"x=&#123;&#125; y=&#123;&#125; expect=&#123;&#125;"</span>.format(x, y, expect))</span><br><span class="line">            result=add(x,y)</span><br><span class="line">            self.assertEqual(result,expect)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 定义一个构建数据的函数</span></span><br><span class="line">方法二：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_data</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> [(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>)]</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestAdd</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"><span class="meta">    @parameterized.expand(build_data())</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_add</span><span class="params">(self,x,y,expect)</span>:</span></span><br><span class="line">        print(<span class="string">"x=&#123;&#125; y=&#123;&#125; expect=&#123;&#125;"</span>.format(x, y, expect))</span><br><span class="line">        result = add(x, y)</span><br><span class="line">        self.assertEqual(result, expect)</span><br></pre></td></tr></table></figure><h3 id="跳过"><a href="#跳过" class="headerlink" title="跳过"></a>跳过</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">概念：对于一些未完成的或者不满足测试条件的测试函数或类，可跳过执行</span><br></pre></td></tr></table></figure><p>代码见下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line">version=<span class="number">10</span></span><br><span class="line"><span class="comment"># 自定义测试类</span></span><br><span class="line"><span class="meta">@unittest.skip('跳过')</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestSkip</span><span class="params">(unittest.TestCase)</span>:</span> </span><br><span class="line">    <span class="comment"># 自定义测试方法</span></span><br><span class="line">    <span class="comment"># 直接将测试函数标记成跳过</span></span><br><span class="line">   <span class="comment"># @unittest.skip('代码未完成')</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_skip01</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'测试方法1'</span>)</span><br><span class="line">    <span class="comment"># 根据测试条件判断测试函数是否跳过</span></span><br><span class="line">   <span class="comment"># @unittest.skipIf(version&lt;=10,'版本号小于等于10才跳过')</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_skip02</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'测试方法2'</span>)</span><br></pre></td></tr></table></figure><h3 id="测试报告英文模板"><a href="#测试报告英文模板" class="headerlink" title="测试报告英文模板"></a>测试报告英文模板</h3><p>文件名：HTMLTestRunner.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">A TestRunner for use with the Python unit testing framework. It</span></span><br><span class="line"><span class="string">generates a HTML report to show the result at a glance.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The simplest way to use this is to invoke its main method. E.g.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    import unittest</span></span><br><span class="line"><span class="string">    import HTMLTestRunner</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ... define your tests ...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if __name__ == '__main__':</span></span><br><span class="line"><span class="string">        HTMLTestRunner.main()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For more customization options, instantiates a HTMLTestRunner object.</span></span><br><span class="line"><span class="string">HTMLTestRunner is a counterpart to unittest's TextTestRunner. E.g.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # output to a file</span></span><br><span class="line"><span class="string">    fp = file('my_report.html', 'wb')</span></span><br><span class="line"><span class="string">    runner = HTMLTestRunner.HTMLTestRunner(</span></span><br><span class="line"><span class="string">                stream=fp,</span></span><br><span class="line"><span class="string">                title='My unit test',</span></span><br><span class="line"><span class="string">                description='This demonstrates the report output by HTMLTestRunner.'</span></span><br><span class="line"><span class="string">                )</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # Use an external stylesheet.</span></span><br><span class="line"><span class="string">    # See the Template_mixin class for more customizable options</span></span><br><span class="line"><span class="string">    runner.STYLESHEET_TMPL = '&lt;link rel="stylesheet" href="my_stylesheet.css" type="text/css"&gt;'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # run the test</span></span><br><span class="line"><span class="string">    runner.run(my_test_suite)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">Copyright (c) 2004-2007, Wai Yip Tung</span></span><br><span class="line"><span class="string">All rights reserved.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Redistribution and use in source and binary forms, with or without</span></span><br><span class="line"><span class="string">modification, are permitted provided that the following conditions are</span></span><br><span class="line"><span class="string">met:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">* Redistributions of source code must retain the above copyright notice,</span></span><br><span class="line"><span class="string">  this list of conditions and the following disclaimer.</span></span><br><span class="line"><span class="string">* Redistributions in binary form must reproduce the above copyright</span></span><br><span class="line"><span class="string">  notice, this list of conditions and the following disclaimer in the</span></span><br><span class="line"><span class="string">  documentation and/or other materials provided with the distribution.</span></span><br><span class="line"><span class="string">* Neither the name Wai Yip Tung nor the names of its contributors may be</span></span><br><span class="line"><span class="string">  used to endorse or promote products derived from this software without</span></span><br><span class="line"><span class="string">  specific prior written permission.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS</span></span><br><span class="line"><span class="string">IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED</span></span><br><span class="line"><span class="string">TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A</span></span><br><span class="line"><span class="string">PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER</span></span><br><span class="line"><span class="string">OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,</span></span><br><span class="line"><span class="string">EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,</span></span><br><span class="line"><span class="string">PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR</span></span><br><span class="line"><span class="string">PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF</span></span><br><span class="line"><span class="string">LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING</span></span><br><span class="line"><span class="string">NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</span></span><br><span class="line"><span class="string">SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL: http://tungwaiyip.info/software/HTMLTestRunner.html</span></span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">"Wai Yip Tung"</span></span><br><span class="line">__version__ = <span class="string">"0.8.2"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Change History</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version 0.8.2</span></span><br><span class="line"><span class="string">* Show output inline instead of popup window (Viorel Lupu).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version in 0.8.1</span></span><br><span class="line"><span class="string">* Validated XHTML (Wolfgang Borgert).</span></span><br><span class="line"><span class="string">* Added description of test classes and test cases.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version in 0.8.0</span></span><br><span class="line"><span class="string">* Define Template_mixin class for customization.</span></span><br><span class="line"><span class="string">* Workaround a IE 6 bug that it does not treat &lt;script&gt; block as CDATA.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version in 0.7.1</span></span><br><span class="line"><span class="string">* Back port to Python 2.3 (Frank Horowitz).</span></span><br><span class="line"><span class="string">* Fix missing scroll bars in detail log (Podi).</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">TODO:</span> color stderr</span></span><br><span class="line"><span class="comment"># <span class="doctag">TODO:</span> simplify javascript using ,ore than 1 class in the class attribute?</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> xml.sax <span class="keyword">import</span> saxutils</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># The redirectors below are used to capture output during testing. Output</span></span><br><span class="line"><span class="comment"># sent to sys.stdout and sys.stderr are automatically captured. However</span></span><br><span class="line"><span class="comment"># in some cases sys.stdout is already cached before HTMLTestRunner is</span></span><br><span class="line"><span class="comment"># invoked (e.g. calling logging.basicConfig). In order to capture those</span></span><br><span class="line"><span class="comment"># output, use the redirectors for the cached stream.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># e.g.</span></span><br><span class="line"><span class="comment">#   &gt;&gt;&gt; logging.basicConfig(stream=HTMLTestRunner.stdout_redirector)</span></span><br><span class="line"><span class="comment">#   &gt;&gt;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OutputRedirector</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">""" Wrapper to redirect stdout or stderr """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, fp)</span>:</span></span><br><span class="line">        self.fp = fp</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        self.fp.write(s)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">writelines</span><span class="params">(self, lines)</span>:</span></span><br><span class="line">        self.fp.writelines(lines)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">flush</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.fp.flush()</span><br><span class="line"></span><br><span class="line">stdout_redirector = OutputRedirector(sys.stdout)</span><br><span class="line">stderr_redirector = OutputRedirector(sys.stderr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Template</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template_mixin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Define a HTML template for report customerization and generation.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Overall structure of an HTML report</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    HTML</span></span><br><span class="line"><span class="string">    +------------------------+</span></span><br><span class="line"><span class="string">    |&lt;html&gt;                  |</span></span><br><span class="line"><span class="string">    |  &lt;head&gt;                |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |   STYLESHEET           |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |   |                |   |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |  &lt;/head&gt;               |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |  &lt;body&gt;                |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |   HEADING              |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |   |                |   |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |   REPORT               |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |   |                |   |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |   ENDING               |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |   |                |   |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |  &lt;/body&gt;               |</span></span><br><span class="line"><span class="string">    |&lt;/html&gt;                 |</span></span><br><span class="line"><span class="string">    +------------------------+</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    STATUS = &#123;</span><br><span class="line">    <span class="number">0</span>: <span class="string">'pass'</span>,</span><br><span class="line">    <span class="number">1</span>: <span class="string">'fail'</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">'error'</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    DEFAULT_TITLE = <span class="string">'Unit Test Report'</span></span><br><span class="line">    DEFAULT_DESCRIPTION = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># HTML Template</span></span><br><span class="line"></span><br><span class="line">    HTML_TMPL = <span class="string">r"""&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</span></span><br><span class="line"><span class="string">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;%(title)s&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name="generator" content="%(generator)s"/&gt;</span></span><br><span class="line"><span class="string">    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/&gt;</span></span><br><span class="line"><span class="string">    %(stylesheet)s</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;script language="javascript" type="text/javascript"&gt;&lt;!--</span></span><br><span class="line"><span class="string">output_list = Array();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* level - 0:Summary; 1:Failed; 2:All */</span></span><br><span class="line"><span class="string">function showCase(level) &#123;</span></span><br><span class="line"><span class="string">    trs = document.getElementsByTagName("tr");</span></span><br><span class="line"><span class="string">    for (var i = 0; i &lt; trs.length; i++) &#123;</span></span><br><span class="line"><span class="string">        tr = trs[i];</span></span><br><span class="line"><span class="string">        id = tr.id;</span></span><br><span class="line"><span class="string">        if (id.substr(0,2) == 'ft') &#123;</span></span><br><span class="line"><span class="string">            if (level &lt; 1) &#123;</span></span><br><span class="line"><span class="string">                tr.className = 'hiddenRow';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            else &#123;</span></span><br><span class="line"><span class="string">                tr.className = '';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        if (id.substr(0,2) == 'pt') &#123;</span></span><br><span class="line"><span class="string">            if (level &gt; 1) &#123;</span></span><br><span class="line"><span class="string">                tr.className = '';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            else &#123;</span></span><br><span class="line"><span class="string">                tr.className = 'hiddenRow';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function showClassDetail(cid, count) &#123;</span></span><br><span class="line"><span class="string">    var id_list = Array(count);</span></span><br><span class="line"><span class="string">    var toHide = 1;</span></span><br><span class="line"><span class="string">    for (var i = 0; i &lt; count; i++) &#123;</span></span><br><span class="line"><span class="string">        tid0 = 't' + cid.substr(1) + '.' + (i+1);</span></span><br><span class="line"><span class="string">        tid = 'f' + tid0;</span></span><br><span class="line"><span class="string">        tr = document.getElementById(tid);</span></span><br><span class="line"><span class="string">        if (!tr) &#123;</span></span><br><span class="line"><span class="string">            tid = 'p' + tid0;</span></span><br><span class="line"><span class="string">            tr = document.getElementById(tid);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        id_list[i] = tid;</span></span><br><span class="line"><span class="string">        if (tr.className) &#123;</span></span><br><span class="line"><span class="string">            toHide = 0;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    for (var i = 0; i &lt; count; i++) &#123;</span></span><br><span class="line"><span class="string">        tid = id_list[i];</span></span><br><span class="line"><span class="string">        if (toHide) &#123;</span></span><br><span class="line"><span class="string">            document.getElementById('div_'+tid).style.display = 'none'</span></span><br><span class="line"><span class="string">            document.getElementById(tid).className = 'hiddenRow';</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        else &#123;</span></span><br><span class="line"><span class="string">            document.getElementById(tid).className = '';</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function showTestDetail(div_id)&#123;</span></span><br><span class="line"><span class="string">    var details_div = document.getElementById(div_id)</span></span><br><span class="line"><span class="string">    var displayState = details_div.style.display</span></span><br><span class="line"><span class="string">    // alert(displayState)</span></span><br><span class="line"><span class="string">    if (displayState != 'block' ) &#123;</span></span><br><span class="line"><span class="string">        displayState = 'block'</span></span><br><span class="line"><span class="string">        details_div.style.display = 'block'</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        details_div.style.display = 'none'</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function html_escape(s) &#123;</span></span><br><span class="line"><span class="string">    s = s.replace(/&amp;/g,'&amp;amp;');</span></span><br><span class="line"><span class="string">    s = s.replace(/&lt;/g,'&amp;lt;');</span></span><br><span class="line"><span class="string">    s = s.replace(/&gt;/g,'&amp;gt;');</span></span><br><span class="line"><span class="string">    return s;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* obsoleted by detail in &lt;div&gt;</span></span><br><span class="line"><span class="string">function showOutput(id, name) &#123;</span></span><br><span class="line"><span class="string">    var w = window.open("", //url</span></span><br><span class="line"><span class="string">                    name,</span></span><br><span class="line"><span class="string">                    "resizable,scrollbars,status,width=800,height=450");</span></span><br><span class="line"><span class="string">    d = w.document;</span></span><br><span class="line"><span class="string">    d.write("&lt;pre&gt;");</span></span><br><span class="line"><span class="string">    d.write(html_escape(output_list[id]));</span></span><br><span class="line"><span class="string">    d.write("\n");</span></span><br><span class="line"><span class="string">    d.write("&lt;a href='javascript:window.close()'&gt;close&lt;/a&gt;\n");</span></span><br><span class="line"><span class="string">    d.write("&lt;/pre&gt;\n");</span></span><br><span class="line"><span class="string">    d.close();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">*/</span></span><br><span class="line"><span class="string">--&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">%(heading)s</span></span><br><span class="line"><span class="string">%(report)s</span></span><br><span class="line"><span class="string">%(ending)s</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">    <span class="comment"># variables: (title, generator, stylesheet, heading, report, ending)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># Stylesheet</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># alternatively use a &lt;link&gt; for external style sheet, e.g.</span></span><br><span class="line">    <span class="comment">#   &lt;link rel="stylesheet" href="$url" type="text/css"&gt;</span></span><br><span class="line"></span><br><span class="line">    STYLESHEET_TMPL = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;style type="text/css" media="screen"&gt;</span></span><br><span class="line"><span class="string">body        &#123; font-family: verdana, arial, helvetica, sans-serif; font-size: 80%; &#125;</span></span><br><span class="line"><span class="string">table       &#123; font-size: 100%; &#125;</span></span><br><span class="line"><span class="string">pre         &#123; &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* -- heading ---------------------------------------------------------------------- */</span></span><br><span class="line"><span class="string">h1 &#123;</span></span><br><span class="line"><span class="string">font-size: 16pt;</span></span><br><span class="line"><span class="string">color: gray;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">.heading &#123;</span></span><br><span class="line"><span class="string">    margin-top: 0ex;</span></span><br><span class="line"><span class="string">    margin-bottom: 1ex;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.heading .attribute &#123;</span></span><br><span class="line"><span class="string">    margin-top: 1ex;</span></span><br><span class="line"><span class="string">    margin-bottom: 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.heading .description &#123;</span></span><br><span class="line"><span class="string">    margin-top: 4ex;</span></span><br><span class="line"><span class="string">    margin-bottom: 6ex;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* -- css div popup ------------------------------------------------------------------------ */</span></span><br><span class="line"><span class="string">a.popup_link &#123;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">a.popup_link:hover &#123;</span></span><br><span class="line"><span class="string">    color: red;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.popup_window &#123;</span></span><br><span class="line"><span class="string">    display: none;</span></span><br><span class="line"><span class="string">    position: relative;</span></span><br><span class="line"><span class="string">    left: 0px;</span></span><br><span class="line"><span class="string">    top: 0px;</span></span><br><span class="line"><span class="string">    /*border: solid #627173 1px; */</span></span><br><span class="line"><span class="string">    padding: 10px;</span></span><br><span class="line"><span class="string">    background-color: #E6E6D6;</span></span><br><span class="line"><span class="string">    font-family: "Lucida Console", "Courier New", Courier, monospace;</span></span><br><span class="line"><span class="string">    text-align: left;</span></span><br><span class="line"><span class="string">    font-size: 8pt;</span></span><br><span class="line"><span class="string">    width: 500px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">/* -- report ------------------------------------------------------------------------ */</span></span><br><span class="line"><span class="string">#show_detail_line &#123;</span></span><br><span class="line"><span class="string">    margin-top: 3ex;</span></span><br><span class="line"><span class="string">    margin-bottom: 1ex;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">#result_table &#123;</span></span><br><span class="line"><span class="string">    width: 80%;</span></span><br><span class="line"><span class="string">    border-collapse: collapse;</span></span><br><span class="line"><span class="string">    border: 1px solid #777;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">#header_row &#123;</span></span><br><span class="line"><span class="string">    font-weight: bold;</span></span><br><span class="line"><span class="string">    color: white;</span></span><br><span class="line"><span class="string">    background-color: #777;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">#result_table td &#123;</span></span><br><span class="line"><span class="string">    border: 1px solid #777;</span></span><br><span class="line"><span class="string">    padding: 2px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">#total_row  &#123; font-weight: bold; &#125;</span></span><br><span class="line"><span class="string">.passClass  &#123; background-color: #6c6; &#125;</span></span><br><span class="line"><span class="string">.failClass  &#123; background-color: #c60; &#125;</span></span><br><span class="line"><span class="string">.errorClass &#123; background-color: #c00; &#125;</span></span><br><span class="line"><span class="string">.passCase   &#123; color: #6c6; &#125;</span></span><br><span class="line"><span class="string">.failCase   &#123; color: #c60; font-weight: bold; &#125;</span></span><br><span class="line"><span class="string">.errorCase  &#123; color: #c00; font-weight: bold; &#125;</span></span><br><span class="line"><span class="string">.hiddenRow  &#123; display: none; &#125;</span></span><br><span class="line"><span class="string">.testcase   &#123; margin-left: 2em; &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* -- ending ---------------------------------------------------------------------- */</span></span><br><span class="line"><span class="string">#ending &#123;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># Heading</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">    HEADING_TMPL = <span class="string">"""&lt;div class='heading'&gt;</span></span><br><span class="line"><span class="string">&lt;h1&gt;%(title)s&lt;/h1&gt;</span></span><br><span class="line"><span class="string">%(parameters)s</span></span><br><span class="line"><span class="string">&lt;p class='description'&gt;%(description)s&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (title, parameters, description)</span></span><br><span class="line"></span><br><span class="line">    HEADING_ATTRIBUTE_TMPL = <span class="string">"""&lt;p class='attribute'&gt;&lt;strong&gt;%(name)s:&lt;/strong&gt; %(value)s&lt;/p&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (name, value)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># Report</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">    REPORT_TMPL = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;p id='show_detail_line'&gt;Show</span></span><br><span class="line"><span class="string">&lt;a href='javascript:showCase(0)'&gt;Summary&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href='javascript:showCase(1)'&gt;Failed&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a href='javascript:showCase(2)'&gt;All&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;table id='result_table'&gt;</span></span><br><span class="line"><span class="string">&lt;colgroup&gt;</span></span><br><span class="line"><span class="string">&lt;col align='left' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;/colgroup&gt;</span></span><br><span class="line"><span class="string">&lt;tr id='header_row'&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;Test Group/Test case&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;Count&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;Pass&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;Fail&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;Error&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;View&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">%(test_list)s</span></span><br><span class="line"><span class="string">&lt;tr id='total_row'&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;Total&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(count)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(Pass)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(fail)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(error)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;&amp;nbsp;&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;/table&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (test_list, count, Pass, fail, error)</span></span><br><span class="line"></span><br><span class="line">    REPORT_CLASS_TMPL = <span class="string">r"""</span></span><br><span class="line"><span class="string">&lt;tr class='%(style)s'&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(desc)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(count)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(Pass)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(fail)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(error)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;&lt;a href="javascript:showClassDetail('%(cid)s',%(count)s)"&gt;Detail&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (style, desc, count, Pass, fail, error, cid)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    REPORT_TEST_WITH_OUTPUT_TMPL = <span class="string">r"""</span></span><br><span class="line"><span class="string">&lt;tr id='%(tid)s' class='%(Class)s'&gt;</span></span><br><span class="line"><span class="string">    &lt;td class='%(style)s'&gt;&lt;div class='testcase'&gt;%(desc)s&lt;/div&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td colspan='5' align='center'&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;!--css div popup start--&gt;</span></span><br><span class="line"><span class="string">    &lt;a class="popup_link" onfocus='this.blur();' href="javascript:showTestDetail('div_%(tid)s')" &gt;</span></span><br><span class="line"><span class="string">        %(status)s&lt;/a&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;div id='div_%(tid)s' class="popup_window"&gt;</span></span><br><span class="line"><span class="string">        &lt;div style='text-align: right; color:red;cursor:pointer'&gt;</span></span><br><span class="line"><span class="string">        &lt;a onfocus='this.blur();' onclick="document.getElementById('div_%(tid)s').style.display = 'none' " &gt;</span></span><br><span class="line"><span class="string">           [x]&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;pre&gt;</span></span><br><span class="line"><span class="string">        %(script)s</span></span><br><span class="line"><span class="string">        &lt;/pre&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;!--css div popup end--&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (tid, Class, style, desc, status)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    REPORT_TEST_NO_OUTPUT_TMPL = <span class="string">r"""</span></span><br><span class="line"><span class="string">&lt;tr id='%(tid)s' class='%(Class)s'&gt;</span></span><br><span class="line"><span class="string">    &lt;td class='%(style)s'&gt;&lt;div class='testcase'&gt;%(desc)s&lt;/div&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td colspan='5' align='center'&gt;%(status)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (tid, Class, style, desc, status)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    REPORT_TEST_OUTPUT_TMPL = <span class="string">r"""</span></span><br><span class="line"><span class="string">%(id)s: %(output)s</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (id, output)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># ENDING</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">    ENDING_TMPL = <span class="string">"""&lt;div id='ending'&gt;&amp;nbsp;&lt;/div&gt;"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------- The end of the Template class -------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TestResult = unittest.TestResult</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_TestResult</span><span class="params">(TestResult)</span>:</span></span><br><span class="line">    <span class="comment"># note: _TestResult is a pure representation of results.</span></span><br><span class="line">    <span class="comment"># It lacks the output and reporting ability compares to unittest._TextTestResult.</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, verbosity=<span class="number">1</span>)</span>:</span></span><br><span class="line">        TestResult.__init__(self)</span><br><span class="line">        self.stdout0 = <span class="literal">None</span></span><br><span class="line">        self.stderr0 = <span class="literal">None</span></span><br><span class="line">        self.success_count = <span class="number">0</span></span><br><span class="line">        self.failure_count = <span class="number">0</span></span><br><span class="line">        self.error_count = <span class="number">0</span></span><br><span class="line">        self.verbosity = verbosity</span><br><span class="line"></span><br><span class="line">        <span class="comment"># result is a list of result in 4 tuple</span></span><br><span class="line">        <span class="comment"># (</span></span><br><span class="line">        <span class="comment">#   result code (0: success; 1: fail; 2: error),</span></span><br><span class="line">        <span class="comment">#   TestCase object,</span></span><br><span class="line">        <span class="comment">#   Test output (byte string),</span></span><br><span class="line">        <span class="comment">#   stack trace,</span></span><br><span class="line">        <span class="comment"># )</span></span><br><span class="line">        self.result = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">startTest</span><span class="params">(self, test)</span>:</span></span><br><span class="line">        TestResult.startTest(self, test)</span><br><span class="line">        <span class="comment"># just one buffer for both stdout and stderr</span></span><br><span class="line">        self.outputBuffer = io.StringIO()</span><br><span class="line">        stdout_redirector.fp = self.outputBuffer</span><br><span class="line">        stderr_redirector.fp = self.outputBuffer</span><br><span class="line">        self.stdout0 = sys.stdout</span><br><span class="line">        self.stderr0 = sys.stderr</span><br><span class="line">        sys.stdout = stdout_redirector</span><br><span class="line">        sys.stderr = stderr_redirector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">complete_output</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Disconnect output redirection and return buffer.</span></span><br><span class="line"><span class="string">        Safe to call multiple times.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> self.stdout0:</span><br><span class="line">            sys.stdout = self.stdout0</span><br><span class="line">            sys.stderr = self.stderr0</span><br><span class="line">            self.stdout0 = <span class="literal">None</span></span><br><span class="line">            self.stderr0 = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> self.outputBuffer.getvalue()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stopTest</span><span class="params">(self, test)</span>:</span></span><br><span class="line">        <span class="comment"># Usually one of addSuccess, addError or addFailure would have been called.</span></span><br><span class="line">        <span class="comment"># But there are some path in unittest that would bypass this.</span></span><br><span class="line">        <span class="comment"># We must disconnect stdout in stopTest(), which is guaranteed to be called.</span></span><br><span class="line">        self.complete_output()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addSuccess</span><span class="params">(self, test)</span>:</span></span><br><span class="line">        self.success_count += <span class="number">1</span></span><br><span class="line">        TestResult.addSuccess(self, test)</span><br><span class="line">        output = self.complete_output()</span><br><span class="line">        self.result.append((<span class="number">0</span>, test, output, <span class="string">''</span>))</span><br><span class="line">        <span class="keyword">if</span> self.verbosity &gt; <span class="number">1</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'ok '</span>)</span><br><span class="line">            sys.stderr.write(str(test))</span><br><span class="line">            sys.stderr.write(<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'.'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addError</span><span class="params">(self, test, err)</span>:</span></span><br><span class="line">        self.error_count += <span class="number">1</span></span><br><span class="line">        TestResult.addError(self, test, err)</span><br><span class="line">        _, _exc_str = self.errors[<span class="number">-1</span>]</span><br><span class="line">        output = self.complete_output()</span><br><span class="line">        self.result.append((<span class="number">2</span>, test, output, _exc_str))</span><br><span class="line">        <span class="keyword">if</span> self.verbosity &gt; <span class="number">1</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'E  '</span>)</span><br><span class="line">            sys.stderr.write(str(test))</span><br><span class="line">            sys.stderr.write(<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'E'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addFailure</span><span class="params">(self, test, err)</span>:</span></span><br><span class="line">        self.failure_count += <span class="number">1</span></span><br><span class="line">        TestResult.addFailure(self, test, err)</span><br><span class="line">        _, _exc_str = self.failures[<span class="number">-1</span>]</span><br><span class="line">        output = self.complete_output()</span><br><span class="line">        self.result.append((<span class="number">1</span>, test, output, _exc_str))</span><br><span class="line">        <span class="keyword">if</span> self.verbosity &gt; <span class="number">1</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'F  '</span>)</span><br><span class="line">            sys.stderr.write(str(test))</span><br><span class="line">            sys.stderr.write(<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'F'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HTMLTestRunner</span><span class="params">(Template_mixin)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, stream=sys.stdout, verbosity=<span class="number">1</span>, title=None, description=None)</span>:</span></span><br><span class="line">        self.stream = stream</span><br><span class="line">        self.verbosity = verbosity</span><br><span class="line">        <span class="keyword">if</span> title <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.title = self.DEFAULT_TITLE</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.title = title</span><br><span class="line">        <span class="keyword">if</span> description <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.description = self.DEFAULT_DESCRIPTION</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.description = description</span><br><span class="line"></span><br><span class="line">        self.startTime = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, test)</span>:</span></span><br><span class="line">        <span class="string">"Run the given test case or test suite."</span></span><br><span class="line">        result = _TestResult(self.verbosity)</span><br><span class="line">        test(result)</span><br><span class="line">        self.stopTime = datetime.datetime.now()</span><br><span class="line">        self.generateReport(test, result)</span><br><span class="line">        print(sys.stderr, <span class="string">'\nTimeElapsed: %s'</span> % (self.stopTime-self.startTime))</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortResult</span><span class="params">(self, result_list)</span>:</span></span><br><span class="line">        <span class="comment"># unittest does not seems to run in any particular order.</span></span><br><span class="line">        <span class="comment"># Here at least we want to group them together by class.</span></span><br><span class="line">        rmap = &#123;&#125;</span><br><span class="line">        classes = []</span><br><span class="line">        <span class="keyword">for</span> n,t,o,e <span class="keyword">in</span> result_list:</span><br><span class="line">            cls = t.__class__</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cls <span class="keyword">in</span> rmap:</span><br><span class="line">                rmap[cls] = []</span><br><span class="line">                classes.append(cls)</span><br><span class="line">            rmap[cls].append((n,t,o,e))</span><br><span class="line">        r = [(cls, rmap[cls]) <span class="keyword">for</span> cls <span class="keyword">in</span> classes]</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getReportAttributes</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Return report attributes as a list of (name, value).</span></span><br><span class="line"><span class="string">        Override this to add custom attributes.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        startTime = str(self.startTime)[:<span class="number">19</span>]</span><br><span class="line">        duration = str(self.stopTime - self.startTime)</span><br><span class="line">        status = []</span><br><span class="line">        <span class="keyword">if</span> result.success_count: status.append(<span class="string">'Pass %s'</span>    % result.success_count)</span><br><span class="line">        <span class="keyword">if</span> result.failure_count: status.append(<span class="string">'Failure %s'</span> % result.failure_count)</span><br><span class="line">        <span class="keyword">if</span> result.error_count:   status.append(<span class="string">'Error %s'</span>   % result.error_count  )</span><br><span class="line">        <span class="keyword">if</span> status:</span><br><span class="line">            status = <span class="string">' '</span>.join(status)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            status = <span class="string">'none'</span></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            (<span class="string">'Start Time'</span>, startTime),</span><br><span class="line">            (<span class="string">'Duration'</span>, duration),</span><br><span class="line">            (<span class="string">'Status'</span>, status),</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generateReport</span><span class="params">(self, test, result)</span>:</span></span><br><span class="line">        report_attrs = self.getReportAttributes(result)</span><br><span class="line">        generator = <span class="string">'HTMLTestRunner %s'</span> % __version__</span><br><span class="line">        stylesheet = self._generate_stylesheet()</span><br><span class="line">        heading = self._generate_heading(report_attrs)</span><br><span class="line">        report = self._generate_report(result)</span><br><span class="line">        ending = self._generate_ending()</span><br><span class="line">        output = self.HTML_TMPL % dict(</span><br><span class="line">            title = saxutils.escape(self.title),</span><br><span class="line">            generator = generator,</span><br><span class="line">            stylesheet = stylesheet,</span><br><span class="line">            heading = heading,</span><br><span class="line">            report = report,</span><br><span class="line">            ending = ending,</span><br><span class="line">        )</span><br><span class="line">        self.stream.write(output.encode(<span class="string">'utf8'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_stylesheet</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.STYLESHEET_TMPL</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_heading</span><span class="params">(self, report_attrs)</span>:</span></span><br><span class="line">        a_lines = []</span><br><span class="line">        <span class="keyword">for</span> name, value <span class="keyword">in</span> report_attrs:</span><br><span class="line">            line = self.HEADING_ATTRIBUTE_TMPL % dict(</span><br><span class="line">                    name = saxutils.escape(name),</span><br><span class="line">                    value = saxutils.escape(value),</span><br><span class="line">                )</span><br><span class="line">            a_lines.append(line)</span><br><span class="line">        heading = self.HEADING_TMPL % dict(</span><br><span class="line">            title = saxutils.escape(self.title),</span><br><span class="line">            parameters = <span class="string">''</span>.join(a_lines),</span><br><span class="line">            description = saxutils.escape(self.description),</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> heading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_report</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        rows = []</span><br><span class="line">        sortedResult = self.sortResult(result.result)</span><br><span class="line">        <span class="keyword">for</span> cid, (cls, cls_results) <span class="keyword">in</span> enumerate(sortedResult):</span><br><span class="line">            <span class="comment"># subtotal for a class</span></span><br><span class="line">            np = nf = ne = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> n,t,o,e <span class="keyword">in</span> cls_results:</span><br><span class="line">                <span class="keyword">if</span> n == <span class="number">0</span>: np += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> n == <span class="number">1</span>: nf += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>: ne += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># format class description</span></span><br><span class="line">            <span class="keyword">if</span> cls.__module__ == <span class="string">"__main__"</span>:</span><br><span class="line">                name = cls.__name__</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                name = <span class="string">"%s.%s"</span> % (cls.__module__, cls.__name__)</span><br><span class="line">            doc = cls.__doc__ <span class="keyword">and</span> cls.__doc__.split(<span class="string">"\n"</span>)[<span class="number">0</span>] <span class="keyword">or</span> <span class="string">""</span></span><br><span class="line">            desc = doc <span class="keyword">and</span> <span class="string">'%s: %s'</span> % (name, doc) <span class="keyword">or</span> name</span><br><span class="line"></span><br><span class="line">            row = self.REPORT_CLASS_TMPL % dict(</span><br><span class="line">                style = ne &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="string">'errorClass'</span> <span class="keyword">or</span> nf &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="string">'failClass'</span> <span class="keyword">or</span> <span class="string">'passClass'</span>,</span><br><span class="line">                desc = desc,</span><br><span class="line">                count = np+nf+ne,</span><br><span class="line">                Pass = np,</span><br><span class="line">                fail = nf,</span><br><span class="line">                error = ne,</span><br><span class="line">                cid = <span class="string">'c%s'</span> % (cid+<span class="number">1</span>),</span><br><span class="line">            )</span><br><span class="line">            rows.append(row)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> tid, (n,t,o,e) <span class="keyword">in</span> enumerate(cls_results):</span><br><span class="line">                self._generate_report_test(rows, cid, tid, n, t, o, e)</span><br><span class="line"></span><br><span class="line">        report = self.REPORT_TMPL % dict(</span><br><span class="line">            test_list = <span class="string">''</span>.join(rows),</span><br><span class="line">            count = str(result.success_count+result.failure_count+result.error_count),</span><br><span class="line">            Pass = str(result.success_count),</span><br><span class="line">            fail = str(result.failure_count),</span><br><span class="line">            error = str(result.error_count),</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> report</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_report_test</span><span class="params">(self, rows, cid, tid, n, t, o, e)</span>:</span></span><br><span class="line">        <span class="comment"># e.g. 'pt1.1', 'ft1.1', etc</span></span><br><span class="line">        has_output = bool(o <span class="keyword">or</span> e)</span><br><span class="line">        tid = (n == <span class="number">0</span> <span class="keyword">and</span> <span class="string">'p'</span> <span class="keyword">or</span> <span class="string">'f'</span>) + <span class="string">'t%s.%s'</span> % (cid+<span class="number">1</span>,tid+<span class="number">1</span>)</span><br><span class="line">        name = t.id().split(<span class="string">'.'</span>)[<span class="number">-1</span>]</span><br><span class="line">        doc = t.shortDescription() <span class="keyword">or</span> <span class="string">""</span></span><br><span class="line">        desc = doc <span class="keyword">and</span> (<span class="string">'%s: %s'</span> % (name, doc)) <span class="keyword">or</span> name</span><br><span class="line">        tmpl = has_output <span class="keyword">and</span> self.REPORT_TEST_WITH_OUTPUT_TMPL <span class="keyword">or</span> self.REPORT_TEST_NO_OUTPUT_TMPL</span><br><span class="line"></span><br><span class="line">        <span class="comment"># o and e should be byte string because they are collected from stdout and stderr?</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(o,str):</span><br><span class="line">            <span class="comment"># <span class="doctag">TODO:</span> some problem with 'string_escape': it escape \n and mess up formating</span></span><br><span class="line">            <span class="comment"># uo = unicode(o.encode('string_escape'))</span></span><br><span class="line">            uo = e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            uo = o</span><br><span class="line">        <span class="keyword">if</span> isinstance(e,str):</span><br><span class="line">            <span class="comment"># <span class="doctag">TODO:</span> some problem with 'string_escape': it escape \n and mess up formating</span></span><br><span class="line">            <span class="comment"># ue = unicode(e.encode('string_escape'))</span></span><br><span class="line">            ue = e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ue = e</span><br><span class="line"></span><br><span class="line">        script = self.REPORT_TEST_OUTPUT_TMPL % dict(</span><br><span class="line">            id = tid,</span><br><span class="line">            output = saxutils.escape(uo+ue),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        row = tmpl % dict(</span><br><span class="line">            tid = tid,</span><br><span class="line">            Class = (n == <span class="number">0</span> <span class="keyword">and</span> <span class="string">'hiddenRow'</span> <span class="keyword">or</span> <span class="string">'none'</span>),</span><br><span class="line">            style = n == <span class="number">2</span> <span class="keyword">and</span> <span class="string">'errorCase'</span> <span class="keyword">or</span> (n == <span class="number">1</span> <span class="keyword">and</span> <span class="string">'failCase'</span> <span class="keyword">or</span> <span class="string">'none'</span>),</span><br><span class="line">            desc = desc,</span><br><span class="line">            script = script,</span><br><span class="line">            status = self.STATUS[n],</span><br><span class="line">        )</span><br><span class="line">        rows.append(row)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> has_output:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_ending</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.ENDING_TMPL</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># Facilities for running tests from the command line</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: Reuse unittest.TestProgram to launch test. In the future we may</span></span><br><span class="line"><span class="comment"># build our own launcher to support more specific command line</span></span><br><span class="line"><span class="comment"># parameters like test title, CSS, etc.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestProgram</span><span class="params">(unittest.TestProgram)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A variation of the unittest.TestProgram. Please refer to the base</span></span><br><span class="line"><span class="string">    class for command line parameters.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">runTests</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># Pick HTMLTestRunner as the default test runner.</span></span><br><span class="line">        <span class="comment"># base class's testRunner parameter is not useful because it means</span></span><br><span class="line">        <span class="comment"># we have to instantiate HTMLTestRunner before we know self.verbosity.</span></span><br><span class="line">        <span class="keyword">if</span> self.testRunner <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.testRunner = HTMLTestRunner(verbosity=self.verbosity)</span><br><span class="line">        unittest.TestProgram.runTests(self)</span><br><span class="line"></span><br><span class="line">main = TestProgram</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># Executing this module from the command line</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main(module=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h3 id="测试报告中文模板"><a href="#测试报告中文模板" class="headerlink" title="测试报告中文模板"></a>测试报告中文模板</h3><p>文件名：HTMLTestReportCN.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">A TestRunner for use with the Python unit testing framework. It</span></span><br><span class="line"><span class="string">generates a HTML report to show the result at a glance.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The simplest way to use this is to invoke its main method. E.g.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    import unittest</span></span><br><span class="line"><span class="string">    import HTMLTestRunner</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ... define your tests ...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if __name__ == '__main__':</span></span><br><span class="line"><span class="string">        HTMLTestRunner.main()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For more customization options, instantiates a HTMLTestRunner object.</span></span><br><span class="line"><span class="string">HTMLTestRunner is a counterpart to unittest's TextTestRunner. E.g.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # output to a file</span></span><br><span class="line"><span class="string">    fp = file('my_report.html', 'wb')</span></span><br><span class="line"><span class="string">    runner = HTMLTestRunner.HTMLTestRunner(</span></span><br><span class="line"><span class="string">                stream=fp,</span></span><br><span class="line"><span class="string">                title='My unit test',</span></span><br><span class="line"><span class="string">                description='This demonstrates the report output by HTMLTestRunner.'</span></span><br><span class="line"><span class="string">                )</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # Use an external stylesheet.</span></span><br><span class="line"><span class="string">    # See the Template_mixin class for more customizable options</span></span><br><span class="line"><span class="string">    runner.STYLESHEET_TMPL = '&lt;link rel="stylesheet" href="my_stylesheet.css" type="text/css"&gt;'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # run the test</span></span><br><span class="line"><span class="string">    runner.run(my_test_suite)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">------------------------------------------------------------------------</span></span><br><span class="line"><span class="string">Copyright (c) 2004-2007, Wai Yip Tung</span></span><br><span class="line"><span class="string">All rights reserved.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Redistribution and use in source and binary forms, with or without</span></span><br><span class="line"><span class="string">modification, are permitted provided that the following conditions are</span></span><br><span class="line"><span class="string">met:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">* Redistributions of source code must retain the above copyright notice,</span></span><br><span class="line"><span class="string">  this list of conditions and the following disclaimer.</span></span><br><span class="line"><span class="string">* Redistributions in binary form must reproduce the above copyright</span></span><br><span class="line"><span class="string">  notice, this list of conditions and the following disclaimer in the</span></span><br><span class="line"><span class="string">  documentation and/or other materials provided with the distribution.</span></span><br><span class="line"><span class="string">* Neither the name Wai Yip Tung nor the names of its contributors may be</span></span><br><span class="line"><span class="string">  used to endorse or promote products derived from this software without</span></span><br><span class="line"><span class="string">  specific prior written permission.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS</span></span><br><span class="line"><span class="string">IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED</span></span><br><span class="line"><span class="string">TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A</span></span><br><span class="line"><span class="string">PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER</span></span><br><span class="line"><span class="string">OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,</span></span><br><span class="line"><span class="string">EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,</span></span><br><span class="line"><span class="string">PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR</span></span><br><span class="line"><span class="string">PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF</span></span><br><span class="line"><span class="string">LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING</span></span><br><span class="line"><span class="string">NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</span></span><br><span class="line"><span class="string">SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL: http://tungwaiyip.info/software/HTMLTestRunner.html</span></span><br><span class="line"></span><br><span class="line">__author__ = <span class="string">"Wai Yip Tung,  Findyou"</span></span><br><span class="line">__version__ = <span class="string">"0.8.2.2"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Change History</span></span><br><span class="line"><span class="string">Version 0.8.2.1 -Findyou</span></span><br><span class="line"><span class="string">* 改为支持python3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version 0.8.2.1 -Findyou</span></span><br><span class="line"><span class="string">* 支持中文，汉化</span></span><br><span class="line"><span class="string">* 调整样式，美化（需要连入网络，使用的百度的Bootstrap.js）</span></span><br><span class="line"><span class="string">* 增加 通过分类显示、测试人员、通过率的展示</span></span><br><span class="line"><span class="string">* 优化“详细”与“收起”状态的变换</span></span><br><span class="line"><span class="string">* 增加返回顶部的锚点</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version 0.8.2</span></span><br><span class="line"><span class="string">* Show output inline instead of popup window (Viorel Lupu).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version in 0.8.1</span></span><br><span class="line"><span class="string">* Validated XHTML (Wolfgang Borgert).</span></span><br><span class="line"><span class="string">* Added description of test classes and test cases.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version in 0.8.0</span></span><br><span class="line"><span class="string">* Define Template_mixin class for customization.</span></span><br><span class="line"><span class="string">* Workaround a IE 6 bug that it does not treat &lt;script&gt; block as CDATA.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version in 0.7.1</span></span><br><span class="line"><span class="string">* Back port to Python 2.3 (Frank Horowitz).</span></span><br><span class="line"><span class="string">* Fix missing scroll bars in detail log (Podi).</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">TODO:</span> color stderr</span></span><br><span class="line"><span class="comment"># <span class="doctag">TODO:</span> simplify javascript using ,ore than 1 class in the class attribute?</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> xml.sax <span class="keyword">import</span> saxutils</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># The redirectors below are used to capture output during testing. Output</span></span><br><span class="line"><span class="comment"># sent to sys.stdout and sys.stderr are automatically captured. However</span></span><br><span class="line"><span class="comment"># in some cases sys.stdout is already cached before HTMLTestRunner is</span></span><br><span class="line"><span class="comment"># invoked (e.g. calling logging.basicConfig). In order to capture those</span></span><br><span class="line"><span class="comment"># output, use the redirectors for the cached stream.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># e.g.</span></span><br><span class="line"><span class="comment">#   &gt;&gt;&gt; logging.basicConfig(stream=HTMLTestRunner.stdout_redirector)</span></span><br><span class="line"><span class="comment">#   &gt;&gt;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OutputRedirector</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">""" Wrapper to redirect stdout or stderr """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, fp)</span>:</span></span><br><span class="line">        self.fp = fp</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        self.fp.write(s)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">writelines</span><span class="params">(self, lines)</span>:</span></span><br><span class="line">        self.fp.writelines(lines)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">flush</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.fp.flush()</span><br><span class="line"></span><br><span class="line">stdout_redirector = OutputRedirector(sys.stdout)</span><br><span class="line">stderr_redirector = OutputRedirector(sys.stderr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Template</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template_mixin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Define a HTML template for report customerization and generation.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Overall structure of an HTML report</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    HTML</span></span><br><span class="line"><span class="string">    +------------------------+</span></span><br><span class="line"><span class="string">    |&lt;html&gt;                  |</span></span><br><span class="line"><span class="string">    |  &lt;head&gt;                |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |   STYLESHEET           |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |   |                |   |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |  &lt;/head&gt;               |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |  &lt;body&gt;                |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |   HEADING              |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |   |                |   |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |   REPORT               |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |   |                |   |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |   ENDING               |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |   |                |   |</span></span><br><span class="line"><span class="string">    |   +----------------+   |</span></span><br><span class="line"><span class="string">    |                        |</span></span><br><span class="line"><span class="string">    |  &lt;/body&gt;               |</span></span><br><span class="line"><span class="string">    |&lt;/html&gt;                 |</span></span><br><span class="line"><span class="string">    +------------------------+</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    STATUS = &#123;</span><br><span class="line">    <span class="number">0</span>: <span class="string">'通过'</span>,</span><br><span class="line">    <span class="number">1</span>: <span class="string">'失败'</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">'错误'</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    DEFAULT_TITLE = <span class="string">'单元测试报告'</span></span><br><span class="line">    DEFAULT_DESCRIPTION = <span class="string">''</span></span><br><span class="line">    DEFAULT_TESTER=<span class="string">'最棒QA'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># HTML Template</span></span><br><span class="line"></span><br><span class="line">    HTML_TMPL = <span class="string">r"""&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</span></span><br><span class="line"><span class="string">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;%(title)s&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name="generator" content="%(generator)s"/&gt;</span></span><br><span class="line"><span class="string">    &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/&gt;</span></span><br><span class="line"><span class="string">    &lt;link href="http://libs.baidu.com/bootstrap/3.0.3/css/bootstrap.min.css" rel="stylesheet"&gt;</span></span><br><span class="line"><span class="string">    &lt;script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script src="http://libs.baidu.com/bootstrap/3.0.3/js/bootstrap.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    %(stylesheet)s</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body &gt;</span></span><br><span class="line"><span class="string">&lt;script language="javascript" type="text/javascript"&gt;</span></span><br><span class="line"><span class="string">output_list = Array();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/*level 调整增加只显示通过用例的分类 --Findyou</span></span><br><span class="line"><span class="string">0:Summary //all hiddenRow</span></span><br><span class="line"><span class="string">1:Failed  //pt hiddenRow, ft none</span></span><br><span class="line"><span class="string">2:Pass    //pt none, ft hiddenRow</span></span><br><span class="line"><span class="string">3:All     //pt none, ft none</span></span><br><span class="line"><span class="string">*/</span></span><br><span class="line"><span class="string">function showCase(level) &#123;</span></span><br><span class="line"><span class="string">    trs = document.getElementsByTagName("tr");</span></span><br><span class="line"><span class="string">    for (var i = 0; i &lt; trs.length; i++) &#123;</span></span><br><span class="line"><span class="string">        tr = trs[i];</span></span><br><span class="line"><span class="string">        id = tr.id;</span></span><br><span class="line"><span class="string">        if (id.substr(0,2) == 'ft') &#123;</span></span><br><span class="line"><span class="string">            if (level == 2 || level == 0 ) &#123;</span></span><br><span class="line"><span class="string">                tr.className = 'hiddenRow';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            else &#123;</span></span><br><span class="line"><span class="string">                tr.className = '';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        if (id.substr(0,2) == 'pt') &#123;</span></span><br><span class="line"><span class="string">            if (level &lt; 2) &#123;</span></span><br><span class="line"><span class="string">                tr.className = 'hiddenRow';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            else &#123;</span></span><br><span class="line"><span class="string">                tr.className = '';</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    //加入【详细】切换文字变化 --Findyou</span></span><br><span class="line"><span class="string">    detail_class=document.getElementsByClassName('detail');</span></span><br><span class="line"><span class="string">//console.log(detail_class.length)</span></span><br><span class="line"><span class="string">if (level == 3) &#123;</span></span><br><span class="line"><span class="string">for (var i = 0; i &lt; detail_class.length; i++)&#123;</span></span><br><span class="line"><span class="string">detail_class[i].innerHTML="收起"</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else&#123;</span></span><br><span class="line"><span class="string">for (var i = 0; i &lt; detail_class.length; i++)&#123;</span></span><br><span class="line"><span class="string">detail_class[i].innerHTML="详细"</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function showClassDetail(cid, count) &#123;</span></span><br><span class="line"><span class="string">    var id_list = Array(count);</span></span><br><span class="line"><span class="string">    var toHide = 1;</span></span><br><span class="line"><span class="string">    for (var i = 0; i &lt; count; i++) &#123;</span></span><br><span class="line"><span class="string">        //ID修改 点 为 下划线 -Findyou</span></span><br><span class="line"><span class="string">        tid0 = 't' + cid.substr(1) + '_' + (i+1);</span></span><br><span class="line"><span class="string">        tid = 'f' + tid0;</span></span><br><span class="line"><span class="string">        tr = document.getElementById(tid);</span></span><br><span class="line"><span class="string">        if (!tr) &#123;</span></span><br><span class="line"><span class="string">            tid = 'p' + tid0;</span></span><br><span class="line"><span class="string">            tr = document.getElementById(tid);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        id_list[i] = tid;</span></span><br><span class="line"><span class="string">        if (tr.className) &#123;</span></span><br><span class="line"><span class="string">            toHide = 0;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    for (var i = 0; i &lt; count; i++) &#123;</span></span><br><span class="line"><span class="string">        tid = id_list[i];</span></span><br><span class="line"><span class="string">        //修改点击无法收起的BUG，加入【详细】切换文字变化 --Findyou</span></span><br><span class="line"><span class="string">        if (toHide) &#123;</span></span><br><span class="line"><span class="string">            document.getElementById(tid).className = 'hiddenRow';</span></span><br><span class="line"><span class="string">            document.getElementById(cid).innerText = "详细"</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        else &#123;</span></span><br><span class="line"><span class="string">            document.getElementById(tid).className = '';</span></span><br><span class="line"><span class="string">            document.getElementById(cid).innerText = "收起"</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function html_escape(s) &#123;</span></span><br><span class="line"><span class="string">    s = s.replace(/&amp;/g,'&amp;amp;');</span></span><br><span class="line"><span class="string">    s = s.replace(/&lt;/g,'&amp;lt;');</span></span><br><span class="line"><span class="string">    s = s.replace(/&gt;/g,'&amp;gt;');</span></span><br><span class="line"><span class="string">    return s;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">%(heading)s</span></span><br><span class="line"><span class="string">%(report)s</span></span><br><span class="line"><span class="string">%(ending)s</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">    <span class="comment"># variables: (title, generator, stylesheet, heading, report, ending)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># Stylesheet</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># alternatively use a &lt;link&gt; for external style sheet, e.g.</span></span><br><span class="line">    <span class="comment">#   &lt;link rel="stylesheet" href="$url" type="text/css"&gt;</span></span><br><span class="line"></span><br><span class="line">    STYLESHEET_TMPL = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;style type="text/css" media="screen"&gt;</span></span><br><span class="line"><span class="string">body        &#123; font-family: Microsoft YaHei,Tahoma,arial,helvetica,sans-serif;padding: 20px; font-size: 80%; &#125;</span></span><br><span class="line"><span class="string">table       &#123; font-size: 100%; &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* -- heading ---------------------------------------------------------------------- */</span></span><br><span class="line"><span class="string">.heading &#123;</span></span><br><span class="line"><span class="string">    margin-top: 0ex;</span></span><br><span class="line"><span class="string">    margin-bottom: 1ex;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.heading .description &#123;</span></span><br><span class="line"><span class="string">    margin-top: 4ex;</span></span><br><span class="line"><span class="string">    margin-bottom: 6ex;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/* -- report ------------------------------------------------------------------------ */</span></span><br><span class="line"><span class="string">#total_row  &#123; font-weight: bold; &#125;</span></span><br><span class="line"><span class="string">.passCase   &#123; color: #5cb85c; &#125;</span></span><br><span class="line"><span class="string">.failCase   &#123; color: #d9534f; font-weight: bold; &#125;</span></span><br><span class="line"><span class="string">.errorCase  &#123; color: #f0ad4e; font-weight: bold; &#125;</span></span><br><span class="line"><span class="string">.hiddenRow  &#123; display: none; &#125;</span></span><br><span class="line"><span class="string">.testcase   &#123; margin-left: 2em; &#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># Heading</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">    HEADING_TMPL = <span class="string">"""&lt;div class='heading'&gt;</span></span><br><span class="line"><span class="string">&lt;h1 style="font-family: Microsoft YaHei"&gt;%(title)s&lt;/h1&gt;</span></span><br><span class="line"><span class="string">%(parameters)s</span></span><br><span class="line"><span class="string">&lt;p class='description'&gt;%(description)s&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (title, parameters, description)</span></span><br><span class="line"></span><br><span class="line">    HEADING_ATTRIBUTE_TMPL = <span class="string">"""&lt;p class='attribute'&gt;&lt;strong&gt;%(name)s : &lt;/strong&gt; %(value)s&lt;/p&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (name, value)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># Report</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 汉化,加美化效果 --Findyou</span></span><br><span class="line">    REPORT_TMPL = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;p id='show_detail_line'&gt;</span></span><br><span class="line"><span class="string">&lt;a class="btn btn-primary" href='javascript:showCase(0)'&gt;概要&#123; %(passrate)s &#125;&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a class="btn btn-danger" href='javascript:showCase(1)'&gt;失败&#123; %(fail)s &#125;&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a class="btn btn-success" href='javascript:showCase(2)'&gt;通过&#123; %(Pass)s &#125;&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a class="btn btn-info" href='javascript:showCase(3)'&gt;所有&#123; %(count)s &#125;&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;table id='result_table' class="table table-condensed table-bordered table-hover"&gt;</span></span><br><span class="line"><span class="string">&lt;colgroup&gt;</span></span><br><span class="line"><span class="string">&lt;col align='left' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;col align='right' /&gt;</span></span><br><span class="line"><span class="string">&lt;/colgroup&gt;</span></span><br><span class="line"><span class="string">&lt;tr id='header_row' class="text-center success" style="font-weight: bold;font-size: 14px;"&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;用例集/测试用例&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;总计&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;通过&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;失败&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;错误&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;详细&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">%(test_list)s</span></span><br><span class="line"><span class="string">&lt;tr id='total_row' class="text-center active"&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;总计&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(count)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(Pass)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(fail)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(error)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;通过率：%(passrate)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;/table&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (test_list, count, Pass, fail, error ,passrate)</span></span><br><span class="line"></span><br><span class="line">    REPORT_CLASS_TMPL = <span class="string">r"""</span></span><br><span class="line"><span class="string">&lt;tr class='%(style)s warning'&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;%(desc)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td class="text-center"&gt;%(count)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td class="text-center"&gt;%(Pass)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td class="text-center"&gt;%(fail)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td class="text-center"&gt;%(error)s&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td class="text-center"&gt;&lt;a href="javascript:showClassDetail('%(cid)s',%(count)s)" class="detail" id='%(cid)s'&gt;详细&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (style, desc, count, Pass, fail, error, cid)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#失败 的样式，去掉原来JS效果，美化展示效果  -Findyou</span></span><br><span class="line">    REPORT_TEST_WITH_OUTPUT_TMPL = <span class="string">r"""</span></span><br><span class="line"><span class="string">&lt;tr id='%(tid)s' class='%(Class)s'&gt;</span></span><br><span class="line"><span class="string">    &lt;td class='%(style)s'&gt;&lt;div class='testcase'&gt;%(desc)s&lt;/div&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td colspan='5' align='center'&gt;</span></span><br><span class="line"><span class="string">    &lt;!--默认收起错误信息 -Findyou</span></span><br><span class="line"><span class="string">    &lt;button id='btn_%(tid)s' type="button"  class="btn btn-danger btn-xs collapsed" data-toggle="collapse" data-target='#div_%(tid)s'&gt;%(status)s&lt;/button&gt;</span></span><br><span class="line"><span class="string">    &lt;div id='div_%(tid)s' class="collapse"&gt;  --&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;!-- 默认展开错误信息 -Findyou --&gt;</span></span><br><span class="line"><span class="string">    &lt;button id='btn_%(tid)s' type="button"  class="btn btn-danger btn-xs" data-toggle="collapse" data-target='#div_%(tid)s'&gt;%(status)s&lt;/button&gt;</span></span><br><span class="line"><span class="string">    &lt;div id='div_%(tid)s' class="collapse in"&gt;</span></span><br><span class="line"><span class="string">    &lt;pre&gt;</span></span><br><span class="line"><span class="string">    %(script)s</span></span><br><span class="line"><span class="string">    &lt;/pre&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (tid, Class, style, desc, status)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 通过 的样式，加标签效果  -Findyou</span></span><br><span class="line">    REPORT_TEST_NO_OUTPUT_TMPL = <span class="string">r"""</span></span><br><span class="line"><span class="string">&lt;tr id='%(tid)s' class='%(Class)s'&gt;</span></span><br><span class="line"><span class="string">    &lt;td class='%(style)s'&gt;&lt;div class='testcase'&gt;%(desc)s&lt;/div&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td colspan='5' align='center'&gt;&lt;span class="label label-success success"&gt;%(status)s&lt;/span&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">&lt;/tr&gt;</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (tid, Class, style, desc, status)</span></span><br><span class="line"></span><br><span class="line">    REPORT_TEST_OUTPUT_TMPL = <span class="string">r"""</span></span><br><span class="line"><span class="string">%(id)s: %(output)s</span></span><br><span class="line"><span class="string">"""</span> <span class="comment"># variables: (id, output)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment"># ENDING</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 增加返回顶部按钮  --Findyou</span></span><br><span class="line">    ENDING_TMPL = <span class="string">"""&lt;div id='ending'&gt;&amp;nbsp;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div style=" position:fixed;right:50px; bottom:30px; width:20px; height:20px;cursor:pointer"&gt;</span></span><br><span class="line"><span class="string">    &lt;a href="#"&gt;&lt;span class="glyphicon glyphicon-eject" style = "font-size:30px;" aria-hidden="true"&gt;</span></span><br><span class="line"><span class="string">    &lt;/span&gt;&lt;/a&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------- The end of the Template class -------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TestResult = unittest.TestResult</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_TestResult</span><span class="params">(TestResult)</span>:</span></span><br><span class="line">    <span class="comment"># note: _TestResult is a pure representation of results.</span></span><br><span class="line">    <span class="comment"># It lacks the output and reporting ability compares to unittest._TextTestResult.</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, verbosity=<span class="number">1</span>)</span>:</span></span><br><span class="line">        TestResult.__init__(self)</span><br><span class="line">        self.stdout0 = <span class="literal">None</span></span><br><span class="line">        self.stderr0 = <span class="literal">None</span></span><br><span class="line">        self.success_count = <span class="number">0</span></span><br><span class="line">        self.failure_count = <span class="number">0</span></span><br><span class="line">        self.error_count = <span class="number">0</span></span><br><span class="line">        self.verbosity = verbosity</span><br><span class="line"></span><br><span class="line">        <span class="comment"># result is a list of result in 4 tuple</span></span><br><span class="line">        <span class="comment"># (</span></span><br><span class="line">        <span class="comment">#   result code (0: success; 1: fail; 2: error),</span></span><br><span class="line">        <span class="comment">#   TestCase object,</span></span><br><span class="line">        <span class="comment">#   Test output (byte string),</span></span><br><span class="line">        <span class="comment">#   stack trace,</span></span><br><span class="line">        <span class="comment"># )</span></span><br><span class="line">        self.result = []</span><br><span class="line">        <span class="comment">#增加一个测试通过率 --Findyou</span></span><br><span class="line">        self.passrate=float(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">startTest</span><span class="params">(self, test)</span>:</span></span><br><span class="line">        TestResult.startTest(self, test)</span><br><span class="line">        <span class="comment"># just one buffer for both stdout and stderr</span></span><br><span class="line">        self.outputBuffer = io.StringIO()</span><br><span class="line">        stdout_redirector.fp = self.outputBuffer</span><br><span class="line">        stderr_redirector.fp = self.outputBuffer</span><br><span class="line">        self.stdout0 = sys.stdout</span><br><span class="line">        self.stderr0 = sys.stderr</span><br><span class="line">        sys.stdout = stdout_redirector</span><br><span class="line">        sys.stderr = stderr_redirector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">complete_output</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Disconnect output redirection and return buffer.</span></span><br><span class="line"><span class="string">        Safe to call multiple times.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> self.stdout0:</span><br><span class="line">            sys.stdout = self.stdout0</span><br><span class="line">            sys.stderr = self.stderr0</span><br><span class="line">            self.stdout0 = <span class="literal">None</span></span><br><span class="line">            self.stderr0 = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> self.outputBuffer.getvalue()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stopTest</span><span class="params">(self, test)</span>:</span></span><br><span class="line">        <span class="comment"># Usually one of addSuccess, addError or addFailure would have been called.</span></span><br><span class="line">        <span class="comment"># But there are some path in unittest that would bypass this.</span></span><br><span class="line">        <span class="comment"># We must disconnect stdout in stopTest(), which is guaranteed to be called.</span></span><br><span class="line">        self.complete_output()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addSuccess</span><span class="params">(self, test)</span>:</span></span><br><span class="line">        self.success_count += <span class="number">1</span></span><br><span class="line">        TestResult.addSuccess(self, test)</span><br><span class="line">        output = self.complete_output()</span><br><span class="line">        self.result.append((<span class="number">0</span>, test, output, <span class="string">''</span>))</span><br><span class="line">        <span class="keyword">if</span> self.verbosity &gt; <span class="number">1</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'ok '</span>)</span><br><span class="line">            sys.stderr.write(str(test))</span><br><span class="line">            sys.stderr.write(<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'.'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addError</span><span class="params">(self, test, err)</span>:</span></span><br><span class="line">        self.error_count += <span class="number">1</span></span><br><span class="line">        TestResult.addError(self, test, err)</span><br><span class="line">        _, _exc_str = self.errors[<span class="number">-1</span>]</span><br><span class="line">        output = self.complete_output()</span><br><span class="line">        self.result.append((<span class="number">2</span>, test, output, _exc_str))</span><br><span class="line">        <span class="keyword">if</span> self.verbosity &gt; <span class="number">1</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'E  '</span>)</span><br><span class="line">            sys.stderr.write(str(test))</span><br><span class="line">            sys.stderr.write(<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'E'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addFailure</span><span class="params">(self, test, err)</span>:</span></span><br><span class="line">        self.failure_count += <span class="number">1</span></span><br><span class="line">        TestResult.addFailure(self, test, err)</span><br><span class="line">        _, _exc_str = self.failures[<span class="number">-1</span>]</span><br><span class="line">        output = self.complete_output()</span><br><span class="line">        self.result.append((<span class="number">1</span>, test, output, _exc_str))</span><br><span class="line">        <span class="keyword">if</span> self.verbosity &gt; <span class="number">1</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'F  '</span>)</span><br><span class="line">            sys.stderr.write(str(test))</span><br><span class="line">            sys.stderr.write(<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.stderr.write(<span class="string">'F'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HTMLTestRunner</span><span class="params">(Template_mixin)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, stream=sys.stdout, verbosity=<span class="number">1</span>,title=None,description=None,tester=None)</span>:</span></span><br><span class="line">        self.stream = stream</span><br><span class="line">        self.verbosity = verbosity</span><br><span class="line">        <span class="keyword">if</span> title <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.title = self.DEFAULT_TITLE</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.title = title</span><br><span class="line">        <span class="keyword">if</span> description <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.description = self.DEFAULT_DESCRIPTION</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.description = description</span><br><span class="line">        <span class="keyword">if</span> tester <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.tester = self.DEFAULT_TESTER</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.tester = tester</span><br><span class="line"></span><br><span class="line">        self.startTime = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, test)</span>:</span></span><br><span class="line">        <span class="string">"Run the given test case or test suite."</span></span><br><span class="line">        result = _TestResult(self.verbosity)</span><br><span class="line">        test(result)</span><br><span class="line">        self.stopTime = datetime.datetime.now()</span><br><span class="line">        self.generateReport(test, result)</span><br><span class="line">        print(<span class="string">'\nTime Elapsed: %s'</span> % (self.stopTime-self.startTime), file=sys.stderr)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortResult</span><span class="params">(self, result_list)</span>:</span></span><br><span class="line">        <span class="comment"># unittest does not seems to run in any particular order.</span></span><br><span class="line">        <span class="comment"># Here at least we want to group them together by class.</span></span><br><span class="line">        rmap = &#123;&#125;</span><br><span class="line">        classes = []</span><br><span class="line">        <span class="keyword">for</span> n,t,o,e <span class="keyword">in</span> result_list:</span><br><span class="line">            cls = t.__class__</span><br><span class="line">            <span class="keyword">if</span> cls <span class="keyword">not</span> <span class="keyword">in</span> rmap:</span><br><span class="line">                rmap[cls] = []</span><br><span class="line">                classes.append(cls)</span><br><span class="line">            rmap[cls].append((n,t,o,e))</span><br><span class="line">        r = [(cls, rmap[cls]) <span class="keyword">for</span> cls <span class="keyword">in</span> classes]</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line">    <span class="comment">#替换测试结果status为通过率 --Findyou</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getReportAttributes</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Return report attributes as a list of (name, value).</span></span><br><span class="line"><span class="string">        Override this to add custom attributes.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        startTime = str(self.startTime)[:<span class="number">19</span>]</span><br><span class="line">        duration = str(self.stopTime - self.startTime)</span><br><span class="line">        status = []</span><br><span class="line">        status.append(<span class="string">'共 %s'</span> % (result.success_count + result.failure_count + result.error_count))</span><br><span class="line">        <span class="keyword">if</span> result.success_count: status.append(<span class="string">'通过 %s'</span>    % result.success_count)</span><br><span class="line">        <span class="keyword">if</span> result.failure_count: status.append(<span class="string">'失败 %s'</span> % result.failure_count)</span><br><span class="line">        <span class="keyword">if</span> result.error_count:   status.append(<span class="string">'错误 %s'</span>   % result.error_count  )</span><br><span class="line">        <span class="keyword">if</span> status:</span><br><span class="line">            status = <span class="string">'，'</span>.join(status)</span><br><span class="line">            self.passrate = str(<span class="string">"%.2f%%"</span> % (float(result.success_count) / float(result.success_count + result.failure_count + result.error_count) * <span class="number">100</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            status = <span class="string">'none'</span></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            (<span class="string">'测试人员'</span>, self.tester),</span><br><span class="line">            (<span class="string">'开始时间'</span>,startTime),</span><br><span class="line">            (<span class="string">'合计耗时'</span>,duration),</span><br><span class="line">            (<span class="string">'测试结果'</span>,status + <span class="string">"，通过率= "</span>+self.passrate),</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generateReport</span><span class="params">(self, test, result)</span>:</span></span><br><span class="line">        report_attrs = self.getReportAttributes(result)</span><br><span class="line">        generator = <span class="string">'HTMLTestRunner %s'</span> % __version__</span><br><span class="line">        stylesheet = self._generate_stylesheet()</span><br><span class="line">        heading = self._generate_heading(report_attrs)</span><br><span class="line">        report = self._generate_report(result)</span><br><span class="line">        ending = self._generate_ending()</span><br><span class="line">        output = self.HTML_TMPL % dict(</span><br><span class="line">            title = saxutils.escape(self.title),</span><br><span class="line">            generator = generator,</span><br><span class="line">            stylesheet = stylesheet,</span><br><span class="line">            heading = heading,</span><br><span class="line">            report = report,</span><br><span class="line">            ending = ending,</span><br><span class="line">        )</span><br><span class="line">        self.stream.write(output.encode(<span class="string">'utf8'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_stylesheet</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.STYLESHEET_TMPL</span><br><span class="line"></span><br><span class="line">    <span class="comment">#增加Tester显示 -Findyou</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_heading</span><span class="params">(self, report_attrs)</span>:</span></span><br><span class="line">        a_lines = []</span><br><span class="line">        <span class="keyword">for</span> name, value <span class="keyword">in</span> report_attrs:</span><br><span class="line">            line = self.HEADING_ATTRIBUTE_TMPL % dict(</span><br><span class="line">                    name = saxutils.escape(name),</span><br><span class="line">                    value = saxutils.escape(value),</span><br><span class="line">                )</span><br><span class="line">            a_lines.append(line)</span><br><span class="line">        heading = self.HEADING_TMPL % dict(</span><br><span class="line">            title = saxutils.escape(self.title),</span><br><span class="line">            parameters = <span class="string">''</span>.join(a_lines),</span><br><span class="line">            description = saxutils.escape(self.description),</span><br><span class="line">            tester= saxutils.escape(self.tester),</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> heading</span><br><span class="line"></span><br><span class="line">    <span class="comment">#生成报告  --Findyou添加注释</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_report</span><span class="params">(self, result)</span>:</span></span><br><span class="line">        rows = []</span><br><span class="line">        sortedResult = self.sortResult(result.result)</span><br><span class="line">        <span class="keyword">for</span> cid, (cls, cls_results) <span class="keyword">in</span> enumerate(sortedResult):</span><br><span class="line">            <span class="comment"># subtotal for a class</span></span><br><span class="line">            np = nf = ne = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> n,t,o,e <span class="keyword">in</span> cls_results:</span><br><span class="line">                <span class="keyword">if</span> n == <span class="number">0</span>: np += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> n == <span class="number">1</span>: nf += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>: ne += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># format class description</span></span><br><span class="line">            <span class="keyword">if</span> cls.__module__ == <span class="string">"__main__"</span>:</span><br><span class="line">                name = cls.__name__</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                name = <span class="string">"%s.%s"</span> % (cls.__module__, cls.__name__)</span><br><span class="line">            doc = cls.__doc__ <span class="keyword">and</span> cls.__doc__.split(<span class="string">"\n"</span>)[<span class="number">0</span>] <span class="keyword">or</span> <span class="string">""</span></span><br><span class="line">            desc = doc <span class="keyword">and</span> <span class="string">'%s: %s'</span> % (name, doc) <span class="keyword">or</span> name</span><br><span class="line"></span><br><span class="line">            row = self.REPORT_CLASS_TMPL % dict(</span><br><span class="line">                style = ne &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="string">'errorClass'</span> <span class="keyword">or</span> nf &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="string">'failClass'</span> <span class="keyword">or</span> <span class="string">'passClass'</span>,</span><br><span class="line">                desc = desc,</span><br><span class="line">                count = np+nf+ne,</span><br><span class="line">                Pass = np,</span><br><span class="line">                fail = nf,</span><br><span class="line">                error = ne,</span><br><span class="line">                cid = <span class="string">'c%s'</span> % (cid+<span class="number">1</span>),</span><br><span class="line">            )</span><br><span class="line">            rows.append(row)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> tid, (n,t,o,e) <span class="keyword">in</span> enumerate(cls_results):</span><br><span class="line">                self._generate_report_test(rows, cid, tid, n, t, o, e)</span><br><span class="line"></span><br><span class="line">        report = self.REPORT_TMPL % dict(</span><br><span class="line">            test_list = <span class="string">''</span>.join(rows),</span><br><span class="line">            count = str(result.success_count+result.failure_count+result.error_count),</span><br><span class="line">            Pass = str(result.success_count),</span><br><span class="line">            fail = str(result.failure_count),</span><br><span class="line">            error = str(result.error_count),</span><br><span class="line">            passrate =self.passrate,</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> report</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_report_test</span><span class="params">(self, rows, cid, tid, n, t, o, e)</span>:</span></span><br><span class="line">        <span class="comment"># e.g. 'pt1.1', 'ft1.1', etc</span></span><br><span class="line">        has_output = bool(o <span class="keyword">or</span> e)</span><br><span class="line">        <span class="comment"># ID修改点为下划线,支持Bootstrap折叠展开特效 - Findyou</span></span><br><span class="line">        tid = (n == <span class="number">0</span> <span class="keyword">and</span> <span class="string">'p'</span> <span class="keyword">or</span> <span class="string">'f'</span>) + <span class="string">'t%s_%s'</span> % (cid+<span class="number">1</span>,tid+<span class="number">1</span>)</span><br><span class="line">        name = t.id().split(<span class="string">'.'</span>)[<span class="number">-1</span>]</span><br><span class="line">        doc = t.shortDescription() <span class="keyword">or</span> <span class="string">""</span></span><br><span class="line">        desc = doc <span class="keyword">and</span> (<span class="string">'%s: %s'</span> % (name, doc)) <span class="keyword">or</span> name</span><br><span class="line">        tmpl = has_output <span class="keyword">and</span> self.REPORT_TEST_WITH_OUTPUT_TMPL <span class="keyword">or</span> self.REPORT_TEST_NO_OUTPUT_TMPL</span><br><span class="line"></span><br><span class="line">        <span class="comment"># utf-8 支持中文 - Findyou</span></span><br><span class="line">         <span class="comment"># o and e should be byte string because they are collected from stdout and stderr?</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(o, str):</span><br><span class="line">            <span class="comment"># <span class="doctag">TODO:</span> some problem with 'string_escape': it escape \n and mess up formating</span></span><br><span class="line">            <span class="comment"># uo = unicode(o.encode('string_escape'))</span></span><br><span class="line">            <span class="comment"># uo = o.decode('latin-1')</span></span><br><span class="line">            uo = o</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            uo = o</span><br><span class="line">        <span class="keyword">if</span> isinstance(e, str):</span><br><span class="line">            <span class="comment"># <span class="doctag">TODO:</span> some problem with 'string_escape': it escape \n and mess up formating</span></span><br><span class="line">            <span class="comment"># ue = unicode(e.encode('string_escape'))</span></span><br><span class="line">            <span class="comment"># ue = e.decode('latin-1')</span></span><br><span class="line">            ue = e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ue = e</span><br><span class="line"></span><br><span class="line">        script = self.REPORT_TEST_OUTPUT_TMPL % dict(</span><br><span class="line">            id = tid,</span><br><span class="line">            output = saxutils.escape(uo+ue),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        row = tmpl % dict(</span><br><span class="line">            tid = tid,</span><br><span class="line">            Class = (n == <span class="number">0</span> <span class="keyword">and</span> <span class="string">'hiddenRow'</span> <span class="keyword">or</span> <span class="string">'none'</span>),</span><br><span class="line">            style = n == <span class="number">2</span> <span class="keyword">and</span> <span class="string">'errorCase'</span> <span class="keyword">or</span> (n == <span class="number">1</span> <span class="keyword">and</span> <span class="string">'failCase'</span> <span class="keyword">or</span> <span class="string">'passCase'</span>),</span><br><span class="line">            desc = desc,</span><br><span class="line">            script = script,</span><br><span class="line">            status = self.STATUS[n],</span><br><span class="line">        )</span><br><span class="line">        rows.append(row)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> has_output:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_generate_ending</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.ENDING_TMPL</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># Facilities for running tests from the command line</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: Reuse unittest.TestProgram to launch test. In the future we may</span></span><br><span class="line"><span class="comment"># build our own launcher to support more specific command line</span></span><br><span class="line"><span class="comment"># parameters like test title, CSS, etc.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestProgram</span><span class="params">(unittest.TestProgram)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A variation of the unittest.TestProgram. Please refer to the base</span></span><br><span class="line"><span class="string">    class for command line parameters.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">runTests</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># Pick HTMLTestRunner as the default test runner.</span></span><br><span class="line">        <span class="comment"># base class's testRunner parameter is not useful because it means</span></span><br><span class="line">        <span class="comment"># we have to instantiate HTMLTestRunner before we know self.verbosity.</span></span><br><span class="line">        <span class="keyword">if</span> self.testRunner <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.testRunner = HTMLTestRunner(verbosity=self.verbosity)</span><br><span class="line">        unittest.TestProgram.runTests(self)</span><br><span class="line"></span><br><span class="line">main = TestProgram</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># Executing this module from the command line</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main(module=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h3 id="生成HTML测试报告"><a href="#生成HTML测试报告" class="headerlink" title="生成HTML测试报告"></a>生成HTML测试报告</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">方法<span class="number">1</span>:pycharm中运行代码之后，左下角有一个导出测试报告功能</span><br><span class="line">方法<span class="number">2</span>：HTML TestRunner报告</span><br><span class="line"><span class="comment"># 复制HTML TestRunner.py文件到项目文件夹</span></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> test_add02 <span class="keyword">import</span> TestAdd</span><br><span class="line"><span class="keyword">from</span> HTMLTestRunner <span class="keyword">import</span> HTMLTestRunner</span><br><span class="line"></span><br><span class="line"><span class="comment"># 组装测试用例（生成测试套件）</span></span><br><span class="line">suite = unittest.TestSuite()</span><br><span class="line">suite.addTest(unittest.makeSuite(TestAdd))</span><br><span class="line"><span class="comment"># 准备报告写入路径和文件名</span></span><br><span class="line">now_time=time.strftime(<span class="string">'%H%m%d_%H%M%S'</span>)</span><br><span class="line">file_path = <span class="string">'./report_&#123;&#125;.html'</span> .format(now_time)</span><br><span class="line"><span class="comment"># 打开报告，写入文件流</span></span><br><span class="line"><span class="keyword">with</span> open(file_path, <span class="string">'wb'</span>)<span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment"># 执行测试，生成测试报告</span></span><br><span class="line">    <span class="comment"># 初始化执行对象</span></span><br><span class="line">    runner = HTMLTestRunner(stream=f,title=<span class="string">'自动化测试'</span>,description=<span class="string">'chrome浏览器'</span>)</span><br><span class="line">    <span class="comment"># 调用RUN方法</span></span><br><span class="line">    runner.run(suite)</span><br></pre></td></tr></table></figure><h3 id="V1"><a href="#V1" class="headerlink" title="V1"></a>V1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">v1,一个用例一个文件</span></span><br><span class="line"><span class="string">登录，用户名正确，密码错误</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化浏览器对象，窗口最大化，设置隐士等待，打开三角洲后台系统</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.maximize_window()</span><br><span class="line">driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line">driver.get(<span class="string">'要访问的网址'</span>)</span><br><span class="line">driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line">driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line"><span class="comment">#element1=driver.find_element_by_css_selector('.el-button--primary')</span></span><br><span class="line"><span class="comment">#element2=driver.find_element_by_css_selector('span')</span></span><br><span class="line"><span class="comment">#element1&gt;element2.click()</span></span><br><span class="line"><span class="comment"># 输入正确的用户名，错误的密码，点击登录按钮</span></span><br><span class="line">driver.find_element_by_css_selector(<span class="string">'[placeholder="请输入用户名"]'</span>).send_keys(<span class="string">'正确的用户名'</span>)</span><br><span class="line">driver.find_element_by_xpath(<span class="string">'//*[@placeholder="请输入密码"]'</span>).send_keys(<span class="string">'错误的密码'</span>)</span><br><span class="line">driver.find_element_by_xpath(<span class="string">'//*[@id="app"]/div/div/div/form/div[3]/div/button/span'</span>) .click()</span><br><span class="line"><span class="comment">#driver.find_element_by_xpath('//*[@type="button"]/span').click()</span></span><br><span class="line"><span class="comment"># driver.find_element_by_css_selector('[type="button"]&gt;span').click()</span></span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 获取错误信息</span></span><br><span class="line">msg=driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[2]/div[2]/p'</span>).text</span><br><span class="line"><span class="comment"># msg=driver.find_element_by_css_selector('."el-message-box__message"&gt;p').text</span></span><br><span class="line">print(<span class="string">'msg='</span>,msg)</span><br><span class="line"><span class="comment"># 退出浏览器</span></span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h3 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h3><p>pass和…</p><h3 id="V2"><a href="#V2" class="headerlink" title="V2"></a>V2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在使用unittest框架时，文件的命名必须符合规范：项目名+模块名</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">引入unittest</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义测试类</span></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestDeltaLogin</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="string">"""测试登录模块"""</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUpClass</span><span class="params">(cls)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 初始化浏览器对象，窗口最大化，设置隐士等待，打开三角洲后台系统</span></span><br><span class="line">        cls.driver = webdriver.Chrome()</span><br><span class="line">        cls.driver.maximize_window()</span><br><span class="line">        cls.driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line">        cls.driver.get(<span class="string">'网页的网址'</span>)</span><br><span class="line">        cls.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line">        cls.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDownClass</span><span class="params">(cls)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 退出浏览器</span></span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        cls.driver.quit()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 点击确定按钮</span></span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义测试方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_username_error01</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""用户不存在"""</span></span><br><span class="line">        <span class="comment"># 输入正确的用户名，错误的密码，点击登录按钮</span></span><br><span class="line">        username=self.driver.find_element_by_css_selector(<span class="string">'[placeholder="请输入用户名"]'</span>)</span><br><span class="line">        username.clear()</span><br><span class="line">        username.send_keys(<span class="string">'用户名'</span>)</span><br><span class="line"></span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'//*[@placeholder="请输入密码"]'</span>).send_keys(<span class="string">'密码'</span>)</span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'//*[@id="app"]/div/div/div/form/div[3]/div/button/span'</span>).click()</span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="comment"># 获取错误信息</span></span><br><span class="line">        msg = self.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[2]/div[2]/p'</span>).text</span><br><span class="line">        print(<span class="string">'msg='</span>, msg)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_password_wrong02</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""密码错误"""</span></span><br><span class="line">        <span class="comment"># 输入正确的用户名，错误的密码，点击登录按钮</span></span><br><span class="line">        self.driver.find_element_by_css_selector(<span class="string">'[placeholder="请输入用户名"]'</span>).send_keys(<span class="string">'用户名'</span>)</span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'//*[@placeholder="请输入密码"]'</span>).send_keys(<span class="string">'密码'</span>)</span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'//*[@id="app"]/div/div/div/form/div[3]/div/button/span'</span>).click()</span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="comment"># 获取错误信息</span></span><br><span class="line">        msg = self.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[2]/div[2]/p'</span>).text</span><br><span class="line">        print(<span class="string">'msg='</span>, msg)</span><br></pre></td></tr></table></figure><h3 id="V3"><a href="#V3" class="headerlink" title="V3"></a>V3</h3><p>Utils.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 公共工具类,所有的文件都可以调用，因此放在最外面</span></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="string">"""定义弹窗消息的方法"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_tip_message</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 获取错误信息</span></span><br><span class="line">    <span class="comment">#msg = self.driver.find_element_by_xpath('/html/body/div[2]/div/div[2]/div[2]/p').text</span></span><br><span class="line">    msg=DriverUtil.get_driver().find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[2]/div[2]/p'</span>).text</span><br><span class="line">    <span class="comment">#print('msg=', msg)</span></span><br><span class="line">    <span class="keyword">return</span> msg</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DriverUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""浏览器驱动工具类"""</span></span><br><span class="line">    driver=<span class="literal">None</span></span><br><span class="line">    <span class="string">"""第一次调用的时候给浏览器赋值为空"""</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_driver</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        获取浏览器驱动对象并完成初始化设置</span></span><br><span class="line"><span class="string">        返回浏览器对象</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="string">"""判断是否存在浏览器驱动对象"""</span></span><br><span class="line">        <span class="keyword">if</span> cls.driver <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            cls.driver=webdriver.Chrome()</span><br><span class="line">            cls.driver.get(<span class="string">"网页网址"</span>)</span><br><span class="line">            cls.driver.maximize_window()</span><br><span class="line">            cls.driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">return</span> cls.driver</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">quit_driver</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="string">"""关闭浏览器驱动对象"""</span></span><br><span class="line">        <span class="comment"># 判断浏览器存在</span></span><br><span class="line">        <span class="keyword">if</span> cls.driver <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="string">"""从代码逻辑上退出浏览器驱动对象"""</span></span><br><span class="line">            cls.driver.quit()</span><br><span class="line">            <span class="string">"""为了防止关闭浏览器但电脑内存没有释放，将浏览器置为空"""</span></span><br><span class="line">            cls.driver=<span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DriverUtil().get_driver()</span></span><br><span class="line"><span class="string">"""类中的方法在调用的时候不能直接调用，需要先实例化一个类对象，再调用方法，但类级别的方法可以直接用类名和方法名调用"""</span></span><br></pre></td></tr></table></figure><p>V3的完整代码+utils</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">v3方法封装：将一些有共性的，或多次被使用的代封装到一个方法中，供其他地方调用</span></span><br><span class="line"><span class="string">定义获取驱动对象的工具类</span></span><br><span class="line"><span class="string">封装获取弹出框的提示消息</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义测试类</span></span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> DriverUtil, get_tip_message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestDeltaLogin</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="string">"""测试登录模块"""</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUpClass</span><span class="params">(cls)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 初始化浏览器对象，窗口最大化，设置隐士等待，打开三角洲后台系统</span></span><br><span class="line">        <span class="comment"># cls.driver = webdriver.Chrome()</span></span><br><span class="line">        <span class="comment"># cls.driver.maximize_window()</span></span><br><span class="line">        <span class="comment"># cls.driver.implicitly_wait(10)</span></span><br><span class="line">        <span class="comment"># cls.driver.get('网页网址')</span></span><br><span class="line">        cls.driver=DriverUtil.get_driver()</span><br><span class="line">        cls.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line">        cls.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDownClass</span><span class="params">(cls)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 退出浏览器</span></span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment">#cls.driver.quit()</span></span><br><span class="line">        DriverUtil.quit_driver()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 点击确定按钮</span></span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义测试方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_username_error01</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""用户不存在"""</span></span><br><span class="line">        <span class="comment"># 输入正确的用户名，错误的密码，点击登录按钮</span></span><br><span class="line">        username=self.driver.find_element_by_css_selector(<span class="string">'[placeholder="请输入用户名"]'</span>)</span><br><span class="line">        username.clear()</span><br><span class="line">        username.send_keys(<span class="string">'用户名'</span>)</span><br><span class="line"></span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'//*[@placeholder="请输入密码"]'</span>).send_keys(<span class="string">'密码'</span>)</span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'//*[@id="app"]/div/div/div/form/div[3]/div/button/span'</span>).click()</span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="comment"># 获取错误信息</span></span><br><span class="line">        <span class="comment"># msg = self.driver.find_element_by_xpath('/html/body/div[2]/div/div[2]/div[2]/p').text</span></span><br><span class="line">        <span class="comment"># print('msg=', msg)</span></span><br><span class="line">        msg=get_tip_message()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_password_wrong02</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""密码错误"""</span></span><br><span class="line">        <span class="comment"># 输入正确的用户名，错误的密码，点击登录按钮</span></span><br><span class="line">        self.driver.find_element_by_css_selector(<span class="string">'[placeholder="请输入用户名"]'</span>).send_keys(<span class="string">'用户名'</span>)</span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'//*[@placeholder="请输入密码"]'</span>).send_keys(<span class="string">'密码'</span>)</span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'//*[@id="app"]/div/div/div/form/div[3]/div/button/span'</span>).click()</span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="comment"># 获取错误信息</span></span><br><span class="line">        <span class="comment"># msg = self.driver.find_element_by_xpath('/html/body/div[2]/div/div[2]/div[2]/p').text</span></span><br><span class="line">        <span class="comment"># print('msg=', msg)</span></span><br><span class="line">        msg = get_tip_message()</span><br></pre></td></tr></table></figure><h3 id="PO模式简介"><a href="#PO模式简介" class="headerlink" title="PO模式简介"></a>PO模式简介</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PO是Page Object的缩写，PO模式是自动化测试项目开发实践的最好的模式之一</span><br><span class="line">PO模式把一个页面分为三层：对象库层，操作层，业务层</span><br><span class="line">对象库层：封装定位元素的方法；</span><br><span class="line">操作层：封装对元素的操作；</span><br><span class="line">业务层：一个或多个操作组合起来完成一个业务功能，比如登录，账号，秘密，点击登录按钮三个操作</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">login_page.py</span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> DriverUtil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginPage</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""登录-对象库层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.driver=DriverUtil.get_driver()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_username</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定位用户名输入框的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element_by_css_selector(<span class="string">'[placeholder="请输入用户名"]'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_password</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定位密码输入框的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element_by_xpath(<span class="string">'//*[@placeholder="请输入密码"]'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_login_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定位登录按钮的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element_by_xpath(<span class="string">'//*[@id="app"]/div/div/div/form/div[3]/div/button/span'</span>)</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginHandle</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""登录—操作层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.login_page=LoginPage()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">imput_username</span><span class="params">(self,username)</span>:</span></span><br><span class="line">        <span class="string">"""输入用户名方法"""</span></span><br><span class="line">        self.login_page.find_username().send_keys(username)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">input_password</span><span class="params">(self,pwd)</span>:</span></span><br><span class="line">        <span class="string">"""输入密码的方法"""</span></span><br><span class="line">        self.login_page.find_password().send_keys(pwd)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">click_login_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""点击登录按钮的方法"""</span></span><br><span class="line">        self.login_page.find_login_btn().click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginProxy</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""登录-业务层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.login_handle=LoginHandle()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self,username,pwd)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        登录方法</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.login_handle.imput_username(username)</span><br><span class="line">        self.login_handle.input_password(pwd)</span><br><span class="line">        self.login_handle.click_login_btn()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">v4.py</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">v4:引入了PO，将页面分为三个层次</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义测试类</span></span><br><span class="line"><span class="keyword">from</span> V4.login_page <span class="keyword">import</span> LoginProxy</span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> DriverUtil, get_tip_message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestDeltaLogin</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="string">"""测试登录模块"""</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUpClass</span><span class="params">(cls)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 初始化浏览器对象，窗口最大化，设置隐士等待，打开三角洲后台系统</span></span><br><span class="line">        cls.driver=DriverUtil.get_driver()</span><br><span class="line">        cls.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line">        cls.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line">        cls.login_proxy=LoginProxy()</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDownClass</span><span class="params">(cls)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 退出浏览器</span></span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        DriverUtil.quit_driver()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 点击确定按钮</span></span><br><span class="line">        self.driver.find_element_by_xpath(<span class="string">'/html/body/div[2]/div/div[3]/button/span'</span>).click()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义测试方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_username_error01</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""用户不存在"""</span></span><br><span class="line">        <span class="comment"># 输入错误的的用户名，正确的密码，点击登录按钮</span></span><br><span class="line">        self.login_proxy.login(<span class="string">'chenxiaoyan'</span>,<span class="string">'12345'</span>)</span><br><span class="line">        <span class="comment"># 获取错误信息</span></span><br><span class="line">        msg=get_tip_message()</span><br><span class="line">        self.assertIn(<span class="string">"用户不存在或密码错误"</span>,msg)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_password_wrong02</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""密码错误"""</span></span><br><span class="line">        <span class="comment"># 输入正确的用户名，错误的密码，点击登录按钮</span></span><br><span class="line">        self.login_proxy.login(<span class="string">'chenxioayan'</span>,<span class="string">'12345'</span>)</span><br><span class="line">        <span class="comment"># 获取错误信息</span></span><br><span class="line">        msg = get_tip_message()</span><br><span class="line">        self.assertIn(<span class="string">"用户不存在或密码错误"</span>, msg)</span><br></pre></td></tr></table></figure><h3 id="V5"><a href="#V5" class="headerlink" title="V5"></a>V5</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">login_page.py</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> DriverUtil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginPage</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""登录-对象库层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.driver=DriverUtil.get_driver()</span><br><span class="line">        self.username=(By.CSS_SELECTOR,<span class="string">'[placeholder="请输入用户名"]'</span>)</span><br><span class="line">        self.pwd=(By.XPATH,<span class="string">'//*[@placeholder="请输入密码"]'</span>)</span><br><span class="line">        self.click_btn=(By.XPATH,<span class="string">'//*[@id="app"]/div/div/div/form/div[3]/div/button/span'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_username</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定位用户名输入框的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element(self.username[<span class="number">0</span>],self.username[<span class="number">1</span>])</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_password</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定位密码输入框的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element(self.pwd[<span class="number">0</span>],self.pwd[<span class="number">1</span>])</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_login_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定位登录按钮的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element(self.click_btn[<span class="number">0</span>],self.click_btn[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginHandle</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""登录—操作层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.login_page=LoginPage()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">imput_username</span><span class="params">(self,username)</span>:</span></span><br><span class="line">        <span class="string">"""输入用户名方法"""</span></span><br><span class="line">        self.login_page.find_username().clear()</span><br><span class="line">        self.login_page.find_username().send_keys(username)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">input_password</span><span class="params">(self,pwd)</span>:</span></span><br><span class="line">        <span class="string">"""输入密码的方法"""</span></span><br><span class="line">        self.login_page.find_password().clear()</span><br><span class="line">        self.login_page.find_password().send_keys(pwd)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">click_login_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""点击登录按钮的方法"""</span></span><br><span class="line">        self.login_page.find_login_btn().click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginProxy</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""登录-业务层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.login_handle=LoginHandle()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self,username,pwd)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        登录方法</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.login_handle.imput_username(username)</span><br><span class="line">        self.login_handle.input_password(pwd)</span><br><span class="line">        self.login_handle.click_login_btn()</span><br></pre></td></tr></table></figure><h3 id="V6"><a href="#V6" class="headerlink" title="V6"></a>V6</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">base_page.py</span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> DriverUtil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PageBase</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""Page 基类（父类）"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.driver=DriverUtil.get_driver()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_element_func</span><span class="params">(self,location)</span>:</span></span><br><span class="line">        <span class="string">"""查找元素的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element(location[<span class="number">0</span>],location[<span class="number">1</span>])</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PageHandle</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""Handle 基类（父类）"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">input_text</span><span class="params">(self,element,text)</span>:</span></span><br><span class="line">        <span class="string">"""输入内容的方法"""</span></span><br><span class="line">        element.clear()</span><br><span class="line">        element.send_keys(text)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">login_page.py</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> V6.base_page <span class="keyword">import</span> PageBase, PageHandle</span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> DriverUtil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginPage</span><span class="params">(PageBase)</span>:</span></span><br><span class="line">    <span class="string">"""登录-对象库层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super().__init__()<span class="comment">#子类继承父类的方法，子类跟父类中有相同的，不需要重写，只需要扩展，就用此方法</span></span><br><span class="line">        self.username=(By.CSS_SELECTOR,<span class="string">'[placeholder="请输入用户名"]'</span>)</span><br><span class="line">        self.pwd=(By.XPATH,<span class="string">'//*[@placeholder="请输入密码"]'</span>)</span><br><span class="line">        self.click_btn=(By.XPATH,<span class="string">'//*[@id="app"]/div/div/div/form/div[3]/div/button/span'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_username</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定位用户名输入框的方法"""</span></span><br><span class="line">        <span class="comment">#return self.driver.find_element(self.username[0],self.username[1])</span></span><br><span class="line">        <span class="keyword">return</span> self.find_element_func(self.username)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_password</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定位密码输入框的方法"""</span></span><br><span class="line">        <span class="comment">#return self.driver.find_element(self.pwd[0],self.pwd[1])</span></span><br><span class="line">        <span class="keyword">return</span> self.find_element_func(self.pwd)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_login_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定位登录按钮的方法"""</span></span><br><span class="line">        <span class="comment">#return self.driver.find_element(self.click_btn[0],self.click_btn[1])</span></span><br><span class="line">        <span class="keyword">return</span> self.find_element_func(self.click_btn)</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginHandle</span><span class="params">(PageHandle)</span>:</span></span><br><span class="line">    <span class="string">"""登录—操作层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.login_page=LoginPage()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">imput_username</span><span class="params">(self,username)</span>:</span></span><br><span class="line">        <span class="string">"""输入用户名方法"""</span></span><br><span class="line">        self.input_text(self.login_page.find_username(),username)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">input_password</span><span class="params">(self,pwd)</span>:</span></span><br><span class="line">        <span class="string">"""输入密码的方法"""</span></span><br><span class="line">        <span class="comment">#self.login_page.find_password().clear()</span></span><br><span class="line">        <span class="comment">#self.login_page.find_password().send_keys(pwd)</span></span><br><span class="line">        self.input_text(self.login_page.find_password(), pwd)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">click_login_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""点击登录按钮的方法"""</span></span><br><span class="line">        self.login_page.find_login_btn().click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginProxy</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""登录-业务层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.login_handle=LoginHandle()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self,username,pwd)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        登录方法</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.login_handle.imput_username(username)</span><br><span class="line">        self.login_handle.input_password(pwd)</span><br><span class="line">        self.login_handle.click_login_btn()</span><br></pre></td></tr></table></figure><h3 id="数据驱动"><a href="#数据驱动" class="headerlink" title="数据驱动"></a>数据驱动</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据驱动结果,可以理解为一种设计模式也可以理解为一种测试思想，将数据和测试代码分离，依赖于参数化</span><br></pre></td></tr></table></figure><h3 id="JSON简介"><a href="#JSON简介" class="headerlink" title="JSON简介"></a>JSON简介</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">JSON 的全称是Java Script Object Notation 是Java Script对象表示方法；</span><br><span class="line"></span><br><span class="line">特点：纯文本；具有良好的自我描述性，便于阅读和编写；具有清晰地层级结构；有效的提升网络传输效率；</span><br><span class="line"></span><br><span class="line">语法规则：&#123;&#125;保存对象；[]保存列表；对象数组可以相互嵌套；数据采用键值对形式；多个数据由逗号分割；JSON文件的最外层可以是&#123;&#125;也可以是[]；里面的内容必须以键值对的形式存在；所有的键必须是字符串类型；只能用双引号；所有的逗号只能用英文</span><br><span class="line"></span><br><span class="line">JSON值可以是：数字(整数或浮点数)，字符串(双引号中)，逻辑值(true或false)，列表([])，对象（&#123;&#125;），null</span><br></pre></td></tr></table></figure><p>json文件的代码如下：</p><p>文件名以.json结尾的文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"小明"</span>,</span><br><span class="line">  <span class="string">"age"</span>:<span class="number">18</span>,</span><br><span class="line">  <span class="string">"height"</span>: <span class="number">180.4</span>,</span><br><span class="line">  <span class="string">"school"</span>: null,</span><br><span class="line">  <span class="string">"link"</span>: [&#123;<span class="string">"name"</span>: <span class="string">"http://www.baidu.com"</span>&#125;]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Python字典与JSON之间的转换"><a href="#Python字典与JSON之间的转换" class="headerlink" title="Python字典与JSON之间的转换"></a>Python字典与JSON之间的转换</h3><p>Python字典转换成JSON字符串代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">data=&#123;<span class="string">'id'</span>:<span class="number">1</span>,</span><br><span class="line">      <span class="string">'name'</span>:<span class="string">'小明'</span>,</span><br><span class="line">      <span class="string">'address'</span>:<span class="string">'北京市昌平区'</span>,</span><br><span class="line">      <span class="string">'school'</span>:<span class="literal">None</span></span><br><span class="line">      &#125;</span><br><span class="line">json_str=json.dumps(data)</span><br><span class="line">print(json_str)</span><br></pre></td></tr></table></figure><p>JSON字符串转换成Python字典代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">json_str = <span class="string">'&#123;"id":1, "name":"小明","address":"北京市昌平区","school":null&#125;'</span></span><br><span class="line">dict_data=json.loads(json_str)</span><br><span class="line">print(dict_data)</span><br></pre></td></tr></table></figure><h3 id="JSON文件读写"><a href="#JSON文件读写" class="headerlink" title="JSON文件读写"></a>JSON文件读写</h3><p>读取json文件的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'文件的存放路径和文件名'</span>,encoding=<span class="string">'UTF-8'</span>)<span class="keyword">as</span> f:</span><br><span class="line">    data=json.load(f)<span class="comment"># 读取的文件为字典或数组</span></span><br><span class="line">    print(data)</span><br></pre></td></tr></table></figure><p>将字典写入json文件的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">param=&#123;<span class="string">"name"</span>:<span class="string">"小兰"</span>,<span class="string">"age"</span>:<span class="number">12</span>&#125;</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'文件的存放路径和文件名'</span>,<span class="string">'w'</span>,encoding=<span class="string">'UTF-8'</span>)<span class="keyword">as</span> f:</span><br><span class="line">    json.dump(param,f)</span><br></pre></td></tr></table></figure><h3 id="在线计算器加法的项目实战（po）"><a href="#在线计算器加法的项目实战（po）" class="headerlink" title="在线计算器加法的项目实战（po）"></a>在线计算器加法的项目实战（po）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">utils.py</span><br><span class="line"><span class="comment"># 公共工具类,所有的文件都可以调用，因此放在最外面</span></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DriverUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""浏览器驱动工具类"""</span></span><br><span class="line">    driver=<span class="literal">None</span></span><br><span class="line">    <span class="string">"""第一次调用的时候给浏览器赋值为空"""</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_driver</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        获取浏览器驱动对象并完成初始化设置</span></span><br><span class="line"><span class="string">        返回浏览器对象</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="string">"""判断是否存在浏览器驱动对象"""</span></span><br><span class="line">        <span class="keyword">if</span> cls.driver <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            cls.driver=webdriver.Chrome()</span><br><span class="line">            cls.driver.get(<span class="string">"http://cal.apple886.com/"</span>)</span><br><span class="line">            cls.driver.maximize_window()</span><br><span class="line">            cls.driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">return</span> cls.driver</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">quit_driver</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="string">"""关闭浏览器驱动对象"""</span></span><br><span class="line">        <span class="comment"># 判断浏览器存在</span></span><br><span class="line">        <span class="keyword">if</span> cls.driver <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="string">"""从代码逻辑上退出浏览器驱动对象"""</span></span><br><span class="line">            cls.driver.quit()</span><br><span class="line">            <span class="string">"""为了防止关闭浏览器但电脑内存没有释放，将浏览器置为空"""</span></span><br><span class="line">            cls.driver=<span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    DriverUtil.get_driver()</span><br><span class="line">    DriverUtil.quit_driver()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">calc_page.py</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> DriverUtil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CalcPage</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""计算器的对象库层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.driver=DriverUtil.get_driver()</span><br><span class="line">        self.num_btn=(By.ID,<span class="string">'simple&#123;&#125;'</span>)<span class="comment"># 数字键</span></span><br><span class="line">        self.add_btn=(By.ID,<span class="string">'simpleAdd'</span>) <span class="comment"># 加号键</span></span><br><span class="line">        self.equal_btn=(By.ID,<span class="string">'simpleEqual'</span>)<span class="comment"># 等号键</span></span><br><span class="line">        self.result=(By.ID,<span class="string">'resultIpt'</span>)<span class="comment"># 结果</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_num_btn</span><span class="params">(self,num)</span>:</span></span><br><span class="line">        <span class="string">"""定位数字按钮的方法"""</span></span><br><span class="line">        <span class="comment">#location=(self.num_btn[0],self.num_btn[1].format(num))</span></span><br><span class="line">        <span class="comment">#return self.driver.find_element(location[0],location[1])</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element(self.num_btn[<span class="number">0</span>],self.num_btn[<span class="number">1</span>].format(num))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_add_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定义查找加号的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element(self.add_btn[<span class="number">0</span>],self.add_btn[<span class="number">1</span>])</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_equal_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定义查找等号的按钮"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element(self.equal_btn[<span class="number">0</span>],self.equal_btn[<span class="number">1</span>])</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""定义查找结果的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.driver.find_element(self.result[<span class="number">0</span>],self.result[<span class="number">1</span>])</span><br><span class="line">    ...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CalcHandle</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""计算器的操作层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.calc_page=CalcPage()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">click_num_btn</span><span class="params">(self,num)</span>:</span></span><br><span class="line">        <span class="string">"""点击数字按钮"""</span></span><br><span class="line">        self.calc_page.find_num_btn(num).click()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">click_add_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""点击加号按钮"""</span></span><br><span class="line">        self.calc_page.find_add_btn().click()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">click_equal_btn</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""点击等号按钮"""</span></span><br><span class="line">        self.calc_page.find_equal_btn().click()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""获取结果"""</span></span><br><span class="line">        <span class="comment"># 由于该元素没有直接体现文本信息，因此获取对用的TEXT可能没有结果</span></span><br><span class="line">        <span class="comment"># 可以通过获取value属性的属性值来获取结果</span></span><br><span class="line">        <span class="keyword">return</span> self.calc_page.find_result().get_attribute(<span class="string">'value'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">input_number</span><span class="params">(self,number)</span>:</span></span><br><span class="line">        <span class="string">"""定义一个输入数字的方法"""</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> str(number):</span><br><span class="line">            self.click_num_btn(i)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CalcProxy</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""计算器的业务层"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.calc_handle=CalcHandle()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_func</span><span class="params">(self,num1,num2)</span>:</span></span><br><span class="line">        <span class="string">"""测试计算器加法"""</span></span><br><span class="line">        <span class="comment"># 利用循环将输入的数拆分成一个一个的数</span></span><br><span class="line">        <span class="comment"># 整数不能被遍历，因此强转为字符串</span></span><br><span class="line">        <span class="comment">#for i in str(num1):</span></span><br><span class="line">           <span class="comment"># self.calc_handle.click_num_btn(i)</span></span><br><span class="line">        self.calc_handle.input_number(num1)</span><br><span class="line">        self.calc_handle.click_add_btn()</span><br><span class="line">       <span class="comment"># for j in str(num2):</span></span><br><span class="line">            <span class="comment">#self.calc_handle.click_num_btn(j)</span></span><br><span class="line">        self.calc_handle.input_number(num2)</span><br><span class="line">        self.calc_handle.click_equal_btn()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_result_func</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""获取结果的方法"""</span></span><br><span class="line">        <span class="keyword">return</span> self.calc_handle.get_result()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">test_calc.py</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> parameterized <span class="keyword">import</span> parameterized</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> calc_page <span class="keyword">import</span> CalcProxy</span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> DriverUtil</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buid_calc_data</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""构建数据"""</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'./calc_data.json'</span>, encoding=<span class="string">'utf-8'</span>)<span class="keyword">as</span> f:</span><br><span class="line">        data = json.load(f)</span><br><span class="line">        print(data)</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestCalc</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="string">"""自定义测试类"""</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUpClass</span><span class="params">(cls)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        cls.driver=DriverUtil.get_driver()</span><br><span class="line">        cls.calc_proxy=CalcProxy()</span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDownClass</span><span class="params">(cls)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        DriverUtil.quit_driver()</span><br><span class="line"><span class="meta">    @parameterized.expand(buid_calc_data())</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_calc_add</span><span class="params">(self,x,y,expect)</span>:</span></span><br><span class="line">        <span class="string">"""执行加法操作"""</span></span><br><span class="line">        self.calc_proxy.add_func(x,y)</span><br><span class="line">        result=self.calc_proxy.get_result_func()</span><br><span class="line">        <span class="comment"># 由于断言的结果是字符串因此将预期结果改成字符串的形式</span></span><br><span class="line">        self.assertEqual(str(expect),result)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">calc_data.json</span><br><span class="line">[</span><br><span class="line">  [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">  [<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">  [<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>],</span><br><span class="line">  [<span class="number">12</span>,<span class="number">23</span>,<span class="number">35</span>]</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="Web自动化测试用例的书写规范"><a href="#Web自动化测试用例的书写规范" class="headerlink" title="Web自动化测试用例的书写规范"></a>Web自动化测试用例的书写规范</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>ID</span><br><span class="line"><span class="number">2.</span>模块：PO页面对象的命名需要依据模块名来命名；</span><br><span class="line"><span class="number">3.</span>优先级：测试数据放在前面还是后面；</span><br><span class="line"><span class="number">4.</span>测试标题：自定义测试方法名；</span><br><span class="line"><span class="number">5.</span>预置条件：用例执行完之后，要恢复的状态；</span><br><span class="line"><span class="number">6.</span>步骤描述：业务逻辑；</span><br><span class="line"><span class="number">7.</span>测试数据：数据驱动，数据源文件的准备依据；</span><br><span class="line"><span class="number">8.</span>预期结果：数据驱动，数据源文件的准备依据，断言的设置依据；</span><br><span class="line"><span class="number">9.</span>测试结果</span><br></pre></td></tr></table></figure><p>测试用例的覆盖不可能达到100%，一般公司会用web自动化测试做正向用例的测试，如果公司人员充足或有专门的自动化测试人员覆盖率最高能达到80%</p><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><p>####概念</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">日志就是用于记录系统运行时的信息，对一个事件的记录，也称为log</span><br></pre></td></tr></table></figure><p>####作用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>调试程序</span><br><span class="line"><span class="number">2.</span>了解系统程序运行的情况，是否正常；</span><br><span class="line"><span class="number">3.</span>系统程序运行故障分析与问题定位；</span><br><span class="line"><span class="number">4.</span>用来做用户行为分析和数据统计；</span><br></pre></td></tr></table></figure><h4 id="常见的日志级别"><a href="#常见的日志级别" class="headerlink" title="常见的日志级别"></a>常见的日志级别</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DEBUG:调试级别，通常用于对代码的调试；</span><br><span class="line">INFO:信息级别，突出强调信息的运行过程；</span><br><span class="line">WARNING:警告级别，表明会出现潜在错误的情行，一般不影响软件的正常使用；</span><br><span class="line">ERROR:错误级别，该级别的错误可能会导致系统的一些功能无法正常使用；</span><br><span class="line">CRITICAL:严重错误级别，表明系统可能无法正常运行；</span><br><span class="line"></span><br><span class="line">当指定日志级别后，系统会记录大于和等于指定日志级别的信息</span><br></pre></td></tr></table></figure><h4 id="日志的基本用法"><a href="#日志的基本用法" class="headerlink" title="日志的基本用法"></a>日志的基本用法</h4><p>基本用法，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.debug(<span class="string">"这是一条调试信息"</span>)</span><br><span class="line">logging.info(<span class="string">"这是一条普通信息"</span>)</span><br><span class="line">logging.warning(<span class="string">"这是一条警告信息"</span>)</span><br><span class="line">logging.error(<span class="string">"这是一条错误信息"</span>)</span><br><span class="line">logging.critical(<span class="string">"这是一条严重错误信息"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOGGING中默认的日志级别是warning，大于和等于该级别的信息才会被输出</span><br></pre></td></tr></table></figure><p>#####设置日志级别，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.basicConfig(level=logging.DEBUG)</span><br></pre></td></tr></table></figure><p>一般开发和测试环境中使用DEBUG或INFO,生产环境使用WARINING或ERROR,方便定位和排查问题</p><h5 id="设置日志格式，代码如下："><a href="#设置日志格式，代码如下：" class="headerlink" title="设置日志格式，代码如下："></a>设置日志格式，代码如下：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">默认的日志格式：</span><br><span class="line">日志级别：Logger名称：日志内容</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">format参数中常用的格式化信息</span><br><span class="line">%(levelname)s:文本形式的日志级别</span><br><span class="line">%(filename)s:调用日志输出函数的模块的文件名</span><br><span class="line">%(lineno)s:调用日志输出级别的函数所在的代码行数</span><br><span class="line">%(asctime)s:字符串形式的当前时间</span><br><span class="line">%(message)s:用户输出的信息</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">自定义日志格式：</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">fmt=<span class="string">"%(levelname)s:%(filename)s:%(lineno)s:%(asctime)s:%(message)s"</span></span><br><span class="line">logging.basicConfig(level=logging.INFO,format=fmt)</span><br><span class="line">logging.debug(<span class="string">"这是一条调试信息"</span>)</span><br><span class="line">logging.info(<span class="string">"这是一条普通信息"</span>)</span><br><span class="line">logging.warning(<span class="string">"这是一条警告信息"</span>)</span><br><span class="line">logging.error(<span class="string">"这是一条错误信息"</span>)</span><br><span class="line">logging.critical(<span class="string">"这是一条严重错误信息"</span>)</span><br></pre></td></tr></table></figure><h5 id="将日志信息输出到文件中"><a href="#将日志信息输出到文件中" class="headerlink" title="将日志信息输出到文件中"></a>将日志信息输出到文件中</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">logging默认将日志输出到控制台，如果想将日志输出到文件代码如下：</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">fmt=<span class="string">"%(levelname)s:%(filename)s:%(lineno)s:%(asctime)s:%(message)s"</span></span><br><span class="line">logging.basicConfig(filename=<span class="string">"a.log"</span>,level=logging.INFO,format=fmt)</span><br><span class="line">logging.debug(<span class="string">"这是一条调试信息"</span>)</span><br><span class="line">logging.info(<span class="string">"这是一条普通信息"</span>)</span><br><span class="line">logging.warning(<span class="string">"这是一条警告信息"</span>)</span><br><span class="line">logging.error(<span class="string">"这是一条错误信息"</span>)</span><br><span class="line">logging.critical(<span class="string">"这是一条严重错误信息"</span>)</span><br></pre></td></tr></table></figure><h4 id="日志的高级用法"><a href="#日志的高级用法" class="headerlink" title="日志的高级用法"></a>日志的高级用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">logging模块四大日志组件</span><br><span class="line">Logger:日志器：提供了程序使用日志的入口</span><br><span class="line">Handle：处理器：将日志器创建的日志记录发送到合适的目的输出</span><br><span class="line">Formatter：格式器：决定日志记录的最终输出格式</span><br><span class="line">Filter：过滤器：提供了更细粒度的控制工具来决定输出哪条日志记录，丢弃哪条记录</span><br><span class="line"></span><br><span class="line">关系：日志器可以设置多个处理器，每个处理器可以设置自己的格式器和过滤器</span><br></pre></td></tr></table></figure><h5 id="如何创建Logger对象及其常用方法"><a href="#如何创建Logger对象及其常用方法" class="headerlink" title="如何创建Logger对象及其常用方法"></a>如何创建Logger对象及其常用方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="comment"># 创建logger对象</span></span><br><span class="line">logger=logging.getLogger()</span><br><span class="line"><span class="comment"># 常用方法,打印日志</span></span><br><span class="line">logger.debug(<span class="string">"调试"</span>)</span><br><span class="line">logger.info(<span class="string">"信息"</span>)</span><br><span class="line">logger.warning(<span class="string">"警告"</span>)</span><br><span class="line">logger.error(<span class="string">"错误"</span>)</span><br><span class="line">logger.critical(<span class="string">"严重"</span>)</span><br><span class="line"><span class="comment"># 设置日志器将会处理的日志消息的最低严重级别</span></span><br><span class="line">logger.setLevel()</span><br><span class="line"><span class="comment"># 为该logger对象添加一个处理器对象</span></span><br><span class="line">logger.addHandler()</span><br><span class="line"><span class="comment"># 为为该logger对象添加一个过滤器对象</span></span><br><span class="line">logger.addFilter()</span><br></pre></td></tr></table></figure><p>#####如何创建Handler对象及其常用方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Handler是一个基类，创建对象时如果导logging类导不出，可以导logging.handlers类</span><br><span class="line">创建handler对象的常用方法：</span><br><span class="line">方法<span class="number">1</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">handle=logging.StreamHandler() <span class="comment"># 将日志消息发送到输出到stream</span></span><br><span class="line">handle=logging.FileHandler(filename) <span class="comment"># 将日志消息发送到磁盘文件，默认情况下文件大小会无限增加</span></span><br><span class="line">方法<span class="number">2</span></span><br><span class="line"><span class="keyword">import</span> logging.handlers</span><br><span class="line">handle=logging.handlers.TimedRotatingFileHandler <span class="comment"># 将日志消息发送到磁盘文件，并支持文件按照时间进行切割</span></span><br><span class="line">handle常用方法：</span><br><span class="line">handle.setLevel()<span class="comment"># 设置handle将会处理的日志消息的最低严重级别</span></span><br><span class="line">handle.setFormatter() <span class="comment"># 为handle设置一个格式器对象</span></span><br><span class="line">handle.addFilter() <span class="comment"># 为handle添加一个过滤器对象</span></span><br></pre></td></tr></table></figure><h5 id="如何创建Formatter对象"><a href="#如何创建Formatter对象" class="headerlink" title="如何创建Formatter对象"></a>如何创建Formatter对象</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">formatter=logging.Formatter(fmt=<span class="literal">None</span>, datefmt=<span class="literal">None</span>, style=<span class="string">'%'</span>)</span><br></pre></td></tr></table></figure><h4 id="日志使用实例"><a href="#日志使用实例" class="headerlink" title="日志使用实例"></a>日志使用实例</h4><p>#####1.将日志信息同时输出到控制台和文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> logging.handlers</span><br><span class="line"><span class="comment"># 1.创建日志器对象</span></span><br><span class="line">logger = logging.getLogger()</span><br><span class="line"><span class="comment"># 2.创建控制台处理器对象</span></span><br><span class="line">handler1 = logging.StreamHandler()</span><br><span class="line"><span class="comment"># 3.创建文件处理器对象</span></span><br><span class="line">handler2 = logging.FileHandler(<span class="string">"b.log"</span>)</span><br><span class="line"><span class="comment"># 4.创建格式化器对象 </span></span><br><span class="line">fmt = <span class="string">"%(levelname)s:%(filename)s:%(lineno)s:%(asctime)s:%(message)s"</span></span><br><span class="line">formatter = logging.Formatter(fmt)</span><br><span class="line"><span class="comment"># 5.把格式化器添加到处理器</span></span><br><span class="line">handler1.setFormatter(formatter)</span><br><span class="line">handler2.setFormatter(formatter)</span><br><span class="line"><span class="comment"># 6.把处理器添加到日志器</span></span><br><span class="line">logger.addHandler(handler2)</span><br><span class="line">logger.addHandler(handler1)</span><br></pre></td></tr></table></figure><h5 id="2-每日生成一个日志文件"><a href="#2-每日生成一个日志文件" class="headerlink" title="2.每日生成一个日志文件"></a>2.每日生成一个日志文件</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> logging.handlers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.创建日志器对象</span></span><br><span class="line">logger = logging.getLogger()</span><br><span class="line"><span class="comment"># 设置日志器级别</span></span><br><span class="line">logger.setLevel(logging.DEBUG)</span><br><span class="line"><span class="comment"># 2.创建控制台处理器对象</span></span><br><span class="line">handler=logging.handlers.TimedRotatingFileHandler(<span class="string">"c.log"</span>, when=<span class="string">'midnight'</span>, interval=<span class="number">1</span>, backupCount=<span class="number">3</span>)</span><br><span class="line">handler.setLevel(logging.INFO)</span><br><span class="line"><span class="comment"># 3.创建格式化器对象</span></span><br><span class="line">fmt = <span class="string">"%(levelname)s:%(filename)s:%(lineno)s:%(asctime)s:%(message)s"</span></span><br><span class="line">formatter = logging.Formatter(fmt)</span><br><span class="line"><span class="comment"># 5.把格式化器添加到处理器</span></span><br><span class="line">handler.setFormatter(formatter)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.把处理器添加到日志器</span></span><br><span class="line">logger.addHandler(handler)</span><br></pre></td></tr></table></figure><h4 id="自动化测试流程"><a href="#自动化测试流程" class="headerlink" title="自动化测试流程"></a>自动化测试流程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>需求分析</span><br><span class="line">根据需求文档</span><br><span class="line"><span class="number">2.</span>挑选适合做自动化测试的功能</span><br><span class="line"><span class="number">3.</span>设计自动化测试用例</span><br><span class="line">原则：一般只实现核心业务流程或重复执行率较高的功能；一半一半正向验证的逻辑为主；尽量减少多个用例脚本之间的依赖；自动化测试用例执行完毕之后一般需要回归到原点；</span><br><span class="line"><span class="number">4.</span>搭建自动化测试环境[可选]</span><br><span class="line">初始化项目</span><br><span class="line"><span class="number">1.</span>新建项目</span><br><span class="line">    项目名称：webAutoTestTPshop</span><br><span class="line">    <span class="number">2.</span>创建目录名称</span><br><span class="line">    base</span><br><span class="line">    data</span><br><span class="line">    log</span><br><span class="line">    page</span><br><span class="line">    report</span><br><span class="line">    screenshot</span><br><span class="line">    script</span><br><span class="line">    tools</span><br><span class="line">创建文件</span><br><span class="line">    config.py</span><br><span class="line">    run_suite.py</span><br><span class="line">    utils.py</span><br><span class="line">    <span class="number">3.</span>安装依赖包</span><br><span class="line">    安装selenium包</span><br><span class="line">    安装parameterized包</span><br><span class="line">    添加HTML TestRunner</span><br><span class="line">初始化代码</span><br><span class="line">封装驱动工具类</span><br><span class="line">    封装PO基类 定义BasePage 和BaseHandle</span><br><span class="line"><span class="number">5.</span>设计自动化测试项目的架构[可选]</span><br><span class="line"><span class="number">6.</span>编写代码</span><br><span class="line">抽取PO</span><br><span class="line">根据用例分析待测功能，提取页面对象</span><br><span class="line"><span class="number">1.</span>定义页面对象文件</span><br><span class="line">    一个页面一个文件，命名方式分别为功能名_page.py：</span><br><span class="line">    首页：index_page.py</span><br><span class="line">    登录页:longin_page.py</span><br><span class="line">    <span class="number">2.</span>分别编写对象库层，操作层，业务层的代码</span><br><span class="line">编写测试脚本</span><br><span class="line"><span class="number">1.</span>定义测试脚本文件</span><br><span class="line">    登录模块：test_login.py</span><br><span class="line">    购物车模块:test_cart.py</span><br><span class="line">    订单模块:test_order.py</span><br><span class="line">    <span class="number">2.</span>使用unittest管理测试脚本</span><br><span class="line"> 执行测试脚本</span><br><span class="line"><span class="number">1.</span>使用unittest执行测试脚本</span><br><span class="line">    <span class="number">2.</span>调试代码</span><br><span class="line">完善代码</span><br><span class="line">  数据驱动</span><br><span class="line">    <span class="number">1.</span>定义数据文件</span><br><span class="line">    定义测试文件存在在data目录中</span><br><span class="line">        分模块定义测试文件</span><br><span class="line">        登录模块：login.json</span><br><span class="line">        购物车模块:cart.json</span><br><span class="line">        订单模块:order.json</span><br><span class="line">        根据业务编写用例数据</span><br><span class="line">    <span class="number">2.</span>测试数据参数化</span><br><span class="line">    修改测试脚本，使用parameterized参数化</span><br><span class="line"> 日志收集</span><br><span class="line"> 使用logging模块实现日志的收集</span><br><span class="line">     </span><br><span class="line"><span class="number">7.</span>执行测试用例</span><br><span class="line"><span class="number">8.</span>生成测试报告并分析结果</span><br><span class="line">使用HTML TestRunner生成报告</span><br></pre></td></tr></table></figure><h3 id="拆包"><a href="#拆包" class="headerlink" title="拆包"></a>拆包</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,*args)</span>:</span></span><br><span class="line">    print(a)</span><br><span class="line">    <span class="comment">#print(args)</span></span><br><span class="line">    print(*args)</span><br><span class="line">add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h4 id="守护属性"><a href="#守护属性" class="headerlink" title="守护属性"></a>守护属性</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_+变量名，改属性只能自己内部使用，外部无法调用</span><br></pre></td></tr></table></figure><h4 id="Pycharm创建工程时注意事项"><a href="#Pycharm创建工程时注意事项" class="headerlink" title="Pycharm创建工程时注意事项"></a>Pycharm创建工程时注意事项</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建工程时有一个是真实环境和虚拟环境，两者之间的区别是：</span><br><span class="line"><span class="number">1.</span>一般如果写测试脚本用虚拟环境，因为别人可能需要拷贝你的脚本去运行，虚拟环境中自带第三方包，拷贝过去只要本地有解释器就能用，缺点是没次创建虚拟工程都需要重新安装第三方包</span><br><span class="line"><span class="number">2.</span>正式环境只要你安装了，之后再创建工程就不需要安装了，但拷贝之后别人用不了</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>自动化测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>自动化测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web测试</title>
    <link href="undefined2020/01/22/web%E6%B5%8B%E8%AF%95/"/>
    <url>2020/01/22/web%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="web项目测试"><a href="#web项目测试" class="headerlink" title="web项目测试"></a>web项目测试</h2><h3 id="表单测试"><a href="#表单测试" class="headerlink" title="表单测试"></a>表单测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a、表单数据的字段、完整性及表单输入框的长度限制问题</span><br><span class="line"></span><br><span class="line">b、一些常理性逻辑验证，比如：出生日期和职业，工作年限是否恰当，所在地省份城市区域间的匹配等，如果设定使用默认值，也需要测试。</span><br></pre></td></tr></table></figure><h3 id="导航测试"><a href="#导航测试" class="headerlink" title="导航测试"></a>导航测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">导航测试，就是在不同的页面跳转之间，或者按钮、对话框、列表以及窗口等，通过考虑这些因素去判断一个应用是否易于导航：是否直观？系统的主要模块是否可以通过主页访问或者到达？站点是否需要站内地图或者搜索引擎等其他帮助？web系统导航的另外一个重点就是页面结构、导航、菜单、风格等是否一致，确保用户可以凭借直觉或者简单的判断就可以找到自己想要的内容。（参考博客http://www.cnblogs.com/imyalost/p/<span class="number">5622867.</span>html）</span><br></pre></td></tr></table></figure><h3 id="UI测试"><a href="#UI测试" class="headerlink" title="UI测试"></a>UI测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">UI测试，其中包括图片、动画、边框、颜色、字体、背景、按钮等等。</span><br><span class="line"></span><br><span class="line">a、图片要有明确的用途，代表；图片尺寸尽量小，一般采用JPG或者GIF压缩（即规格大小的限制）</span><br><span class="line"></span><br><span class="line">b、页面整体风格是否和系统的用途一致</span><br><span class="line">c、背景颜色，字体，搭配是否合理</span><br><span class="line"></span><br><span class="line">页面元素展示（调整浏览器窗口大小）</span><br><span class="line">列表展示</span><br><span class="line">分页展示（更改分页大小，上下页切换）</span><br><span class="line">图片展示</span><br><span class="line">输入框</span><br><span class="line">搜索框（是否支持模糊查询，查询数据前中后存在空格）</span><br><span class="line">交互提示（操作成功提示，操作确认提示，错误提示</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">一般情况下，WEB界面测试可以直接跟据产品原型图以及UI切图/效果图，进行对比验证，确认是否一致。当不存在原型图或UI切图/效果图时，可参考网络上同类型的成熟产品来做界面对比，且主要考虑以下几个方面：</span><br><span class="line">· WEB整体页面测试</span><br><span class="line">· WEB导航测试</span><br><span class="line">· WEB图形测试</span><br><span class="line">· WEB内容测试</span><br><span class="line">· WEB表格测试</span><br><span class="line">· WEB兼容性测试（平台兼容性/浏览器性）</span><br><span class="line"></span><br><span class="line">※ WEB整体界面测试</span><br><span class="line">整体界面是指整个Web应用系统的页面结构设计，是给用户的一个整体感。</span><br><span class="line">Q1、当用户浏览Web应用系统时是否感到舒适？（带有主观性）</span><br><span class="line">Q2、是否凭直觉就知道要找的信息在什么地方？</span><br><span class="line">Q3、整个Web应用系统的设计风格是否一致？</span><br><span class="line"></span><br><span class="line">※WEB导航测试</span><br><span class="line">导航是指位于页面顶部或者侧边区域的，它起着链接站点或者软件内的各个页面的作用。</span><br><span class="line">Q1、是否易于导航？导航是否直观？</span><br><span class="line">Q2、Web系统的主要部分是否可通过主页存取？</span><br><span class="line">Q3、Web应用系统导航帮助是否准确？</span><br><span class="line">Q4、Web系统是否需要站点地图、搜索引擎或其他的导航帮助？</span><br><span class="line">Q5、Web页面结构、导航、菜单、连接的风格是否一致？</span><br><span class="line"></span><br><span class="line">※WEB图形测试</span><br><span class="line">图形可以包括图片、动画、边框、颜色、字体、背景、按钮等。</span><br><span class="line">Q1、要确保图形有明确的用途。比如banner页图片的广告宣传。</span><br><span class="line">Q2、所有页面字的风格、颜色、格式是否一致？</span><br><span class="line">Q3、背景颜色是否与字体颜色和前景颜色相搭配？——通常情况下不使用背景</span><br><span class="line">Q4、图片的大小和质量也是一个很重要的因素，一般采用JPG或GIF压缩</span><br><span class="line">Q5、需要验证的是文字回绕是否正确？——如果说明文字指向右边的图片，应该确保该图片出现在右边。</span><br><span class="line"></span><br><span class="line">※WEB内容测试</span><br><span class="line">用来检验Web应用系统提供信息的正确性、准确性和相关性。</span><br><span class="line">Q1、信息的正确性是指信息是可靠的还是误传的。比如XXX实际面积有<span class="number">2</span>W平方米，但网页信息显示为<span class="number">3</span>W平方米，那信息就有误导性。</span><br><span class="line">Q2、信息的准确性是指是否有语法或拼写错误。</span><br><span class="line">Q3、信息的相关性是指是否在当前页面可以找到与当前浏览信息相关的信息列表或入口。</span><br><span class="line"></span><br><span class="line">※WEB表格测试</span><br><span class="line">表格经常和其他界面元素一起协同使用，主要承载数据的归纳、展示与对比的功能，是列表的一种。如大学选课页面。</span><br><span class="line">Q1、界面表格布局、颜色、风格是否统一？</span><br><span class="line">Q2、存在筛选条件、搜索控件，是否列于页面上方？</span><br><span class="line">Q3、对于日期筛选条件，是否单独处理，展示出来？</span><br><span class="line">Q4、对于多个搜索条件的场景，是否采用高级搜索按钮并将其打包收起？</span><br><span class="line">Q5、对于多个搜索条件的场景，是否配置重置按钮，便于一键清空所有搜索条件？</span><br><span class="line">Q6、在数据显示超过多条时(一屏无法完全显示，需要滚动查看时)，且表格中的数据不能直观的展示出数据类型，是否采用固定表头的形式，时刻显示数据类型？</span><br><span class="line">Q7、当字段数量过多，需要横向滚动表格，且需要对比数据时，采用固定属性列字段？</span><br><span class="line">Q8、是否支持排序？——上下箭头指示排序，一般上下空心箭头默认，上箭头为升序，下箭头为降序。</span><br><span class="line"></span><br><span class="line">※WEB兼容性测试（平台兼容性/浏览器性）</span><br><span class="line">Q1、平台兼容性：PC端和手机端的WEB兼容性测试。</span><br><span class="line">Q2、浏览器兼容性：同一平台不同浏览器的WEB兼容性测试。</span><br></pre></td></tr></table></figure><h3 id="内容测试"><a href="#内容测试" class="headerlink" title="内容测试"></a>内容测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这个主要用来检测web系统提供信息的准确性、相关性。</span><br><span class="line"></span><br><span class="line">比如：商品的价格，文字描述；信息的准确性，是否有拼写错误；（这点比较容易忽略，需要多注意）信息的相关性，比如很多网站的“相关文章列表，视频列表等”</span><br></pre></td></tr></table></figure><h3 id="整体界面测试"><a href="#整体界面测试" class="headerlink" title="整体界面测试"></a>整体界面测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">整体界面测试</span><br><span class="line"></span><br><span class="line">a、 这个也就是我们常说的用户体验。用户浏览时是否感觉舒适，整体风格等等</span><br><span class="line"></span><br><span class="line">b、建议一般做一个类似问卷调查的形式，来判定用户的反馈信息，最好有最终用户的参与，可参考类似的笔记哦啊普遍的系统风格是怎样的，结合实际来考虑本测试系统的风格</span><br></pre></td></tr></table></figure><h3 id="链接测试"><a href="#链接测试" class="headerlink" title="链接测试"></a>链接测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链接测试（平时在测试过程中并不关注，而是在权限分配的安全测试中比较注重，主要是不同权限的人分享的链接是否能正确过滤，保证安全）</span><br></pre></td></tr></table></figure><h3 id="输入框的测试"><a href="#输入框的测试" class="headerlink" title="输入框的测试"></a>输入框的测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></td><td class="code"><pre><span class="line">输入框测试（粘贴博客http://www.cnblogs.com/imyalost/p/<span class="number">5622867.</span>html）</span><br><span class="line"></span><br><span class="line">在web测试中，我们经常遇到这种输入框的测试，输入框测试看似简单，实际上包含了很多的测试基本的方法，思考逻辑，下面就是我总结出来的一些注意点：</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>）验证输入输出信息的一致性</span><br><span class="line"></span><br><span class="line">       <span class="number">2</span>）输入框前面的文字提示是否正确</span><br><span class="line"></span><br><span class="line">       <span class="number">3</span>）对特殊字符的处理、识别：单双引号，括号，逗号、分号等等，以及大小写状态，半角全角状态下的情况</span><br><span class="line"></span><br><span class="line">       <span class="number">4</span>）输入框的大小、长度、边框等</span><br><span class="line"></span><br><span class="line">       <span class="number">5</span>）不同字符的输入，以及字符组合情况的处理（数字+字母+字符等）</span><br><span class="line"></span><br><span class="line">       <span class="number">6</span>）对空格、tab换行键的处理机制</span><br><span class="line"></span><br><span class="line">       <span class="number">7</span>）密码输入框字符星号或者其他星号的转行，加密</span><br><span class="line"></span><br><span class="line">       <span class="number">8</span>）输入框输入字符长度是否有限制</span><br><span class="line"></span><br><span class="line">       <span class="number">9</span>）字符本身显示的颜色，规格等</span><br><span class="line"></span><br><span class="line">       <span class="number">10</span>）有些输入框需要加以限制，如输错，是否有提示？提示是否简单合理？</span><br><span class="line"></span><br><span class="line">       <span class="number">11</span>）输入状态，某种情况下输入框出于不可编辑，当再次处于编辑状态，输入框的输入状态是否有变化？</span><br><span class="line"></span><br><span class="line">       <span class="number">12</span>）输入类型：是否允许复制黏贴剪切等输入操作</span><br><span class="line"></span><br><span class="line">       <span class="number">13</span>）关键字是否支持通配符，以及关键字的搜索能力，敏感字等情况</span><br><span class="line"></span><br><span class="line">       <span class="number">14</span>）输入框输入空格的情况</span><br><span class="line"></span><br><span class="line">       <span class="number">15</span>）比如登陆注册，各项输入条件的判定：是否输入，输入是否正确等</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">一、文本框：</span><br><span class="line"></span><br><span class="line">在WEB测试中，表单输入框有两种，一种是数值型文本框，一种是字符型的普通文本输入框。</span><br><span class="line"></span><br><span class="line">普通的文本输入框</span><br><span class="line"></span><br><span class="line">通常要检查以下几点：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、输入中英文空格</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、输入超长字符</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、输入字符串中间含空格</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、输入首尾空格</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、输入特殊字符</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>：输入全角/半角特殊字符（特别是单引号）</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、输入特殊字符串NULL,null</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>、输入正常字符串</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>、输入的字符串之间含空格</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>:输入全角、半角空格</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>：输入全角/半角，大写/小写英文字符</span><br><span class="line"></span><br><span class="line"><span class="number">12</span>：输入全角/半角数字</span><br><span class="line"></span><br><span class="line"><span class="number">13</span>：输入中文字符（默认全角）</span><br><span class="line"></span><br><span class="line"><span class="number">14</span>：输入英文字符（默认全角）</span><br><span class="line"></span><br><span class="line">15：输入Javascrīpt函数：&lt;b&gt;Hello&lt;/b&gt;，alert("hello")</span><br><span class="line"></span><br><span class="line"><span class="number">16</span>：高危词，违禁词，敏感词</span><br><span class="line"></span><br><span class="line"><span class="number">17</span>：输入日文字符（很少校验此字符）</span><br><span class="line"></span><br><span class="line">18：输入特殊字符串NULL、null、 空格的转义字符；&lt;scrīpt&gt;&lt;/scrīpt&gt;；&lt;br&gt;；&lt;tr&gt;；&lt;td&gt;；&lt; /tr&gt;；&lt;/td&gt;；&lt;/html&gt;；&lt;/body&gt;；&lt;/table&gt;等</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">针对费用类的数值型输入框：</span><br><span class="line"></span><br><span class="line">条件：demcial(x,y) ,界面显示小数点到y位</span><br><span class="line"></span><br><span class="line">通常要检查以下几点：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、输入英文空格</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、输入中文空格</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、输入字符中含有A～Z或a～z或者~!@<span class="comment">#$%^&amp;*()_+|\=-`&#123;&#125;[];’”:,./?&lt;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、输入整数首位为<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、输入整数末位为<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、输入正数值</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、输入负数值</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>、输入<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">9</span>、输入小数</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>、输入小数末位为<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">11</span>、输入的小数点多于一个</span><br><span class="line"></span><br><span class="line"><span class="number">12</span>、输入超长数值</span><br><span class="line"></span><br><span class="line"><span class="number">13</span>、输入数字只有一个小数点，小数点左边&gt;(x-y)个有效位</span><br><span class="line"></span><br><span class="line"><span class="number">14</span>、输入数字只有一个小数点，小数点右边&gt;Y个有效位</span><br><span class="line"></span><br><span class="line"><span class="number">15</span>、输入数字只有一个小数点，小数位数小于&lt;y个有效位</span><br><span class="line"></span><br><span class="line"><span class="number">16</span>、输入数字只有一个小数点，小数位数＝y个有效位</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">必填项非空校验：</span><br><span class="line"></span><br><span class="line">必填项未输入－－程序应提示错误；</span><br><span class="line"></span><br><span class="line"> <span class="number">2</span>、必填项只输入若干个空格，未输入其它字符－－程序应提示错误；</span><br><span class="line"></span><br><span class="line">•字段唯一性校验：（不是所有字段都作此项校验，视实际项目情况而定）</span><br><span class="line"></span><br><span class="line">新增时输入重复的字段值－－必须提示友好信息；</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、修改时输入重复的字段值－－必须提示友好信息；</span><br><span class="line"></span><br><span class="line">字段长度校验：</span><br><span class="line"></span><br><span class="line">输入[最小字符数<span class="number">-1</span>]－－程序应提示错误</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、输入[最小字符数]－－OK；    </span><br><span class="line"><span class="number">3</span>、输入[最小字符数+<span class="number">1</span>]－－程序应提示错误</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、输入[最大字符数<span class="number">-1</span>]－－OK；   </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、输入[最大字符数]－－OK；    </span><br><span class="line"><span class="number">6</span>、输入[最大字符数+<span class="number">1</span>]－－程序应提示错误；  </span><br><span class="line"></span><br><span class="line">•字段为特殊字符校验：  </span><br><span class="line"></span><br><span class="line"><span class="number">01</span>、输入域如对某些字符禁止输入时，限制是否成功，提示信息是否友好</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、中文、英文、空格，数字，字符，下划线、单引号 等所有特殊字符的组合</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、所有特殊字符都必须进行测试（!~@<span class="comment">#$^&amp;*()_+&#123;&#125;|:“&lt;&gt;?/.,;‘[]\=-`￥……（）--：《》？、。，；’【】、=-· ）  </span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">字段为特殊代码校验：  </span><br><span class="line"></span><br><span class="line">1、输入htm代码：比如” &lt;font&gt;你好&lt;/font&gt;”；－－必须以文本的形式将代码显示出来</span><br><span class="line"></span><br><span class="line"><span class="number">02</span>、输入JavaScript代码：比如&lt;param name=“MovieWindowWidth” value=“<span class="number">320</span>”&gt;；－－必须以文本的形式将代码显示出来。  </span><br><span class="line"></span><br><span class="line">多行文本框输入：</span><br><span class="line"></span><br><span class="line">是否允许回车换行</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、保存后再显示能够保持输入时的格式 ；</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、仅输入回车换行，检查能否正确保存；若能，查看保存结果。若不能，查看是否有正确提示 ；  <span class="number">4</span>、仅输入空格，检查能否正确保存；若能，查看保存结果。若不能，查看是否有正确提示 。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">二、文本框为数值型 </span><br><span class="line"></span><br><span class="line">•边界值：</span><br><span class="line"><span class="number">01</span>、输入[最小值<span class="number">-1</span>]－－程序应提示错误；</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、输入[最小值]－－OK；</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、输入[最大值]－－OK；</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、输入[最大值+<span class="number">1</span>]－－程序应提示错误</span><br><span class="line"></span><br><span class="line">位数</span><br><span class="line"></span><br><span class="line">输入[限制位数]－－OK；</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、输入[限制位数+<span class="number">1</span>]－－根据实际项目而定，是否自动四舍五入成限制位数，还是提示信息；</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、输入[限制位数<span class="number">-1</span>]－－OK</span><br><span class="line"></span><br><span class="line">•异常值、特殊值：</span><br><span class="line"></span><br><span class="line">输入非数值型数据：汉字、字母、字符－－程序应提示错误；</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、输入负数－－根据实际项目而定，如果不允许输入负数，必须提示友好信息；</span><br><span class="line"><span class="number">3</span>、字段禁止直接输入非数值型数据时，使用“粘贴”、“拷贝”功能尝试输入，并测试能否正常提交保存－－只能使用“粘贴”、“拷贝”方法输入的特殊字符应无法保存，并应给出相应提示</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、全角数字和半角数字的情况－－全角数字不能保存，提示友好信息，半角数字正常保存；</span><br><span class="line"><span class="number">5</span>、首位为零的数值：如<span class="number">01</span>＝<span class="number">1</span>－－视实际项目情况而定</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">三、文本框为日期型</span><br><span class="line"></span><br><span class="line">•合法性检查：</span><br><span class="line"></span><br><span class="line">日输入[<span class="number">0</span>日]－－程序应提示错误；</span><br><span class="line"></span><br><span class="line">日输入[<span class="number">1</span>日]－－OK</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、日输入[<span class="number">32</span>日]－－程序应提示错误；<span class="number">51</span>Testing软件测试网Q w9]!l6[<span class="number">6</span>C</span><br><span class="line"><span class="number">4</span>、月输入[<span class="number">1</span>、<span class="number">3</span>、<span class="number">5</span>、<span class="number">7</span>、<span class="number">8</span>、<span class="number">10</span>、<span class="number">12</span>月]、日输入[<span class="number">31</span>日]－－OK</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、月输入[<span class="number">4</span>、<span class="number">6</span>、<span class="number">9</span>、<span class="number">11</span>月]、日输入[<span class="number">30</span>日]－－OK；</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、月输入[<span class="number">4</span>、<span class="number">6</span>、<span class="number">9</span>、<span class="number">11</span>月]、日输入[<span class="number">31</span>日]－－程序应提示错误；</span><br><span class="line"><span class="number">7</span>、输入非闰年,月输入[<span class="number">2</span>月]、日输入[<span class="number">28</span>日]，比如<span class="number">2009.2</span><span class="number">.28</span>－－OKp%C&#125;&amp;b</span><br><span class="line"><span class="number">8</span>、输入非闰年,月输入[<span class="number">2</span>月]、日输入[<span class="number">29</span>日]，比如<span class="number">2009.2</span><span class="number">.29</span>－－程序应提示错误Vn</span><br><span class="line"><span class="number">9</span>、(闰年)月输入[<span class="number">2</span>月]、日输入[<span class="number">29</span>日]，比如<span class="number">2008.2</span><span class="number">.29</span>－－OK；</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>、(闰年)月输入[<span class="number">2</span>月]、日输入[<span class="number">30</span>日]，比如<span class="number">2008.2</span><span class="number">.30</span>－－程序应提示错误</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>、月输入[<span class="number">0</span>月]－－程序应提示错误</span><br><span class="line"></span><br><span class="line"><span class="number">12</span>、月输入[<span class="number">1</span>月]－－OK</span><br><span class="line"></span><br><span class="line"><span class="number">13</span>、月输入[<span class="number">12</span>月]－－OK</span><br><span class="line"></span><br><span class="line"><span class="number">14</span>、月输入[<span class="number">13</span>月] －－程序应提示错误；</span><br><span class="line"></span><br><span class="line">•格式检查：</span><br><span class="line"></span><br><span class="line">不合法格式：<span class="number">2009</span><span class="number">-09</span>、 <span class="number">2009</span><span class="number">-09</span> -、<span class="number">200</span><span class="number">-2</span><span class="number">-2</span>；</span><br><span class="line"></span><br><span class="line">视具体项目而定是否合法：<span class="number">2009</span>/<span class="number">09</span>/<span class="number">01</span>、<span class="number">2009.09</span><span class="number">.01</span> 、<span class="number">20090901</span>、<span class="number">2009</span><span class="number">-09</span><span class="number">-01</span></span><br><span class="line"></span><br><span class="line">异常值、特殊值：</span><br><span class="line"></span><br><span class="line">输入汉字、字母、字符－－程序应提示错误；  </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">四、文本框为时间型 </span><br><span class="line"></span><br><span class="line">•合法性检查：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、时输入[<span class="number">24</span>时] －－程序应提示错误</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、时输入[<span class="number">00</span>时] －－OK</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、分输入[<span class="number">60</span>分] －－程序应提示错误；</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、分输入[<span class="number">59</span>分] －－OK；</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、分输入[<span class="number">00</span>分] －－OK</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、秒输入[<span class="number">60</span>秒] －－程序应提示错误；</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、秒输入[<span class="number">59</span>秒] －－OK；</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>、秒输入[<span class="number">00</span>秒] －－OK</span><br><span class="line"></span><br><span class="line">•格式检查：</span><br><span class="line"></span><br><span class="line">不合法格式：</span><br><span class="line"></span><br><span class="line">视具体项目而定是否合法：</span><br><span class="line"></span><br><span class="line">异常值、特殊值：</span><br><span class="line"><span class="number">1</span>、输入汉字、字母、字符－－程序应提示错误`</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、系统中所涉及时间是否取服务器时间</span><br></pre></td></tr></table></figure><h3 id="用户权限测试"><a href="#用户权限测试" class="headerlink" title="用户权限测试"></a>用户权限测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">用户权限测试（粘贴博客http://www.cnblogs.com/imyalost/p/<span class="number">5622867.</span>html）</span><br><span class="line"></span><br><span class="line">用户权限，顾名思义，就是该账号拥有哪些执行操作的权利</span><br><span class="line"></span><br><span class="line">       <span class="number">1</span>）给某账号赋予权限后，登陆该账号，查看是否拥有已赋予的权限，以及权限设置是否正确（权限是否超过或者不足）</span><br><span class="line"></span><br><span class="line">       <span class="number">2</span>）删除或修改已经登陆并且正在执行操作的账号权限，程序能否正确处理，验证</span><br><span class="line"></span><br><span class="line">       <span class="number">3</span>）重新注册系统变更登陆身份后再登陆，程序能否正确执行，之前所拥有的权限能否继续使用</span><br><span class="line"></span><br><span class="line">       <span class="number">4</span>）在用工作分配或者角色管理情况下，删除包含用户的工作组或者角色，程序能否正确处理</span><br><span class="line"></span><br><span class="line">       <span class="number">5</span>）不同权限账号登陆同一个系统，权限范围是否正确</span><br><span class="line"></span><br><span class="line">       <span class="number">6</span>）能否给信息为空、长用户名的账号添加权限</span><br><span class="line"></span><br><span class="line">       <span class="number">7</span>）是否允许删除系统管理员或者修改管理员权限？删除或者修改后的实际情况</span><br><span class="line"></span><br><span class="line">       <span class="number">8</span>）已登录的用户能否修改或者删除自己或者他人的权限，信息</span><br><span class="line"></span><br><span class="line">       <span class="number">9</span>）添加用户（有编号或者标识），不同用户名标识的组合情况下，权限能否处理正确</span><br><span class="line"></span><br><span class="line">       <span class="number">10</span>）修改用户权限或者信息后，对其他模块是否有影响</span><br><span class="line"></span><br><span class="line">       <span class="number">11</span>）如果修改用户信息为和已存在的其他用户信息相同，能否修改成功？是否有对应提示？</span><br><span class="line"></span><br><span class="line">       <span class="number">12</span>）修改某些设置，是否会对与该账号权限相同或者高于/低于该账号的其他账号的权限造成影响</span><br><span class="line"></span><br><span class="line">       <span class="number">13</span>）同一用户是否可以同时属于其他组，各个组的权限能否交叉？</span><br></pre></td></tr></table></figure><h2 id="下拉列表测试"><a href="#下拉列表测试" class="headerlink" title="下拉列表测试"></a>下拉列表测试</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">下拉菜单基本测试：</span><br><span class="line"><span class="number">1</span>)默认值(为空，提示选择，某一值)检查；</span><br><span class="line"><span class="number">2</span>)列表内容，是可变还是固定的，可变的最好要用SQL或其他方式验证正确性，不允许出现重复值；</span><br><span class="line"><span class="number">3</span>)列表中的排序方式，特别是选项过多时尤为重要；</span><br><span class="line"><span class="number">4</span>)列表过长是否提供滚动条支持，一般超过<span class="number">10</span>个需要滚动条；</span><br><span class="line"><span class="number">5</span>)选择一个选项后是否可编辑，有的下拉菜单允许编辑选择，这还需要验证其合法性；</span><br><span class="line"><span class="number">6</span>)列表中文本的对齐方式，一般都是左对齐；</span><br><span class="line"><span class="number">7</span>)选择框的长度是否可变；</span><br><span class="line"><span class="number">8</span>)选择框的长度是否合适，是否会出现选择项后不能全部显示其内容；</span><br><span class="line"><span class="number">9</span>)下拉菜单获取焦点后，是否可以通过键盘操作，主要包括↑,↓,Home ,End ,PageUP ,PageDown等。</span><br><span class="line"></span><br><span class="line">可编辑的下拉菜单测试：</span><br><span class="line"><span class="number">1</span>)插入新值，检查输入合法性，重复值要提示；插入值长度、个数是否有限制；</span><br><span class="line"><span class="number">2</span>)删除一个值；能否删除默认值；是否所有的预置选项可删除，是否可删除所有选项；</span><br><span class="line"><span class="number">3</span>)新增，删除选项后，下拉菜单内容是否能正确显示。</span><br><span class="line"></span><br><span class="line">下拉菜单联动检查：</span><br><span class="line">假设有A、B、C三个下拉菜单，A联动B，B联动C；这时需要检查：</span><br><span class="line"><span class="number">1</span>)A选择一个选项后，B下拉菜单内容应该是A中这一项所包括的所有内容；</span><br><span class="line"><span class="number">2</span>)选择B中的一个选项，C下拉菜单内容应该是B中这一项所包括的所有内容；</span><br><span class="line"><span class="number">3</span>)更改A中的内容，B，C菜单应该做相应改变；</span><br><span class="line"><span class="number">4</span>)更改B中内容，C菜单应做相应改变。</span><br></pre></td></tr></table></figure><h3 id="浏览器兼容测试"><a href="#浏览器兼容测试" class="headerlink" title="浏览器兼容测试"></a>浏览器兼容测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">兼容性测试：（参考博客http://www.cnblogs.com/imyalost/p/<span class="number">5622867.</span>html）</span><br><span class="line"></span><br><span class="line">a、平台兼容</span><br><span class="line"></span><br><span class="line">在有很多的操作系统，比如Windows、Unix、Linux、macintosh等；用户使用哪个系统取决于用户，因此，系统兼容测试就很有必要了。</span><br><span class="line"> 浏览器是web客户端最核心的组件，不同的浏览器，对Java，JavaScript，css或者HTML的规格都有不同的支持；</span><br><span class="line"></span><br><span class="line"> 另外，采用的框架和结构风格在不同浏览器中也存在不同的显示甚至不显示，不同的浏览器对安全性的设置也是不同的。</span><br><span class="line"></span><br><span class="line"> 测试浏览器兼容，有个方法就是创建一个兼容性矩阵，来测试不同厂商不同版本的浏览器兼容。</span><br><span class="line"></span><br><span class="line">  比如测试IE浏览器，可以通过一个叫做IEtester的工具来测试兼容，或者可以通过F12控制台来切换浏览器版本来测试兼容以前一些前端元素的显示等</span><br><span class="line"></span><br><span class="line">  鉴于国内市场浏览器很多，比如<span class="number">360</span>、搜狗，搜狐、QQ浏览器等，这些本土的浏览器基本都采用的IE浏览器内核的双核配置</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">浏览器（PC端）（注意浏览器的兼容模式和疾速模式）：</span><br><span class="line">IE浏览器，Chrome，Firefox，<span class="number">360</span>安全浏览器，<span class="number">360</span>疾速浏览器，搜狗浏览器，QQ浏览器，百度浏览器，猎豹浏览器</span><br><span class="line">浏览器（移动端）：是否兼容移动端浏览器访问</span><br><span class="line">操作系统：</span><br><span class="line">Windows7，Windows8（Windows8<span class="number">.1</span>）,Windows10</span><br><span class="line">Linux</span><br><span class="line">MacOS</span><br><span class="line">服务端升级：对旧数据的兼容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**浏览器的兼容性测试，需要考虑哪些方面？**</span><br><span class="line"></span><br><span class="line">IE6、IE7、IE8、IE9，FireFox，safari，chrome、opera</span><br><span class="line"></span><br><span class="line">国内的浏览器：如搜狗、<span class="number">360</span>、QQ、百度、<span class="number">2345</span>浏览器，UC浏览器，猎豹，遨游，世界之窗浏览器等</span><br><span class="line"></span><br><span class="line">**浏览器兼容性测试的工具**</span><br><span class="line"></span><br><span class="line">IE Tester专门用于IE浏览器各个版本中兼容性的工具（IE5<span class="number">.5</span>-IE9）</span><br><span class="line"></span><br><span class="line">Spoon Browser Sandbox:安装插件即可进行测试，主要是测试：safari，谷歌，火狐，opera浏览器</span><br><span class="line"></span><br><span class="line">Browser Shots，（支持浏览器种类和版本很丰富，但需要验证的应用或应用中包含的页面太多，这个软件就不太好使用）</span><br></pre></td></tr></table></figure><h3 id="功能测试"><a href="#功能测试" class="headerlink" title="功能测试"></a>功能测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">页面跳转，前进，后退，返回，刷新（强制刷新）</span><br><span class="line">数据修改：新增，删除，更新</span><br><span class="line">文件操作：上传，下载，文件类型，文件大小</span><br></pre></td></tr></table></figure><h3 id="安全测试"><a href="#安全测试" class="headerlink" title="安全测试"></a>安全测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">安全测试：</span><br><span class="line"></span><br><span class="line">安全测试的主要区域有以下几点：</span><br><span class="line"></span><br><span class="line">a、现在很多web应用系统都采用先注册后登录的方式，因此，测试用户名和密码的有效无效性，注意大小写敏感，次数限制，是否可以不登录而浏览某些页面等</span><br><span class="line"></span><br><span class="line">b、是否有超时限制，链接分享，cookie劫持</span><br><span class="line"></span><br><span class="line">c、测试用户操作时相关信息是否写入了日志文件、是否可追踪等</span><br><span class="line"></span><br><span class="line">d、如果使用了安全套字，需要测试加密是否正确，加密前后的信息完整性，正确性</span><br><span class="line"></span><br><span class="line">e、没有经过授权，是否可以在服务器端或者前端放置和编辑脚本的问题</span><br><span class="line"></span><br><span class="line">f、输入框的SQL注入验证</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>功能测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web项目</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>app测试</title>
    <link href="undefined2020/01/21/app%E6%B5%8B%E8%AF%95/"/>
    <url>2020/01/21/app%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="app项目功能测试"><a href="#app项目功能测试" class="headerlink" title="app项目功能测试"></a>app项目功能测试</h2><h3 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">运行</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）App安装完成后的试运行，可正常打开软件。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）App打开测试，是否有加载状态进度提示。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）App打开速度测试，速度是否可观。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）App页面间的切换是否流畅，逻辑是否正确</span><br></pre></td></tr></table></figure><h3 id="注册测试"><a href="#注册测试" class="headerlink" title="注册测试"></a>注册测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">注册</span><br><span class="line"></span><br><span class="line">--同表单编辑页面</span><br><span class="line"></span><br><span class="line">--用户名密码长度</span><br><span class="line"></span><br><span class="line">--注册后的提示页面</span><br><span class="line"></span><br><span class="line">--前台注册页面和后台的管理页面数据是否一致</span><br><span class="line"></span><br><span class="line">--注册后，在后台管理中页面提示</span><br></pre></td></tr></table></figure><h3 id="登录测试"><a href="#登录测试" class="headerlink" title="登录测试"></a>登录测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">登录</span><br><span class="line"></span><br><span class="line">--使用合法的用户登录系统。</span><br><span class="line"></span><br><span class="line">--系统是否允许多次非法的登陆，是否有次数限制。</span><br><span class="line"></span><br><span class="line">--使用已经登陆的账号登陆系统是否正确处理。</span><br><span class="line"></span><br><span class="line">--使用禁用的账号登陆系统是否正确处理。</span><br><span class="line"></span><br><span class="line">--用户名、口令（密码）错误或漏填时能否登陆。</span><br><span class="line"></span><br><span class="line">--删除或修改后的用户，原用户登陆。</span><br><span class="line"></span><br><span class="line">--不输入用户口令和用户、重复点（确定或取消按钮）是否允许登陆。</span><br><span class="line"></span><br><span class="line">--登陆后，页面中登陆信息。</span><br><span class="line"></span><br><span class="line">--页面中有注销按钮。</span><br><span class="line"></span><br><span class="line">--登陆超时的处理。</span><br></pre></td></tr></table></figure><p>###注销测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">注销</span><br><span class="line"></span><br><span class="line">--注销原模块，新的模块系统能否正确处理。</span><br><span class="line"></span><br><span class="line">--终止注销能否返回原模块，原用户。</span><br><span class="line"></span><br><span class="line">--注销原用户，新用户系统能否正确处理。</span><br><span class="line"></span><br><span class="line">--使用错误的账号、口令、无权限的被禁用的账号进行注销</span><br></pre></td></tr></table></figure><h3 id="前后台切换测试"><a href="#前后台切换测试" class="headerlink" title="前后台切换测试"></a>前后台切换测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) APP切换到后台，再回到app，检查是否停留在上一次操作界面。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) APP切换到后台，再回到app，检查功能及应用状态是否正常，IOS4和IOS5的版本的处理机制有的不一样。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) app切换到后台，再回到前台时，注意程序是否崩溃，功能状态是否正常，尤其是对于从后台切换回前台数据有自动更新的时候。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 手机锁屏解屏后进入app注意是否会崩溃，功能状态是否正常，尤其是对于从后台切换回前台数据有自动更新的时候。 </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) 当App使用过程中有电话进来中断后再切换到app，功能状态是否正常 </span><br><span class="line"></span><br><span class="line"><span class="number">6</span>) 当杀掉app进程后，再开启app，app能否正常启动。 </span><br><span class="line"></span><br><span class="line"><span class="number">7</span>) 出现必须处理的提示框后，切换到后台，再切换回来，检查提示框是否还存在，有时候会出现应用自动跳过提示框的缺陷。 </span><br><span class="line"></span><br><span class="line"><span class="number">8</span>) 对于有数据交换的页面，每个页面都必需要进行前后台切换、锁屏的测试，这种页面最容易出现崩溃。</span><br></pre></td></tr></table></figure><h3 id="免登录测试"><a href="#免登录测试" class="headerlink" title="免登录测试"></a>免登录测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">很多应用提供免登录功能，当应用开启时自动以上一次登录的用户身份来使用app.</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) app有免登录功能时，需要考虑IOS版本差异。 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 考虑无网络情况时能否正常进入免登录状态。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 切换用户登录后，要校验用户登录信息及数据内容是否相应更新，确保原用户退出。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 根据MTOP的现有规则，一个帐户只允许登录一台机器。所以，需要检查一个帐户登录多台手机的情况。原手机里的用户需要被踢出，给出友好提示。 </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) app切换到后台，再切回前台的校验 </span><br><span class="line"></span><br><span class="line"><span class="number">6</span>) 切换到后台，再切换回前台的测试 </span><br><span class="line"></span><br><span class="line"><span class="number">7</span>) 密码更换后，检查有数据交换时是否进行了有效身份的校验 </span><br><span class="line"></span><br><span class="line"><span class="number">8</span>) 支持自动登录的应用在进行数据交换时，检查系统是否能自动登录成功并且数据操作无误。 </span><br><span class="line"></span><br><span class="line"><span class="number">9</span>) 检查用户主动退出登录后，下次启动app，应停留在登录界面</span><br></pre></td></tr></table></figure><h3 id="数据更新测试"><a href="#数据更新测试" class="headerlink" title="数据更新测试"></a>数据更新测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">根据应用的业务规则，以及数据更新量的情况，来确定最优的数据更新方案。 </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) 需要确定哪些地方需要提供手动刷新，哪些地方需要自动刷新，哪些地方需要手动+自动刷新。 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 确定哪些地方从后台切换回前台时需要进行数据更新。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 根据业务、速度及流量的合理分配，确定哪些内容需要实时更新，哪些需要定时更新。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 确定数据展示部分的处理逻辑，是每次从服务端请求，还是有缓存到本地，这样才能有针对性的进行相应测试。 </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) 检查有数据交换的地方，均有相应的异常处理。</span><br></pre></td></tr></table></figure><h3 id="离线浏览测试"><a href="#离线浏览测试" class="headerlink" title="离线浏览测试"></a>离线浏览测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">离线浏览 </span><br><span class="line"></span><br><span class="line">很多应用会支持离线浏览，即在本地客户端会缓存一部分数据供用户查看。 </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) 在无网络情况可以浏览本地数据 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 退出app再开启app时能正常浏览 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 切换到后台再切回前台可以正常浏览 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 锁屏后再解屏回到应用前台可以正常浏览 </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) 在对服务端的数据有更新时会给予离线的相应提示</span><br></pre></td></tr></table></figure><h3 id="交叉事件测试"><a href="#交叉事件测试" class="headerlink" title="交叉事件测试"></a>交叉事件测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">针对智能终端应用的服务等级划分方式及实时特性所提出的测试方法。交叉测试又叫事件或冲突测试，是指一个功能正在执行过程中，同时另外一个事件或操作对该过程进行干扰的测试。如；App在前/后台运行状态时与来电、文件下载、音乐收听等关键运用的交互情况测试等。交叉事件测试非常重要，能发现很多应用中潜在的性能问题。</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>） 多个App同时运行是否影响正常功能</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>） App运行时前/后台切换是否影响正常功能</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>） App运行时拨打/接听电话</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>） App运行时发送/接收信息</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>） App运行时发送/收取邮件</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>） App运行时切换网络（<span class="number">2</span>G、<span class="number">3</span>G、wifi）</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>） App运行时浏览网络</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>） App运行时使用蓝牙传送/接收数据</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>） App运行时使用相机、计算器等手机自带设备</span><br></pre></td></tr></table></figure><h3 id="兼容性测试"><a href="#兼容性测试" class="headerlink" title="兼容性测试"></a>兼容性测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">主要测试内部和外部兼容性</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）与本地及主流App是否兼容</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）基于开发环境和生产环境的不同，检验在各种网络连接下(WiFi、<span class="number">2</span>G,<span class="number">3</span>G,<span class="number">4</span>G,<span class="number">5</span>G等)，App的数据和运用是否正确</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）与各种设备是否兼容，若有跨系统支持则需要检验是否在各系统下，各种行为是否一致</span><br><span class="line"></span><br><span class="line"> --不同操作系统的兼容性，是否适配</span><br><span class="line"></span><br><span class="line">--不同手机屏幕分辨率的兼容性</span><br><span class="line"></span><br><span class="line">--不同手机品牌的兼容性</span><br></pre></td></tr></table></figure><h3 id="手势操作测试"><a href="#手势操作测试" class="headerlink" title="手势操作测试"></a>手势操作测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">手势操作测试</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）手机开锁屏对运行中的App的影响</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）切换网络对运行中的App的影响</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）运行中的App前后台切换的影响</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）多个运行中的App的切换</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）App运行时关机</span><br></pre></td></tr></table></figure><h3 id="UI测试"><a href="#UI测试" class="headerlink" title="UI测试"></a>UI测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">文案的测试</span><br><span class="line">字体，字号，格式，规范</span><br><span class="line">标题和正文，中英文换行，错别字，大小写，全半角标点</span><br><span class="line"></span><br><span class="line">   图片的测试</span><br><span class="line">清晰，尺寸，配色，风格；</span><br><span class="line"></span><br><span class="line">布局的测试</span><br><span class="line">尺寸大小，位置合理，排序规律，对齐方式；</span><br><span class="line"></span><br><span class="line">控件的测试</span><br><span class="line">对话框</span><br><span class="line"></span><br><span class="line">状态</span><br><span class="line">是否在对话框显示的同时可进行程序其他操作</span><br><span class="line"></span><br><span class="line">位置</span><br><span class="line">显示的位置是否在可视范围内，是否子啊屏幕中央</span><br><span class="line">多个一级二级对话框并存时，层级关系是否正确</span><br><span class="line"></span><br><span class="line">移动</span><br><span class="line">是否可以移动对话框</span><br><span class="line"></span><br><span class="line">文本框</span><br><span class="line"></span><br><span class="line">默认值</span><br><span class="line">是否为空</span><br><span class="line">是否有提示文案</span><br><span class="line"></span><br><span class="line">边界值</span><br><span class="line">长度限制，最多限制字符，超出屏幕上下方等</span><br><span class="line">超出限制的界面提示，显示，处理，跳转等</span><br><span class="line"></span><br><span class="line">内容</span><br><span class="line">前置/中置/后置空格内容</span><br><span class="line">中文/英文/数字普通文本内容</span><br><span class="line">引号/逗号特殊富豪内容</span><br><span class="line">全角/半角内容</span><br><span class="line">复制粘贴的内容</span><br><span class="line">大小写全半角的内容</span><br><span class="line">不符合格式的内容</span><br><span class="line"></span><br><span class="line">滑动滚轮</span><br><span class="line"></span><br><span class="line">滚轮的触控区域</span><br><span class="line">滚轮的数值限制</span><br><span class="line">向上向下滑到极限值的处理</span><br><span class="line">滚轮的对应跳转</span><br><span class="line"></span><br><span class="line">日期滚轮</span><br><span class="line">涉及到年月日的跳转</span><br><span class="line"></span><br><span class="line">时间滚轮</span><br><span class="line">涉及到<span class="number">24</span>小时和<span class="number">12</span>小时，上下午的跳转</span><br><span class="line"></span><br><span class="line">上下微调按钮</span><br><span class="line">默认起始值</span><br><span class="line">调整的变化值</span><br><span class="line">最大值与最小值</span><br><span class="line">输入数据后微调的值</span><br><span class="line">输入的数据是否作有效性验证</span><br><span class="line"></span><br><span class="line">选项按钮</span><br><span class="line"></span><br><span class="line">单选按钮</span><br><span class="line">默认选项是否正确合理</span><br><span class="line">选中其他选项，会自动取消当前选项</span><br><span class="line">存在多个选项组时，选择其中一组的选项不会影响其他选项组</span><br><span class="line"></span><br><span class="line">多选按钮</span><br><span class="line">默认选项是否正确合理</span><br><span class="line">选择其他选项不会影响当前选项</span><br><span class="line"></span><br><span class="line">图标按钮</span><br><span class="line">图标图片是否正确合适</span><br><span class="line">点击图标时否调出对应页面</span><br><span class="line">图标tooltip触发时机是否正确合理</span><br><span class="line"></span><br><span class="line">默认形态</span><br><span class="line">是否勾选</span><br><span class="line">选项值的记忆</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在做UI测试时，有如下需要注意的地方（标红处为实际项目过程中所遇到但忽略过的内容）：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>    各个页面的样式风格是否统一</span><br><span class="line"><span class="number">2.</span>    各个页面的大小是否一致；同样的LOGO图片在各个页面中显示是否大小一致；页面及图片是否居中显示</span><br><span class="line"><span class="number">3.</span>    各个页面的title是否正确</span><br><span class="line"><span class="number">4.</span>    栏目名称、文章内容等处的文字是否正确，有无错别字或乱码；同一级别的字体、大小、颜色是否统一</span><br><span class="line"><span class="number">5.</span>    提示、警告或错误说明应清楚易懂，用词准确，摒弃模棱两可的字眼</span><br><span class="line"><span class="number">6.</span>    切换窗口大小，将窗口缩小后，页面是否按比例缩小或出现滚动条；各个页面缩小的风格是否一致，文字是否窜行</span><br><span class="line"><span class="number">7.</span>    父窗体或主窗体的中心位置应该在对角线焦点附近；子窗体位置应该在主窗体的左上角或正中；多个子窗体弹出时应该依次向右下方偏移，以显示出窗体标题为宜</span><br><span class="line"><span class="number">8.</span>    按钮大小基本相近，忌用太长的名称，免得占用过多的界面位置；避免空旷的界面上放置很大的按钮；按钮的样式风格要统一；按钮之间的间距要一致</span><br><span class="line"><span class="number">9.</span>    页面颜色是否统一；前景与背景色搭配合理协调，反差不宜太大，最好少用深色或刺目的颜色</span><br><span class="line"><span class="number">10.</span>    若有滚动信息或图片，将鼠标放置其上，查看滚动信息或图片是否停止</span><br><span class="line"><span class="number">11.</span>    导航处是否按相应的栏目级别显示；导航文字是否在同一行显示</span><br><span class="line"><span class="number">12.</span>    所有的图片是否都被正确装载，在不同的浏览器、分辨率下图片是否能正确显示（包括位置、大小）</span><br><span class="line"><span class="number">13.</span>    文章列表页，左侧的栏目是否与一级、二级栏目的名称、顺序一致</span><br><span class="line"><span class="number">14.</span>    调整分辨率验证页面格式是否错位现象</span><br><span class="line"><span class="number">15.</span>    鼠标移动到焦点上特效是否实现，移出焦点特效是否消失</span><br><span class="line"><span class="number">16.</span>    文字颜色与页面配色协调，不使用与背景色相近的颜色</span><br><span class="line"><span class="number">17.</span>    每个非首页静态页面含图片字节不超过<span class="number">300</span>K，全尺寸banner第一个场景控制在<span class="number">200</span>k以内二个场景在<span class="number">300</span>K，三个场景在<span class="number">400</span>K以此类推</span><br><span class="line"><span class="number">18.</span>    同一界面上的控件数最好不要超过<span class="number">10</span>个，多于<span class="number">10</span>个时可以考虑使用分页界面显示</span><br><span class="line"><span class="number">19.</span>    超过一屏的内容，在底部应有go top按钮</span><br><span class="line"><span class="number">20.</span>    超过三屏的内容，应在头部设提纲，直接链接到文内锚点</span><br><span class="line"><span class="number">21.</span>    首页，各栏目一级页面之间互链，各栏目一级和本栏目二级页面之间互链</span><br><span class="line"><span class="number">22.</span>    导航的文字要简明扼要，字数限制在一行以内</span><br><span class="line"><span class="number">23.</span>    报表显示时应考虑数据显示宽度的自适应或自动换行</span><br><span class="line"><span class="number">24.</span>    所有数据展现的界面（如统计、查询、编辑录入、打印预览、打印等），必须使测试数据的记录数超过一屏/一页，以验证满屏/页时其窗体是否有横向、纵向滚动条或换页打印，界面显示是否正常</span><br><span class="line"><span class="number">25.</span>    如有多个系统展现同一数据源时，应保证其一致性</span><br><span class="line"><span class="number">26.</span>    对于报表中的所有字段值都应该有明确的定义，对于无意义的字段值，不应该显示空，应显示“--”或“/”，表示该字段值无意义</span><br><span class="line"><span class="number">27.</span>    对统计的数据应按用户习惯进行分类、排序</span><br><span class="line"><span class="number">28.</span>    界面内容更新后系统应提供刷新功能</span><br><span class="line"><span class="number">29.</span>    用户在退出系统后重新登陆时应考虑是否需要自动返回到上次退出系统时的界面</span><br><span class="line"><span class="number">30.</span>    在多个业务功能组成的一个业务流程中，如果各个功能之间的执行顺序有一定的制约条件，应通过界面提示用户</span><br><span class="line"><span class="number">31.</span>    用户提示信息应具有一定的指导性，在应用程序正在进行关键业务的处理时，应考虑在前台界面提示用户应用程序正在进行的处理，以及相应的处理过程，在处理结束后再提示用户处理完毕</span><br><span class="line"><span class="number">32.</span>    在某些数据输入界面，如果要求输入的数据符合某项规则，应在输入界面提供相应的规则描述；当输入数据不符合规则时应提示用户是否继续</span><br><span class="line"><span class="number">33.</span>    在对任何配置信息修改后，都应该在用户退出该界面时提示用户保存（如果用户没有主动保存的情况下）</span><br><span class="line"><span class="number">34.</span>    在对某些查询功能进行测试时，应考虑查询条件的设置的合理性以及查询结果的互补性。如某些后台处理时间不应该作为查询条件</span><br><span class="line"><span class="number">35.</span>    界面测试时，应考虑某一界面上按钮先后使用的顺序问题，以免用户对此产生迷惑。例如只能在查询成功后显示执行按钮</span><br><span class="line"><span class="number">36.</span>    应验证窗口与窗口之间、字段与字段之间的浏览顺序是否正确</span><br><span class="line"><span class="number">37.</span>    应验证所有窗体中的对象状态是否正常，是否符合相关的业务规则</span><br><span class="line"><span class="number">38.</span>    应验证各种对象访问方法（Tab 健、鼠标移动和快捷键）是否可正常使用，并且在一个激活界面中快捷键无重复</span><br><span class="line"><span class="number">39.</span>    界面测试不光要考虑合理的键盘输入，还应考虑是否可以通过鼠标拷贝粘贴输入</span><br><span class="line"><span class="number">40.</span>    对于统计查询功能的查询结果应验证其是否只能通过界面上的查询或刷新按键人工触发，应避免其他形式的触发</span><br><span class="line"><span class="number">41.</span>    对界面上的任何对象进行拖拉，然后进行查询、打印，应保证查询打印结果不变</span><br><span class="line"><span class="number">42.</span>    确保数据精度显示的统一：如单价<span class="number">0</span>元，应显示为<span class="number">0.00</span>元</span><br><span class="line"><span class="number">43.</span>    确保时间及日期显示格式的统一</span><br><span class="line"><span class="number">44.</span>    确保相同含义属性/字段名的统一</span><br><span class="line"><span class="number">45.</span>    对所有可能产生的提示信息界面内容和位置进行验证，确保所有的提示信息界面应居中</span><br></pre></td></tr></table></figure><h3 id="消息通知测试"><a href="#消息通知测试" class="headerlink" title="消息通知测试"></a>消息通知测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">APP消息推送如何测试？</span><br><span class="line">消息推送对象</span><br><span class="line">消息推送一般可以自定义推送对象，有全部推送，精确推送，及安卓和IOS渠道推送，注意推送对象是否正确，推送之前确认自己是否在测试环境操作，以免造成生产问题。</span><br><span class="line"></span><br><span class="line">消息简介</span><br><span class="line">客户端收到消息推送有两种形式，客户端后台运行一般推送显示在通知栏，客户端前台运行一般弹出弹框，简介内容注意字数过多溢出情况。</span><br><span class="line"></span><br><span class="line">消息详情</span><br><span class="line">注意详情所支持的内容，包括文字、图片、表情包、换行以及链接跳转。</span><br><span class="line"></span><br><span class="line">消息推送场景（支持定时推送）</span><br><span class="line">（<span class="number">1</span>）消息推送时间：</span><br><span class="line">a)设置过去时间</span><br><span class="line">b)未推送之前修改消息内容</span><br><span class="line">c)删除消息，查看是否还会推送</span><br><span class="line">（<span class="number">2</span>）客户端运行状态</span><br><span class="line">a)前台运行</span><br><span class="line">b)后台运行</span><br><span class="line">c)进程关闭状态</span><br><span class="line">（<span class="number">2</span>）特殊场景</span><br><span class="line">a)多个提醒冲突</span><br><span class="line">b)当天设置当天推送</span><br><span class="line">c)当天设置隔几天起效</span><br><span class="line">如果用户设置不接收消息通知，看是否接到通知</span><br></pre></td></tr></table></figure><h3 id="安装卸载测试"><a href="#安装卸载测试" class="headerlink" title="安装卸载测试"></a>安装卸载测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">安装</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>正常安装测试，检查是否安装成功。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>APP版本覆盖测试。例如：先安装一个<span class="number">1.0</span>版本的APP,再安装一个高版本(<span class="number">1.1</span>版本)的APP，检查是否被覆盖。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>回退版本测试。例如：先装一个<span class="number">2.0</span>版本的APP,再安装一个<span class="number">1.0</span>版本的APP,正常情况下版本是可以回退的。</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>安装时内存不足，弹出提示。</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>根据安装手册操作，是否正确安装。</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>安装过程中的意外情况（强行断电、断网、来电话了、查看信息）等等，检查会发生的情况。</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>通过‘同步软件’，检查安装时是否同步安装了一些文件。</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>在不同型号、系统、屏幕大小、分辨率上的手机进行安装。</span><br><span class="line"></span><br><span class="line"><span class="number">9.</span>安装时是否识别有SD卡，并默认安装到sd卡中。</span><br><span class="line"></span><br><span class="line"><span class="number">10.</span>安装完成后，能否正常启动应用程序。</span><br><span class="line"></span><br><span class="line"><span class="number">11.</span>安装完成后，重启手机能否正常启动应用程序。</span><br><span class="line"></span><br><span class="line"><span class="number">12.</span>安装完成后，是否对其他应用程序造成影响。</span><br><span class="line"></span><br><span class="line"><span class="number">13.</span>安装完成后，能否添加快捷方式。</span><br><span class="line"></span><br><span class="line"><span class="number">14.</span>安装完成后，杀毒软件是否会对其当做病毒处理。</span><br><span class="line"></span><br><span class="line"><span class="number">15.</span>多进程进行安装，是否安装成功。</span><br><span class="line"></span><br><span class="line"><span class="number">16.</span>在安装过程中，所有的提示信息必须是英文或者中文，提示信息中不能出现代码、符号、乱码等。</span><br><span class="line"></span><br><span class="line"><span class="number">17.</span>安装之后，是否自动启动程序。</span><br><span class="line"></span><br><span class="line"><span class="number">18.</span>是否支持第三方安装。</span><br><span class="line"></span><br><span class="line"><span class="number">19.</span>在安装中点击取消。</span><br><span class="line"></span><br><span class="line">卸载</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>用自己的卸载程序进行卸载，检查是否卸载干净。</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>用第三方工具，检查是否卸载干净。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>在卸载过程中，点击取消按钮，看是否正常退出卸载程序，检查软件是否还能继续正常使用。</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>卸载过程中，出现意外（比如手机关机，没电，查看信息，接打电话），程序是否还能运行。</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>在卸载过程中，突然重启设备，再次访问程序，是否还能运行。</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>在没用使用程序时，删除目录文件，看程序是否能运行。</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>在使用过程中，直接删除目录文件，程序是否还能运行。</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>不同系统、硬件环境、网络环境下进行卸载。</span><br><span class="line"></span><br><span class="line"><span class="number">9.</span>卸载成功后，是否对其他程序有影响。</span><br><span class="line"></span><br><span class="line"><span class="number">10.</span>卸载后再次安装，是否正常使用。</span><br><span class="line"></span><br><span class="line"><span class="number">11.</span>在卸载过程中，所有的提示信息必须是英文或者中文，提示信息中不能出现代码、符号、乱码等。</span><br></pre></td></tr></table></figure><h3 id="升级更新测试"><a href="#升级更新测试" class="headerlink" title="升级更新测试"></a>升级更新测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">新版版发布后，配合不同网络环境的自劢更新提示及下载、安装、更新、启劢、运行的验证测试。  </span><br><span class="line">升级：</span><br><span class="line"><span class="number">1</span>）测试升级后的功能是否与需求说明一样</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）测试与升级模块相关的模块的功能是否与需求一致</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）升级安装意外情况的测试（如死机、断电、重启）</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）升级界面的UI测试</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）不同操作系统间的升级测试</span><br><span class="line">更新：</span><br><span class="line"><span class="number">1</span>) 当客户端有新版本时，有更新提示。 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 当版本为非强制升级版时，用户可以取消更新，老版本能正常使用。用户在下次启动app时，仍能出现更新提示。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 当版本为强制升级版时，当给出强制更新后用户没有做更新时，退出客户端。下次启动app时，仍出现强制升级提示。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 当客户端有新版本时，在本地不删除客户端的情况下，直接更新检查是否能正常更新。</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) 当客户端有新版本时，在本地不删除客户端的情况下，检查更新后的客户端功能是否是新版本。 </span><br><span class="line"></span><br><span class="line"><span class="number">6</span>) 当客户端有新版本时，在本地不删除客户端的情况下，检查资源同名文件如图片是否能正常更新成最新版本。</span><br></pre></td></tr></table></figure><h3 id="用户体验测试"><a href="#用户体验测试" class="headerlink" title="用户体验测试"></a>用户体验测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以主观的普通消费者的角度去感知产品或服务的舒适、有用、易用、友好亲切程度。 通过不同个体、独立空间和非经验的统计复用方式去有效评价产品的体验特性提出修改意见提升产品的潜在客户满意度。</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）是否有空数据界面设计，引导用户去执行操作。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）是否滥用用户引导。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>）是否有不可点击的效果，如：你的按钮此时处于不可用状态，那么一定要灰掉，或者拿掉按钮，否则会给用户误导</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>）菜单层次是否太深</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>）交互流程分支是否太多</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>）相关的选项是否离得很远</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>）一次是否载入太多的数据</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>）界面中按钮可点击范围是否适中</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>）标签页是否跟内容没有从属关系，当切换标签的时候，内容跟着切换</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>）操作应该有主次从属关系</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>）是否定义Back的逻辑。涉及软硬件交互时，Back键应具体定义</span><br><span class="line"></span><br><span class="line"><span class="number">12</span>）是否有横屏模式的设计，应用一般需要支持横屏模式，即自适应设计</span><br></pre></td></tr></table></figure><h3 id="回归测试"><a href="#回归测试" class="headerlink" title="回归测试"></a>回归测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>）Bug修复后且在新版本发布后需要进行回归测试。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）Bug修复后的回归测试在交付前、要进行全量用例的回归测试。</span><br></pre></td></tr></table></figure><h3 id="时间测试"><a href="#时间测试" class="headerlink" title="时间测试"></a>时间测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">时间测试 </span><br><span class="line"></span><br><span class="line">客户端可以自行设置手机的时区、时间，因此需要校验该设置对app的影响。 </span><br><span class="line"></span><br><span class="line">--中国为东<span class="number">8</span>区，所以当手机设置的时间非东<span class="number">8</span>区时，查看需要显示时间的地方，时间是否展示正确，应用功能是否正常。时间一般需要根据服务器时间再转换成客户端对应的时区来展示，这样的用户体验比较好。比如发表一篇微博在服务端记录的是<span class="number">10</span>：<span class="number">00</span>，此时，华盛顿时间为<span class="number">22</span>：<span class="number">00</span>，客户端去浏览时，如果设置的是华盛顿时间,则显示的发表时间即为<span class="number">22</span>:<span class="number">00</span>,当时间设回东<span class="number">8</span>区时间时，再查看则显示为<span class="number">10</span>：<span class="number">00</span>。</span><br></pre></td></tr></table></figure><h3 id="定位，照相机服务测试"><a href="#定位，照相机服务测试" class="headerlink" title="定位，照相机服务测试"></a>定位，照相机服务测试</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">定位、照相机服务 </span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) App有用到相机，定位服务时，需要注意系统版本差异 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 有用到定位服务、照相机服务的地方，需要进行前后台的切换测试，检查应用是否正常。 </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 当定位服务没有开启时，使用定位服务，会友好性弹出是否允许设置定位提示。当确定允许开启定位时，能自动跳转到定位设置中开启定位服务。 </span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) 测试定位、照相机服务时，需要采用真机进行测试。</span><br></pre></td></tr></table></figure><h3 id="app上线后舆情的跟踪"><a href="#app上线后舆情的跟踪" class="headerlink" title="app上线后舆情的跟踪"></a>app上线后舆情的跟踪</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">新app上线之后，用户对此应用的评价，存在哪些测试期间未发现的bug；</span><br></pre></td></tr></table></figure><h3 id="APP中接入第三方支付功能测试注意点"><a href="#APP中接入第三方支付功能测试注意点" class="headerlink" title="APP中接入第三方支付功能测试注意点"></a>APP中接入第三方支付功能测试注意点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">正常流程：</span><br><span class="line">　　正常使用支付宝、微信、银行卡（目前使用最多的第三方支付方式）支付（正常金额的支付），功能是否正常。</span><br><span class="line"></span><br><span class="line">异常流程：</span><br><span class="line">　　<span class="number">1</span>、支付账号和密码错误，系统如何处理；</span><br><span class="line"></span><br><span class="line">　　<span class="number">2</span>、余额不足，系统如何处理；</span><br><span class="line"></span><br><span class="line">　　<span class="number">3</span>、取消支付，系统如何处理；</span><br><span class="line"></span><br><span class="line">　　<span class="number">4</span>、重复支付，系统如何处理；</span><br><span class="line"></span><br><span class="line">　　<span class="number">5</span>、微信或支付宝账号未登录时支付，系统如何处理；</span><br><span class="line"></span><br><span class="line">　　<span class="number">6</span>、手机上没有支付宝APP时选择支付宝支付，系统如何处理；</span><br><span class="line"></span><br><span class="line">　　<span class="number">7</span>、支付期间突然断网，系统如何处理；</span><br><span class="line"></span><br><span class="line">　　<span class="number">8</span>、取消支付后再次支付，系统如何处理；</span><br><span class="line"></span><br><span class="line">　　<span class="number">9</span>、金额上：最小值金额的支付，最大值金额的支付，错误金额的支付（如金额格式的错误、不允许使用的货币等等）；</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>业务功能测试</tag>
      
      <tag>UI测试</tag>
      
      <tag>消息通知测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Postman使用心得</title>
    <link href="undefined2020/01/14/Postman%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <url>2020/01/14/Postman%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="postman的使用步骤"><a href="#postman的使用步骤" class="headerlink" title="postman的使用步骤"></a>postman的使用步骤</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>打开postman-选择request-输入request名，选择一个文件夹/新建一下文件夹-点击创建即可</span><br><span class="line"></span><br><span class="line">（request name为这个接口的名字，collection 为该接口在文件夹中的名字）</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>将url放到文本框中，Postman 可以自动帮我们解析出对应参数。</span><br><span class="line"></span><br><span class="line">- 如果想要暂时不传参数，可以方便的通过不勾选的方式去实现</span><br><span class="line">- 如果想要批量的编辑参数，可以点击右上角的Bulk Edit，去实现批量编辑</span><br><span class="line"></span><br><span class="line">- postman的使用心得？</span><br><span class="line"></span><br><span class="line">- Postman中tests使用的语言为js,只需要写结果逻辑的判断代码即可</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Postman</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Postman</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试工作使用的软件和工具</title>
    <link href="undefined2020/01/14/%E6%B5%8B%E8%AF%95%E5%B7%A5%E4%BD%9C%E4%BD%BF%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7/"/>
    <url>2020/01/14/%E6%B5%8B%E8%AF%95%E5%B7%A5%E4%BD%9C%E4%BD%BF%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="packet-capture的介绍和使用步骤"><a href="#packet-capture的介绍和使用步骤" class="headerlink" title="packet capture的介绍和使用步骤"></a>packet capture的介绍和使用步骤</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">packet capture-Android手机上的抓包神器，就是将网络传输发送与接收的数据包进行截获、重发、编辑、转存等操作，也用来检查网络安全。抓包也经常被用来进行数据截取等</span><br></pre></td></tr></table></figure><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">功能特点：</span><br><span class="line"><span class="number">1.</span>捕获网络数据包并记录下来</span><br><span class="line"><span class="number">2.</span>使用中间人技术进行SSL解密</span><br><span class="line"><span class="number">3.</span>无需root</span><br><span class="line"><span class="number">4.</span>方便快捷,可完成Android流量抓包，在流量情况下通过抓包分析请求情况，或者分析流量情况下的图片压缩情况等，是个不错的流量调试工具。</span><br><span class="line"><span class="number">5.</span>以十六进制或文本来显示数据包</span><br></pre></td></tr></table></figure><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">使用步骤：</span><br><span class="line"><span class="number">1.</span>从google play商店搜索下载PacketCapture；</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>安装完成后，打开PacketCapture，进行应用的设置，开始的几个页面点击确定就行，第三个页面需要设置SSL证书，如果需要抓取https协议的话，这一页的设置就点击“Install Certificate”，证书保存一下即可，比较简单；</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>需要流量抓包时，我们打开PacketCapture，可以看到它的界面比较简单，主要的功能就是选择应用进行抓包，以及抓取手机全部的流量包, 选择应用抓包可以只过滤出指定应用的请求，比较方便;</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>开始抓包时点击起始按钮，然后操作应用，结束操作后点击PackageCapture页面的停止抓包按钮,此次抓包记录就保存成一条记录，生成以开始抓包的时间命名的记录。 我们选择列表中的一条记录查看其中的内容。如下图所示，可见里面有抓包App的名称、host及端口号，协议类型、请求时间、是否是https、数据包的大小等信息。<span class="number">6.6</span>.</span><br><span class="line"> <span class="number">5.</span>再点击内容中的任意一条请求，可以查看这份请求的具体情况，如下图所示。请求里列出了请求体、请求url、请求方式、返回数据、返回值、返回值内容等。可以看到这条请求的全部信息，与fiddler、charles等wifi下抓包结果一致。</span><br><span class="line">￼</span><br><span class="line"> </span><br><span class="line"><span class="number">6.</span>另外还可以点击右上角选择将该条请求的request或者response保存到文件中</span><br></pre></td></tr></table></figure><h1 id="H5的调试工具"><a href="#H5的调试工具" class="headerlink" title="H5的调试工具"></a>H5的调试工具</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://debugx5.qq.com</span><br><span class="line">这个工具只能在H5里看到调试信息,比如清除dns，cookie，缓存文件信息的时候用</span><br></pre></td></tr></table></figure><h1 id="测试工作常用的工具"><a href="#测试工作常用的工具" class="headerlink" title="测试工作常用的工具"></a>测试工作常用的工具</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>随意生成自己想要的格式，大小图片,在线ps图片:https://ps.gaoding.com/<span class="comment">#/?hmsr=zc-cc</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>有很多真机可以模拟线上bug,云测平台：https://www.testin.cn/realmachine/index.htm</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>可查看不同时间段内app的新增用户和活跃用户,腾讯移动分析</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>查看app的排名，分辨率，用户行为,百度流量研究院</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>手机，电脑，平板，手表，显示器的屏幕尺寸大全,屏幕尺寸大全</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>智能识别验证码,百度智能云</span><br><span class="line">    </span><br><span class="line"><span class="number">7.</span>提bug的工具:jira</span><br><span class="line">    </span><br><span class="line"><span class="number">8.</span>协同工作软件,Tower</span><br><span class="line"></span><br><span class="line"><span class="number">9.</span>共享文件:石墨</span><br><span class="line"></span><br><span class="line"><span class="number">10.</span>接口文档存放,遵循restful风格:swagger</span><br><span class="line"></span><br><span class="line"><span class="number">11.</span>测试分发平台：.firm和蒲公英</span><br><span class="line"></span><br><span class="line"><span class="number">12.</span>接口管理平台/自动化接口测试：Yapi</span><br><span class="line"></span><br><span class="line"><span class="number">13.</span>日志查看：阿里云日志</span><br><span class="line"></span><br><span class="line"><span class="number">14.</span>协作工具,知识库管理软件：Wiki/confluence</span><br><span class="line">介绍：wiki是一种协作的写作模式，来源于夏威夷语，它最大的特点就是分享性，开放性以及互动性。wiki站点允许任何访问它的用户都可以修改、编辑以及创建上面的内容。主要存放一些数据库文档和(数据库中各个字段的意思)app的路由配置表，上线记录，工期安排</span><br><span class="line"></span><br><span class="line"><span class="number">15.</span>移动自动化测试工具：appium</span><br></pre></td></tr></table></figure><p>#免费下载ppt模版</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">芒果派：http://www<span class="number">.788</span>ppt.com/hot.html</span><br></pre></td></tr></table></figure><h1 id="前端自动化测试工具"><a href="#前端自动化测试工具" class="headerlink" title="前端自动化测试工具"></a>前端自动化测试工具</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Puppeteer前端自动化测试工具</span><br><span class="line">Puppeteer完成以下工作:</span><br><span class="line">* 访问页面，进行截图</span><br><span class="line">* 自动进行键盘输入，提交表单</span><br><span class="line">* 模拟点击等用户操作等</span><br></pre></td></tr></table></figure><h1 id="移动端自动化测试工具"><a href="#移动端自动化测试工具" class="headerlink" title="移动端自动化测试工具"></a>移动端自动化测试工具</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">airtest</span><br><span class="line">Airtest移动自动化测试工具—用来做游戏自动化的，通过截图的方式用来解决游戏自动化测试的难题；</span><br><span class="line">官方网站：http://airtest.netease.com/</span><br></pre></td></tr></table></figure><h1 id="友盟-，国内第三方全域数据服务商"><a href="#友盟-，国内第三方全域数据服务商" class="headerlink" title="友盟+，国内第三方全域数据服务商"></a>友盟+，国内第三方全域数据服务商</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">友盟+，国内第三方全域数据服务商 ，是中国专业的移动开发者服务平台  ；</span><br><span class="line">友盟+以“数据智能，驱动业务增长”为使命，基于技术与算法能力，结合全域数据资源，挖掘出<span class="number">40</span>+标签大类，<span class="number">15</span>,<span class="number">000</span>+客群标签、<span class="number">100</span>+用户/行业分析指标，通过AI赋能的一站式互联网数据产品与服务体系，帮助企业实现深度用户洞察、实时业务决策和持续业务增长。</span><br><span class="line">服务业务：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>移动统计：U-App AI版</span><br><span class="line">U-App AI版是面向App开发者提供的App智能监测与分析平台。</span><br><span class="line">核心能力包括：实时统计、整体趋势、渠道分析、错误分析等基础统计功能，开发者还可根据业务需求自定义看板和指标，更灵活地查看“看数”。在此之上，将用户分群与精细分析打通，实现更自由的精细化运营。同时，融合全域数据的画像和预测能力，实现基于人群圈选的智能拉新、对用户价值和流转趋势的预测、分群用户触达，助力用户增长。最终实现从数据统计到分析再到Push等的一站式闭环运营。 </span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>移动广告监测：AppTrack</span><br><span class="line">AppTrack是面向App开发者的全链路广告效果与分析平台。从渠道曝光、点击、下载、安装启动及后续的留存、注册、付费等全链路、全方位监测与分析评估，提升ROI。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>消息推送：U-Push </span><br><span class="line">U-Push是友盟+为App开发者打造的精准消息推送工具。支持多平台下发（覆盖华为/小米/魅族厂商通道）、消息无痕撤回、精准分群推送，提升用户活跃度与用户粘性。 </span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>社会化分享：U-Share</span><br><span class="line">U-Share是友盟+为App开发者提供的国内外多平台分享及第三方登录功能的工具。一次集成，具备多平台分享能力。并通过实时的用户画像、分析回流数据，助力App开发者产品开发与推广。</span><br></pre></td></tr></table></figure><h1 id="浏览器兼容性测试工具"><a href="#浏览器兼容性测试工具" class="headerlink" title="浏览器兼容性测试工具"></a>浏览器兼容性测试工具</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>Spoon Browser Sandbox（收费）它是一个插件可以安装在Chrome浏览器中，能测试IE、Chrome、FireFox、Safari、Opera所有版本的兼容性。</span><br><span class="line"></span><br><span class="line">官网下载地址：https://turbo.net/browsers</span><br><span class="line">    </span><br><span class="line"><span class="number">2.</span>IETester</span><br><span class="line"></span><br><span class="line">安装：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>首先打开百度,输入ietester-选择普通下载-一路下一步就OK</span><br><span class="line">DebugBar的安装</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>打开百度. 输入debugbar-下载</span><br></pre></td></tr></table></figure><h4 id="Testin云测"><a href="#Testin云测" class="headerlink" title="Testin云测"></a>Testin云测</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Testin云测的使用范围：移动项目（app），拥有千余款不同型号的手机，平板，智能电视等，解决企业真机不足，市场热机，新机无法迅速获取等问题；线上用户的问题反馈或投诉，只出现在特定机型上，企业需要在短时间内使用指定机型进行测试和调试以解决问题；</span><br><span class="line">使用步骤：</span><br><span class="line"><span class="number">1.</span>注册一个账号，并通过企业认证，将app上传到测试平台进行测试；</span><br><span class="line"><span class="number">2.</span>把测试手机的UDID加到证书里面，才能在真机上安装你的插件；</span><br><span class="line"><span class="number">3.</span>换一个手机需要重新添加UDID,苹果手机支持添加UDID列表文件，可以把平台的所有UDID都加进证书里；</span><br><span class="line"></span><br><span class="line">兼容性测试的操作步骤：</span><br><span class="line"><span class="number">1</span>、登录成功——进入控制台——进入标准兼容性测试栏目——新建测试项目——上传安装包——开始测试</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Adb:andriod debug bride</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具，软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试工作/学习相关的论坛和网站</title>
    <link href="undefined2020/01/14/%E6%B5%8B%E8%AF%95%E8%AE%BA%E5%9D%9B%E5%92%8C%E7%BD%91%E7%AB%99/"/>
    <url>2020/01/14/%E6%B5%8B%E8%AF%95%E8%AE%BA%E5%9D%9B%E5%92%8C%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##较好的测试博客论坛</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.51</span>testing软件网: http://www<span class="number">.51</span>testing.com/html/index.html </span><br><span class="line"><span class="number">2</span>testhome: https://testerhome.com/topics</span><br><span class="line"><span class="number">3</span>马克飞象： https://maxiang.io/</span><br><span class="line"><span class="number">4.</span>github官网： https://github.com/xirong/my-git/blob/master/how-to-use-github.md</span><br><span class="line"><span class="number">5.</span>hexo官网： https://hexo.io/zh-cn/docs/</span><br><span class="line"><span class="number">6.</span>我的个人博客：https://cxy66yan.github.io/</span><br><span class="line"><span class="number">7.</span>Yapi官网：https://hellosean1025.github.io/yapi/documents/index.html</span><br><span class="line"><span class="number">8.</span>charles官网： https://www.charlesproxy.com/</span><br><span class="line"><span class="number">9.</span>http官网：https://www.w3.org/Protocols/</span><br><span class="line"><span class="number">10.</span>正则表达式调试工具：https://regex101.com/</span><br><span class="line"><span class="number">11.</span>在线ps图片： https://ps.gaoding.com/<span class="comment">#/?hmsr=zc-cc</span></span><br><span class="line"><span class="number">12.</span>tower的官方使用文档： https://tower.im/help/articles/<span class="number">8</span></span><br><span class="line"><span class="number">13.</span>postman接口测试文档：https://www.getpostman.com/</span><br><span class="line"><span class="number">14.</span>云测平台：https://www.testin.cn/realmachine/index.htm</span><br><span class="line"><span class="number">15.j</span>meter官网：http://jmeter.apache.org/</span><br><span class="line"><span class="number">16.</span>云测平台使用文档：https://support.testin.cn/portal/kb/articles/%E8%BF%<span class="number">9</span>C%E7%A8%<span class="number">8</span>B%E7%<span class="number">9</span>C%<span class="number">9</span>F%E6%<span class="number">9</span>C%BAfaq</span><br><span class="line"></span><br><span class="line"><span class="number">17.</span>移动自动化测试博客：https://sutune.me/<span class="number">2017</span>/<span class="number">07</span>/<span class="number">13</span>/autoTest-module/</span><br><span class="line"><span class="number">19.</span>测试开发工程师A的博客：https://www.yuque.com/miyang.meyoung</span><br><span class="line"><span class="number">20.</span>测试开发工程师B的博客: http://blog.sina.com.cn/eagleking0318</span><br><span class="line"><span class="number">21.</span>web自动化测试的博客： http://www.sitven.cn/</span><br><span class="line"><span class="number">22.</span>测试教程网：http://www.testclass.net/</span><br><span class="line"><span class="number">23.</span>测试窝：https://www.testwo.com/</span><br><span class="line"><span class="number">24.</span>FreeBug：https://www.freebuf.com/</span><br><span class="line"><span class="number">25.</span>酷壳：https://coolshell.cn/</span><br><span class="line"><span class="number">26.</span>有赞技术团队：https://tech.youzan.com/</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>测试网站</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用python进行验证码识别</title>
    <link href="undefined2020/01/14/%E4%BD%BF%E7%94%A8python%E8%BF%9B%E8%A1%8C%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/"/>
    <url>2020/01/14/%E4%BD%BF%E7%94%A8python%E8%BF%9B%E8%A1%8C%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<p>###百度<strong>OCR</strong>使用教程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>打开百度云网址：https://cloud.baidu.com/</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>点击进入管理控制台：https://console.bce.baidu.com</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>左侧导航栏–&gt;选择人工智能–&gt;选择文字识别；</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>点击创建应用–&gt;获取API KEY和SECRET KEY；</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span> 安装baidu-aip模块；（pip3 install Baidu-api）</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>调用aip模块中的AipOcr，输入参数ID，KEY 和SECRET</span><br><span class="line"></span><br><span class="line">(<span class="keyword">from</span> api <span class="keyword">import</span> ApiOcr</span><br><span class="line"></span><br><span class="line">APP_ID=‘’</span><br><span class="line"></span><br><span class="line">APi_KEY=‘’</span><br><span class="line">SECRET_KEY=‘’</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>定义get_file_content方法获取图片二进制内容，参数为图片路径</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>创建image对象，填写图片实际路径（用client下的basicGeneral获取识别信息words）</span><br></pre></td></tr></table></figure><h3 id="python自动识别web项目登录的验证码"><a href="#python自动识别web项目登录的验证码" class="headerlink" title="python自动识别web项目登录的验证码"></a>python自动识别web项目登录的验证码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipOcr</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app_id = <span class="string">'17990316'</span></span><br><span class="line">access_id = <span class="string">'0ef07eb536e0440c88281d627364430b'</span></span><br><span class="line">access_secret = <span class="string">'28ad15a4ae584d19aef3052a1bb940ec'</span></span><br><span class="line">client = AipOcr(app_id, access_id, access_secret)</span><br><span class="line">requests.packages.urllib3.disable_warnings()</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">browser.get(<span class="string">'http://xb-test.easylesson.cn/index.html#/login'</span>)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">options = &#123;&#125;</span><br><span class="line">options[<span class="string">"language_type"</span>] = <span class="string">"ENG"</span></span><br><span class="line">options[<span class="string">"detect_direction"</span>] = <span class="string">"true"</span></span><br><span class="line">options[<span class="string">"detect_language"</span>] = <span class="string">"true"</span></span><br><span class="line">options[<span class="string">"probability"</span>] = <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图片</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_content</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">return</span> fp.read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ocr</span><span class="params">(img_path)</span>:</span></span><br><span class="line">    image = get_file_content(img_path)</span><br><span class="line"></span><br><span class="line">    <span class="string">""" 带参数调用通用文字识别, 图片参数为本地图片 """</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#         return client.basicGeneral(image, options)['words_result'][0]['words']</span></span><br><span class="line">        <span class="keyword">return</span> client.basicAccurate(image, options)[<span class="string">'words_result'</span>][<span class="number">0</span>][<span class="string">'words'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'----'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># code_base_url表示验证码图片要放置的地址</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(code_base_url, username, password)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment">#     print(browser.current_url)</span></span><br><span class="line">        <span class="keyword">if</span> browser.current_url[<span class="number">-5</span>:] == <span class="string">'login'</span>:</span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[1]/div/div/input'</span>).clear()</span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[2]/div/div/input'</span>).clear()</span><br><span class="line">            browser.find_element_by_xpath(</span><br><span class="line">                <span class="string">'/html/body/div[1]/div/div/div[2]/form/div[3]/div/div/div[1]/div/input'</span>).clear()</span><br><span class="line"></span><br><span class="line">            browser.save_screenshot(<span class="string">f'<span class="subst">&#123;code_base_url&#125;</span>/all.png'</span>)</span><br><span class="line">            photo = browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[3]/div/div/div[2]/img'</span>)</span><br><span class="line">            <span class="comment"># x = photo.location['x']</span></span><br><span class="line">            <span class="comment"># y = photo.location['y']</span></span><br><span class="line">            x = <span class="number">2012</span></span><br><span class="line">            y = <span class="number">639</span></span><br><span class="line">            <span class="comment"># width = photo.size['width']</span></span><br><span class="line">            <span class="comment"># height = photo.size['height']</span></span><br><span class="line">            width = <span class="number">275</span></span><br><span class="line">            height = <span class="number">65</span></span><br><span class="line">            <span class="comment"># 打开图片  截图</span></span><br><span class="line">            im = Image.open(<span class="string">f'<span class="subst">&#123;code_base_url&#125;</span>/all.png'</span>)</span><br><span class="line">            im = im.crop((x, y, x + width, y + height))</span><br><span class="line">            im.save(<span class="string">f'<span class="subst">&#123;code_base_url&#125;</span>/code.png'</span>)</span><br><span class="line">            code = ocr(<span class="string">f'<span class="subst">&#123;code_base_url&#125;</span>/code.png'</span>)</span><br><span class="line">            code = code.replace(<span class="string">' '</span>, <span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[1]/div/div/input'</span>).send_keys(username)</span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div/div/div/div[2]/form/div[2]/div/div/input'</span>).send_keys(password)</span><br><span class="line">            browser.find_element_by_xpath(</span><br><span class="line">                <span class="string">'/html/body/div[1]/div/div/div[2]/form/div[3]/div/div/div[1]/div/input'</span>).send_keys(code)</span><br><span class="line">            browser.find_element_by_xpath(<span class="string">'/html/body/div[1]/div/div/div[2]/form/div[4]/div/button'</span>).click()</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    desktop_url = os.path.join(os.path.expanduser(<span class="string">'~'</span>), <span class="string">"Desktop"</span>)</span><br><span class="line">    login(desktop_url, <span class="string">'yukang'</span>, <span class="string">'yukang'</span>)</span><br><span class="line">    print(<span class="string">'hello world'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>识别验证码</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ocr</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python知识点.md</title>
    <link href="undefined2020/01/14/python%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <url>2020/01/14/python%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="Python介绍"><a href="#Python介绍" class="headerlink" title="Python介绍"></a>Python介绍</h2><h3 id="文本编辑器-Sublime"><a href="#文本编辑器-Sublime" class="headerlink" title="文本编辑器:Sublime"></a>文本编辑器:Sublime</h3><h3 id="Python代码规范"><a href="#Python代码规范" class="headerlink" title="Python代码规范"></a>Python代码规范</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Python官方提的代码规范文档俗称PEP8:https://www.python.org/dev/peps/pep<span class="number">-0008</span>/</span><br><span class="line">谷歌中对应的中文文档地址： — Google 开源项目风格指南.html</span><br></pre></td></tr></table></figure><h3 id="Python的口号：人生苦短，我用Python"><a href="#Python的口号：人生苦短，我用Python" class="headerlink" title="Python的口号：人生苦短，我用Python"></a>Python的口号：人生苦短，我用Python</h3><h3 id="编译器-amp-解释器"><a href="#编译器-amp-解释器" class="headerlink" title="编译器&amp;解释器"></a>编译器&amp;解释器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">编译器：计算机不能直接理解除机器语言以外的语言，将其他语言翻译成机器语言的工具成为编译器；</span><br><span class="line">编译器翻译的方式有两种，一种是编译，另一种是解释，两种方式之间的区别在于翻译时间点的不同，当编译器以解释方式运行时，也称之为解释器；</span><br></pre></td></tr></table></figure><h3 id="编译型语言和解释型语言的区别"><a href="#编译型语言和解释型语言的区别" class="headerlink" title="编译型语言和解释型语言的区别"></a>编译型语言和解释型语言的区别</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">编译型语言:c / c++</span><br><span class="line">特点: 执行速度快</span><br><span class="line">缺点: 跨平台性比较差</span><br><span class="line">    </span><br><span class="line">解释型语言:python</span><br><span class="line">特点: 跨平台性比较好( 在linux系统可以运行, 还可以在windows上运行)</span><br><span class="line">缺点: 执行速度比较慢(逐行解释每一句源代码)</span><br></pre></td></tr></table></figure><h3 id="Python语言的特点"><a href="#Python语言的特点" class="headerlink" title="Python语言的特点"></a>Python语言的特点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>完全面向对象(Python中一切皆对象)</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>具有强大的标准库(web网络通信, 数据库接口, 图形界面等)</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>具有很多的第三方库(科学计算, 人工智能, 数据分析, 机器学习等)</span><br></pre></td></tr></table></figure><h3 id="Python的优缺点"><a href="#Python的优缺点" class="headerlink" title="Python的优缺点"></a>Python的优缺点</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">优点:简单,易学；免费,开源(源代码公开)；面向对象；有丰富的库；可扩展性(可以调用C/C++语言,java语言的库)</span><br><span class="line">    </span><br><span class="line">缺点:执行速度较慢</span><br></pre></td></tr></table></figure><h3 id="Python环境部署"><a href="#Python环境部署" class="headerlink" title="Python环境部署"></a>Python环境部署</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">版本要求</span><br><span class="line">Pycharm：使用社区版或未破解版</span><br><span class="line">Python解释器：使用<span class="number">64</span>位<span class="number">3.6</span><span class="number">.6</span>以上的版本</span><br><span class="line"></span><br><span class="line">安装步骤：</span><br><span class="line"><span class="number">1.</span>下载Python解释器，鼠标右键，以管理员身份运行，是否允许程序对计算机进行修改：选择是；</span><br><span class="line"><span class="number">2.</span>安装时勾选添加系统环境变量（Add Path <span class="number">3.6</span> TO Path），选择自定义安装(Customize Installation);</span><br><span class="line"><span class="number">3.</span>Optional Fixtures页面默认选择，点击Next直接下一步；</span><br><span class="line"><span class="number">4.</span>Advanced Options页面，Browse自定义成C:\Python36,点击Install</span><br><span class="line"><span class="number">5.</span>安装结束点击close</span><br><span class="line"></span><br><span class="line">Python 解释器验证步骤:</span><br><span class="line">Mac:在终端中直接输入Python回车，如果有刚刚安装的解释器即安装成功</span><br><span class="line">Windows:</span><br><span class="line">    <span class="number">1</span>,开始菜单搜索“cmd”，启动 cmd</span><br><span class="line">    <span class="number">2.</span>输入 python回车</span><br><span class="line">    <span class="number">3.</span>如果有刚刚安装的解释器即安装成功</span><br></pre></td></tr></table></figure><h3 id="Python源程序概念"><a href="#Python源程序概念" class="headerlink" title="Python源程序概念"></a>Python源程序概念</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Python源程序就是一种特殊格式的文本文件，可以使用任意文本编辑器做Python开发；</span><br><span class="line">Python文件的扩展名通常都是.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实例：</span><br><span class="line"><span class="number">1.</span>在电脑上先创建任意一个格式的文本，然后将后缀改为.py；</span><br><span class="line"><span class="number">2.</span>用文本编辑器打开在文本中输入print(<span class="string">"sdfgg"</span>)保存；</span><br><span class="line"><span class="number">3.</span>在终端中将路径切换到改文件所在目录输入命令 python 文件名；</span><br></pre></td></tr></table></figure><h3 id="Pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">概念：Python的IDE(IDE:集成开发环境)</span><br><span class="line">工程名/项目名的命名规则：大驼峰或小驼峰(一个项目对应一个工程)</span><br><span class="line">文件名命名规则：小写字母，数字，下划线组成</span><br></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">单行注释：<span class="comment">#</span></span><br><span class="line"><span class="number">1.</span>在代码上方进行单行注释(<span class="comment">#与说明文字之间敲一个英文空格，保证代码的可读性)</span></span><br><span class="line"><span class="number">2.</span>在代码右边进行单行注释(注释与代码之间敲两个英文空格，保证代码的可读性)</span><br><span class="line">多行注释：<span class="string">"""注释的内容"""</span>o<span class="string">r'''注释的内容'''</span></span><br><span class="line"> 当代码需要的注释一行写不完的时候，用多行注释</span><br></pre></td></tr></table></figure><h3 id="多行同时右移，左移的快捷键"><a href="#多行同时右移，左移的快捷键" class="headerlink" title="多行同时右移，左移的快捷键"></a>多行同时右移，左移的快捷键</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>，先选中要缩进的代码</span><br><span class="line"><span class="number">2.</span>按tab键，一次缩进<span class="number">4</span>个空格；tab+shift键，左移<span class="number">4</span>个空格</span><br></pre></td></tr></table></figure><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ - * / //(取整除) %(取余) **(幂)</span><br><span class="line"></span><br><span class="line">优先级：先乘除后加减，同级从左向右开始计算，()可以改变计算顺序</span><br></pre></td></tr></table></figure><h3 id="计算机中的三大件"><a href="#计算机中的三大件" class="headerlink" title="计算机中的三大件"></a>计算机中的三大件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CPU：负责处理数据和计算</span><br><span class="line">内存：存储空间小，运行速度快，临时存储，价格高</span><br><span class="line">硬盘：存储空间大，运行速度慢，永久存储，价格低</span><br><span class="line">程序的执行过程：程序执行之前是保存在硬盘中，当要运行一个程序时，操作系统会先让CPU把程序复制到内存中，CPU执行内存中的程序代码</span><br></pre></td></tr></table></figure><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">程序是用来执行数据的，变量是用来存储数据的</span><br><span class="line"></span><br><span class="line">定义变量：变量名  = 值</span><br><span class="line"></span><br><span class="line">使用变量</span><br><span class="line">直接使用变量名</span><br><span class="line">print(变量名)</span><br><span class="line">注意：变量中数据值是可以修改的，变量名第一次出现叫做定义, 之后使用的变量名叫做使用定义后的变量</span><br><span class="line"></span><br><span class="line">python交互模式：</span><br><span class="line"><span class="number">1.</span>打开终端，输入Python回车</span><br><span class="line"><span class="number">2.</span>定义一个变量并给其赋值，回车</span><br><span class="line"><span class="number">3.</span>输入变量名，回车</span><br></pre></td></tr></table></figure><h3 id="变量的类型"><a href="#变量的类型" class="headerlink" title="变量的类型"></a>变量的类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>数字类型:int (整数类型)，float(浮点数类型)</span><br><span class="line">bool(布尔类型)</span><br><span class="line"> <span class="literal">True</span>  (真)  非<span class="number">0</span>数字</span><br><span class="line"> <span class="literal">False</span>(假)   数字<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>非数字类型:字符串(str)，列表(list)，元组( tuple )，字典 (dict)</span><br><span class="line">    </span><br><span class="line">type()函数可以查看变量或数据的类型</span><br><span class="line">使用方法：</span><br><span class="line">type(变量名)      </span><br><span class="line">type(数据)</span><br></pre></td></tr></table></figure><h3 id="变量之间的运算"><a href="#变量之间的运算" class="headerlink" title="变量之间的运算"></a>变量之间的运算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数字型的变量之间可以直接运算(运算时<span class="literal">True</span>=<span class="number">1</span>，<span class="literal">False</span>=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">非数字型：字符串可以相加, 就是字符串的拼接；int类型不能和str类型相加, 但是可以相乘, 让字符串重复指定的次数</span><br></pre></td></tr></table></figure><h3 id="变量的输入"><a href="#变量的输入" class="headerlink" title="变量的输入"></a>变量的输入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">price=int(input(<span class="string">'请输入苹果的价格：'</span>) ) <span class="comment"># input输入的内容为字符串，需要强转,将字符串转成整数</span></span><br><span class="line">weight=float(input(<span class="string">'请输入苹果的重量'</span>))  <span class="comment"># 将字符串转为小数</span></span><br><span class="line">money=price*weight</span><br><span class="line">print(money)</span><br><span class="line"></span><br><span class="line">int(x) 将x转换为int类型,但是 x 必须是整数型字符串</span><br><span class="line"></span><br><span class="line">float(x)  将x转换为float类型,但是 x 可以是整数和浮点数类型字符串</span><br><span class="line"></span><br><span class="line">str(x)  将x转换为字符串类型, 任何数据类型都可以转换为字符串类型</span><br></pre></td></tr></table></figure><h3 id="变量的格式化输出"><a href="#变量的格式化输出" class="headerlink" title="变量的格式化输出"></a>变量的格式化输出</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">%s 字符串</span><br><span class="line">%d 有符号⼗进制整数， %<span class="number">06</span>d 表示输出的整数显示位数， 不⾜的地⽅使⽤ <span class="number">0</span> 补全</span><br><span class="line">%f 浮点数， %<span class="number">.2</span>f 表示⼩数点后只显示两位</span><br><span class="line">%% 输出 % , 两个 %% 表示一个 %</span><br><span class="line">例子：我的名字叫：小明,身高:<span class="number">1.75</span>,体重:<span class="number">90</span>,成绩在全班排名:<span class="number">6.00</span>%</span><br><span class="line">name=<span class="string">"小明"</span></span><br><span class="line">height=<span class="number">1.75</span></span><br><span class="line">weight=<span class="number">90</span></span><br><span class="line">rank=<span class="number">6.00</span></span><br><span class="line">print(<span class="string">"我的名字叫：%s,身高:%.2f,体重:%d,成绩在全班排名:%.2f%%"</span> % (name,height,weight,rank))</span><br></pre></td></tr></table></figure><h3 id="标识符的命名规范"><a href="#标识符的命名规范" class="headerlink" title="标识符的命名规范"></a>标识符的命名规范</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">标示符是由程序员定义的变量和函数的名字，需要起到见名知意的效果，命名规范：</span><br><span class="line"> <span class="number">1.</span>要由字母,数字和下划线组成</span><br><span class="line"> <span class="number">2.</span>不能以数字开头</span><br><span class="line"> <span class="number">3.</span>不能和Python中的关键字重名(关键字:Python具有特殊含义的标识符, 具有特殊的功能和含义；不能对Python中的     关键字 进行赋值)</span><br><span class="line">在Pycharm中输入以下代码，可以查看Python中的关键字：</span><br><span class="line"><span class="keyword">import</span> keyword</span><br><span class="line">print(keyword.kwlist)</span><br></pre></td></tr></table></figure><h3 id="变量的命名规则"><a href="#变量的命名规则" class="headerlink" title="变量的命名规则"></a>变量的命名规则</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>符合标识符的命名规范</span><br><span class="line"><span class="number">2.</span>符合命名法则</span><br><span class="line">    ① 小驼峰命名法</span><br><span class="line">      (第一个单词首字母小写, 后面每个单词的首字母大写)</span><br><span class="line">    ② 大驼峰命名法</span><br><span class="line">      (每个单词的首字母都要大写)</span><br><span class="line">    ③ 下划线命名法</span><br><span class="line">      (每个单词都是小写字母, 单词与单词之间使用下划线连接)</span><br></pre></td></tr></table></figure><h3 id="IF语句"><a href="#IF语句" class="headerlink" title="IF语句"></a>IF语句</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##if...else条件判断语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>  条件判断:</span><br><span class="line">满足条件时,执行代码<span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">不满足条件时, 执行代码<span class="number">2</span></span><br><span class="line">    </span><br><span class="line">注：条件判断可以使用逻辑运算符(<span class="keyword">and</span>,<span class="keyword">or</span>,<span class="keyword">not</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##if...elif...else条件判断语句</span></span><br><span class="line"><span class="keyword">if</span> 条件判断<span class="number">1</span>:</span><br><span class="line">满足条件时, 执行代码<span class="number">1</span></span><br><span class="line">满足条件时, 执行代码<span class="number">2</span></span><br><span class="line"><span class="keyword">elif</span>  条件判断<span class="number">2</span>:</span><br><span class="line">满足条件时, 执行代码<span class="number">3</span></span><br><span class="line"><span class="keyword">elif</span>  条件判断<span class="number">3</span>:</span><br><span class="line">满足条件时, 执行代码<span class="number">4</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">上面条件都不满足, 则执行<span class="keyword">else</span>部分缩进的代码</span><br><span class="line"> </span><br><span class="line"><span class="comment">##if嵌套</span></span><br><span class="line">作用: 满足某个条件下, 进行额外的条件判断</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>  条件判断<span class="number">1</span>:</span><br><span class="line">满足条件<span class="number">1</span>, 执行代码</span><br><span class="line"><span class="keyword">if</span>  条件判断<span class="number">2</span>:</span><br><span class="line">满足条件<span class="number">2</span>, 执行代码</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">不满足条件<span class="number">2</span>时, 执行代码</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">不满足条件<span class="number">1</span>时, 执行代码</span><br><span class="line"></span><br><span class="line">注:  内层条件判断<span class="number">2</span>  必须满足在外层条件判断<span class="number">1</span>的基础上</span><br></pre></td></tr></table></figure><h3 id="随机数模块"><a href="#随机数模块" class="headerlink" title="随机数模块"></a>随机数模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>导入模块  <span class="keyword">import</span> random</span><br><span class="line"><span class="number">2.</span>使用 模块 random.randint(x,y)  </span><br><span class="line">  注：<span class="number">1.</span>random.敲一下tab键，会提示该模块中包含的所有函数</span><br><span class="line">     <span class="number">2.</span>取的数x&lt;=a&lt;=y,且x&lt;=y，都为整数</span><br></pre></td></tr></table></figure><h3 id="运算符-1"><a href="#运算符-1" class="headerlink" title="运算符"></a>运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>算数运算符</span><br><span class="line">  +,-, *,/, //(取整除), %（取余）, **(幂)</span><br><span class="line"><span class="number">2.</span>比较运算符</span><br><span class="line">  == (等于)</span><br><span class="line">  !=(不等)</span><br><span class="line">  &gt;</span><br><span class="line">  &lt;</span><br><span class="line">  &gt;=</span><br><span class="line">  &lt;=</span><br><span class="line">  比较运算符  常常和<span class="keyword">if</span>条件判断一起使用</span><br><span class="line"><span class="number">3.</span>赋值运算符</span><br><span class="line">  = </span><br><span class="line">  += , c += a 等效于 c = c + a</span><br><span class="line">  -=</span><br><span class="line">  *=</span><br><span class="line">  /=</span><br><span class="line">  //=</span><br><span class="line">  %=</span><br><span class="line">  **=, c **= a 等价于  c= c**a</span><br><span class="line"><span class="number">4.</span>逻辑运算符</span><br><span class="line">  <span class="keyword">and</span></span><br><span class="line">  <span class="keyword">or</span></span><br><span class="line">  <span class="keyword">not</span> </span><br><span class="line">  常常和<span class="keyword">if</span>条件判断一起使用</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>运算符的优先级:</span><br><span class="line">  算数运算符 &gt; 比较运算符 &gt; 赋值运算符  &gt; 逻辑运算符</span><br><span class="line">  运算符在一起使用时, 可以使用小括号() 调整运算符的优先级</span><br></pre></td></tr></table></figure><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>作用: 让指定的代码重复执行</span><br><span class="line"><span class="number">2.</span>语法格式:</span><br><span class="line">  ① 定义变量 记录循环次数(计数器)</span><br><span class="line">  ② <span class="keyword">while</span>  后面添加条件判断:</span><br><span class="line">  ③ 满足条件时,执行缩进部分的代码</span><br><span class="line">  ④ 在循环体内部修改变量, 便于下一次循环</span><br><span class="line"><span class="number">3.</span>死循环:</span><br><span class="line">  死循环是一种现象, 在循环体内部没有修改循环变量,</span><br><span class="line">  导致<span class="keyword">while</span> 后面的条件判断一直成立,</span><br><span class="line">  一直执行缩进部分的代码, 无法退出循环的现象</span><br><span class="line">  注意: 要避免死循环, 在循环体内部修改变量, 便于下一次循环</span><br><span class="line">        最终退出循环</span><br><span class="line"><span class="number">4.</span>循环体内部可以添加条件判断</span><br><span class="line"><span class="comment">##案例1：计算0-100之间所有数据的累计之和</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">100</span>:</span><br><span class="line">    sum+=i</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">print(sum)</span><br><span class="line"><span class="comment">##案例2：计算0-100之间所有偶数的累计之和</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">100</span>:</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">        sum+=i</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">print(sum)</span><br><span class="line"><span class="comment">##案例3：计算0-100之间所有奇数的累计之和</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">100</span>:</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span>!=<span class="number">0</span>:</span><br><span class="line">        sum+=i</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><h3 id="Python的计算法则"><a href="#Python的计算法则" class="headerlink" title="Python的计算法则"></a>Python的计算法则</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>自然计数法</span><br><span class="line">  从<span class="number">1</span>开始, 更符合人类的使用习惯</span><br><span class="line"><span class="number">2.</span>程序计数法</span><br><span class="line">  从<span class="number">0</span>开始, 更符合计算机编程的需求</span><br><span class="line">推荐使用 程序计数法, 符合计算机编程的需求</span><br></pre></td></tr></table></figure><h3 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">相似：两者都只能作用于当前循环</span><br><span class="line">区别：</span><br><span class="line"><span class="keyword">break</span>作用于循环:</span><br><span class="line"><span class="number">1.</span>满足某个条件时,提前终止循环</span><br><span class="line"><span class="number">2.</span>循环体中<span class="keyword">break</span>后面的语句不再执行</span><br><span class="line"><span class="keyword">continue</span>作用于循环:</span><br><span class="line"><span class="number">1.</span>满足条件时,并没有终止循环, 跳过本次循环,执行下一次循环</span><br><span class="line"><span class="number">2.</span>如果在修改循环变量,是在<span class="keyword">continue</span>关键字之后, 容易出现死循环(建议修改循环变量,放在<span class="keyword">continue</span>关键字之前)</span><br><span class="line"><span class="comment">##案例1</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">10</span>:</span><br><span class="line">    <span class="keyword">if</span> i==<span class="number">7</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(i)</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line"><span class="comment">##案例2</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">10</span>:</span><br><span class="line">    <span class="keyword">if</span> i==<span class="number">7</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(i)</span><br><span class="line">    i+=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="while循环嵌套"><a href="#while循环嵌套" class="headerlink" title="while循环嵌套"></a>while循环嵌套</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">作用场景: 排序和一些特殊场景(平面坐标)用到</span><br><span class="line"><span class="number">1.</span><span class="keyword">while</span>循环中嵌套<span class="keyword">while</span>循环</span><br><span class="line"><span class="number">2.</span>无论是外层循环还是内层循环,都要定义循环变量,记录循环次数</span><br><span class="line"><span class="number">3.</span>无论是外层循环还是内层循环,都要修改循环变量,便于下一次循环,最终退出循环</span><br><span class="line"><span class="number">4.</span>外层循环执行一次, 内层执行一圈</span><br><span class="line"><span class="number">5.</span>外层循环一般用来控制行(x轴)</span><br><span class="line">  内层循环一般用来控制列(y轴)</span><br><span class="line"><span class="comment">##案例1：打印五行小星星，每一行的星星数量跟行数相同</span></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">5</span>:</span><br><span class="line">    j=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j&lt;=i:</span><br><span class="line">        print(<span class="string">"* "</span>,end=<span class="string">""</span>)<span class="comment"># 在循环内部不换行</span></span><br><span class="line">        j+=<span class="number">1</span></span><br><span class="line">    print(<span class="string">""</span>)<span class="comment"># 每一次循环结束之后再进行换行</span></span><br><span class="line"> i+=<span class="number">1</span></span><br><span class="line"><span class="comment">##案例2：九九乘法表</span></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">9</span>:</span><br><span class="line">    j=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j&lt;=i:</span><br><span class="line">        <span class="comment">#print("j*i=i*j",end="")</span></span><br><span class="line">        print(<span class="string">"%dx%d=%d "</span> %(j,i,j*i),end=<span class="string">"\t"</span>)</span><br><span class="line">        j+=<span class="number">1</span></span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">   注：转义字符</span><br><span class="line">  end=<span class="string">""</span>:表示输出结束后不换行</span><br><span class="line">      end=<span class="string">"\t"</span>:可以在控制台输出一个制表符，使输出的文本垂直方向保持对齐</span><br><span class="line">     <span class="string">"\n"</span>:在控制台输出一个换行符</span><br><span class="line">    <span class="string">"\r"</span>:回车</span><br><span class="line">        \\:反斜杠符号</span><br><span class="line">         \<span class="string">":双引号</span></span><br><span class="line"><span class="string">         \'：单引号</span></span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>格式：</span><br><span class="line"><span class="function"><span class="keyword">def</span> 函数名<span class="params">()</span>:</span></span><br><span class="line">    封装的代码块</span><br><span class="line"> 注：<span class="function"><span class="keyword">def</span> 是英文<span class="title">define</span>的缩写；函数名需要符合标识符的命名规范且需要见名知意，函数名能够代表封装的代码功能，方便之后调用</span></span><br><span class="line"><span class="function">2.作用:</span> 实现某个功能的代码整体</span><br><span class="line"><span class="number">3.</span>定义函数, 把功能封装在函数中</span><br><span class="line"><span class="number">4.</span>调用函数, 享受封装的结果(函数名()就可以调用函数)</span><br></pre></td></tr></table></figure><h3 id="函数的使用"><a href="#函数的使用" class="headerlink" title="函数的使用"></a>函数的使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">函数的使用:</span><br><span class="line"><span class="number">1.</span>函数是具有独立功能的代码块,是一个整体(封装了函数功能的代码)</span><br><span class="line"><span class="number">2.</span>作用: 提高开发效率,实现代码的重用</span><br><span class="line"><span class="number">3.</span>函数使用的步骤:</span><br><span class="line">  ① 定义函数: 把函数的功能封装成一个整体</span><br><span class="line">  ② 调用函数: 享受封装的结果</span><br><span class="line"><span class="number">4.</span>函数调用流程注意点:</span><br><span class="line">  ① 函数定义时 不会执行函数体中代码</span><br><span class="line">  ② 函数调用时,才会执行函数体中代码</span><br><span class="line">  ③ 函数调用完成以后,一定要回到函数调用的地方继续向下执行</span><br></pre></td></tr></table></figure><h3 id="函数中Pycharm的使用规范"><a href="#函数中Pycharm的使用规范" class="headerlink" title="函数中Pycharm的使用规范"></a>函数中Pycharm的使用规范</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">F8 Step over:单步调试</span><br><span class="line">  ①  函数定义前面,没有加断点,调用函数时,把函数当成一行代码运行(不会进入函数体内部)</span><br><span class="line">  ②  函数定义前面,有加断点,调用函数时,会进入函数内部执行代码</span><br><span class="line">F7 Step into:单步进入</span><br><span class="line">  一步一步执行代码,调用函数时,会进入函数内部执行代码</span><br><span class="line">函数的注释小结:</span><br><span class="line"><span class="number">1.</span>作用: 对函数起到解释说明的作用,方便开发者阅读</span><br><span class="line"><span class="number">2.</span>在函数定义下方使用 <span class="string">"""函数注释"""</span>, 三个成对双引号中间内容就是函数的注释</span><br><span class="line"><span class="number">3.</span>将光标放在函数调用地方,按住 ctrl + q（Windows）键可以查看函数的注释说明</span><br><span class="line"></span><br><span class="line"><span class="comment">##注：函数相对比较独立，定义函数的上方应和其他代码块之间空两行</span></span><br></pre></td></tr></table></figure><h3 id="函数的形参，实参和返回值"><a href="#函数的形参，实参和返回值" class="headerlink" title="函数的形参，实参和返回值"></a>函数的形参，实参和返回值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##函数参数小结:</span></span><br><span class="line"><span class="number">1.</span>作用: 针对函数相同的处理逻辑,用户的需求不同,得到不同结果</span><br><span class="line"><span class="number">2.</span>在函数定义的时候,需要在函数括号中,添加参数, 在函数体中,将参数当做变量使用</span><br><span class="line"><span class="number">3.</span>在函数调用时,需要根据函数参数顺序,分别传入不同数据或变量</span><br><span class="line"><span class="comment">##函数的形参和实参:</span></span><br><span class="line"><span class="number">1.</span>形参: 定义函数时,用来接收函数调用传递过来的数据或变量,在函数体中函数形参当做变量一样使用</span><br><span class="line"><span class="number">2.</span>实参: 调用函数时,需要把传递给定义的函数体中变量或数据叫做实参</span><br><span class="line"><span class="comment">##函数的返回值:</span></span><br><span class="line"><span class="number">1.</span>作用: 当需要函数的运算结果时,需要函数的返回值</span><br><span class="line"><span class="number">2.</span>格式: <span class="keyword">return</span> 返回结果 </span><br><span class="line"><span class="number">3.</span><span class="keyword">return</span>可以将函数运行结果返回到函数调用的地方</span><br><span class="line"><span class="number">4.</span>函数体中<span class="keyword">return</span>后面的代码不再执行(可以使用<span class="keyword">return</span>提前终止函数的运行)</span><br><span class="line"><span class="number">5.</span>函数体中<span class="keyword">return</span> 后面没有返回结果,但是函数调用地方偏偏需要返回结果,</span><br><span class="line">  python解释器会把<span class="literal">None</span>返回(什么都没有,与MySQL中NULL相似)</span><br><span class="line"> 例<span class="number">1</span>：计算任意两个数之和</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum2_num</span><span class="params">(num1,num2)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> num1+num2</span><br><span class="line">result=sum2_num(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">print(<span class="string">"两数之和：%d"</span>% result)</span><br></pre></td></tr></table></figure><h3 id="函数的嵌套调用"><a href="#函数的嵌套调用" class="headerlink" title="函数的嵌套调用"></a>函数的嵌套调用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##案例1：一个函数中嵌套另一个函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"*"</span>*<span class="number">10</span>)</span><br><span class="line">    print(<span class="string">"test1"</span>)</span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">10</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">20</span>)</span><br><span class="line">    print(<span class="string">"test2"</span>)</span><br><span class="line">    test1()</span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">20</span>)</span><br><span class="line">test2()</span><br><span class="line"><span class="comment">##案例2：打印五行，任意字符任意次数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_line</span><span class="params">(char,times)</span>:</span></span><br><span class="line">    row=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> row&lt;<span class="number">5</span>:</span><br><span class="line">        print(char*times)</span><br><span class="line">        row+=<span class="number">1</span></span><br><span class="line">print_line(<span class="string">"*"</span>,<span class="number">20</span>)</span><br></pre></td></tr></table></figure><h3 id="模块中的函数"><a href="#模块中的函数" class="headerlink" title="模块中的函数"></a>模块中的函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>作用: 可以将python文件当做模块,供其他开发者导入使用</span><br><span class="line"><span class="number">2.</span>使用步骤:</span><br><span class="line">  ① 导入模块</span><br><span class="line">    <span class="keyword">import</span> 模块名</span><br><span class="line">  ② 使用模块中函数或变量 </span><br><span class="line">    模块名.函数名(参数)    模块名.变量</span><br><span class="line"><span class="number">3.</span>模块名要符合标识符的命名规范</span><br><span class="line"><span class="number">4.</span>注意: 我们可以将功能稳定的代码封装到模块中,供其他人使用</span><br><span class="line">    </span><br><span class="line">实例：</span><br><span class="line">file01.py中的代码</span><br><span class="line">name=<span class="string">"加法"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line">file02.py调用file01.py中的函数和变量</span><br><span class="line"><span class="keyword">from</span> study01 <span class="keyword">import</span> add, name</span><br><span class="line"></span><br><span class="line">result=add(<span class="number">10</span>,<span class="number">20</span>)</span><br><span class="line">print(result)</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure><h3 id="查看某类型中定义的方法"><a href="#查看某类型中定义的方法" class="headerlink" title="查看某类型中定义的方法"></a>查看某类型中定义的方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>在Pycharm的终端中先输入python3</span><br><span class="line"><span class="number">2.</span>dir(list/tuple/dict/str),按下回车</span><br><span class="line"><span class="number">3.</span>会提示列表/元组/字典/字符串能够使用的方法</span><br></pre></td></tr></table></figure><p>###对列表的常见操作——增删改查</p><h4 id="增"><a href="#增" class="headerlink" title="增"></a>增</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>列表.insert(索引, 数据) 在指定位置插入数据</span><br><span class="line"><span class="number">2.</span>列表.append(数据) 在末尾追加数据</span><br><span class="line"><span class="number">3.</span>列表.extend(列表<span class="number">2</span>) 将列表<span class="number">2</span> 的数据追加到列表 (把 列表<span class="number">2</span>合并到列表<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h4 id="删"><a href="#删" class="headerlink" title="删"></a>删</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>删除 <span class="keyword">del</span> 列表[索引] 删除指定索引的数据</span><br><span class="line">  拓展: <span class="keyword">del</span>  my_list  将列表my_list从内存中清除, 连空书包都没有</span><br><span class="line"><span class="number">2.</span>列表.remove(数据) 删除第一个出现的指定数据</span><br><span class="line"><span class="number">3.</span>列表.pop() 删除末尾数据</span><br><span class="line"><span class="number">4.</span>列表.pop(索引) 删除指定索引数据</span><br><span class="line"><span class="number">5.</span>列表.clear() 清空列表</span><br></pre></td></tr></table></figure><h4 id="改"><a href="#改" class="headerlink" title="改"></a>改</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 列表[索引] = 数据 修改指定索引的数据</span><br></pre></td></tr></table></figure><h4 id="查"><a href="#查" class="headerlink" title="查"></a>查</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查</span><br><span class="line"> <span class="number">1.</span>列表[索引]  通过索引获取数据</span><br><span class="line"> <span class="number">2.</span>列表名.index(数据)  通过数据获取 索引(获取的是数据第一次出现索引)  </span><br><span class="line"> <span class="number">3.</span>统计 len(列表) 列表长度</span><br><span class="line"> <span class="number">4.</span>列表.count(数据) 数据在列表中出现的次数</span><br><span class="line"> <span class="number">5.</span>排序 列表.sort() 升序排序</span><br><span class="line"> <span class="number">6.</span>降序 列表.sort(reverse=<span class="literal">True</span>) 降序排序</span><br><span class="line"> <span class="number">7.</span>列表.reverse() 逆序、 反转(前面的额数据放到后面, 后面的数据放到前面)</span><br></pre></td></tr></table></figure><h2 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>循环:</span><br><span class="line"><span class="number">1.</span>作用: 用来遍历列表容器(元组,字符串,字典)</span><br><span class="line">        <span class="keyword">for</span>循环可以将列表中数据一个一个取出</span><br><span class="line"><span class="number">2.</span>语法:</span><br><span class="line">  <span class="keyword">for</span>  临时变量  <span class="keyword">in</span>  集合:</span><br><span class="line">        对临时变量的处理</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    循环结束后要执行的代码</span><br><span class="line">实例<span class="number">1</span>：</span><br><span class="line">list1=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    print(i)</span><br><span class="line">实例<span class="number">2</span>：</span><br><span class="line">list1=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list2:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>创建空元组</span><br><span class="line">info_tuple=()</span><br><span class="line"><span class="number">2.</span>创建只含有一个元素的元组，需要在元素后面添加逗号</span><br><span class="line">info_tuple=(<span class="number">1</span>,)</span><br><span class="line"></span><br><span class="line">不能进行修改的操作</span><br></pre></td></tr></table></figure><h3 id="元组合列表之间的相互转换"><a href="#元组合列表之间的相互转换" class="headerlink" title="元组合列表之间的相互转换"></a>元组合列表之间的相互转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list(元组)  <span class="comment"># 将元组转换成列表</span></span><br><span class="line">tuple(列表) <span class="comment"># 将列表转换成元组</span></span><br></pre></td></tr></table></figure><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>字典是用来存储数据的一种容器(一般用来存储事物详细信息的容器)</span><br><span class="line"><span class="number">2.</span>通过键值对的方式来存储数据的</span><br><span class="line"><span class="number">3.</span>语法格式:  字典名 = &#123;key1:value1, key2:value2, key3:value3 ...&#125;</span><br><span class="line">    空字典:  字典名 = &#123;&#125;</span><br><span class="line"><span class="number">4.</span>字典的类型  dict</span><br><span class="line"><span class="number">5.</span>字典的键 和 值 的数据格式</span><br><span class="line">  字典的键(key) 只能是除了 列表 和 字典以外的任意数据类型 </span><br><span class="line">  字典的value值可以是任意数据 类型</span><br><span class="line"><span class="number">6.</span>字典中的数据是无序,列表中数据有序</span><br><span class="line"><span class="number">7.</span>访问字典的数据</span><br><span class="line">  通过key获取值   </span><br><span class="line">  格式: 字典名[key]</span><br></pre></td></tr></table></figure><h4 id="增-改"><a href="#增-改" class="headerlink" title="增/改"></a>增/改</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">① 字典名[key] = value,  </span><br><span class="line">  key存在,修改数据,  </span><br><span class="line">  key不存在, 新建键值对</span><br><span class="line">② 字典名.setdefault(key, value)   </span><br><span class="line">  key存在,不修改数据,(使用默认值), </span><br><span class="line">  key不存在, 新建键值对</span><br><span class="line">③ 字典<span class="number">1</span>名.update(字典<span class="number">2</span>)   <span class="comment"># 把字典2合并到字典1中去,  </span></span><br><span class="line">  字典<span class="number">1</span>中 key存在,更新数据,  </span><br><span class="line">  字典<span class="number">1</span>中 key不存在, 新建键值对</span><br></pre></td></tr></table></figure><h4 id="删-1"><a href="#删-1" class="headerlink" title="删"></a>删</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">①  <span class="keyword">del</span>  字典名[key] </span><br><span class="line">    key存在, 删除 key对应的键值对</span><br><span class="line">    key不存在,报错</span><br><span class="line">② 字典名.pop(key)</span><br><span class="line">    key存在, 删除 key对应的键值对</span><br><span class="line">    key不存在,报错</span><br><span class="line">③ 字典名.popitem()   随机删除键值对</span><br><span class="line">④ 字典名.clear()   把字典内容清空(字典结构依然存在)</span><br></pre></td></tr></table></figure><h4 id="查-1"><a href="#查-1" class="headerlink" title="查"></a>查</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">① 字典名[key]       </span><br><span class="line">  key存在 正常取值, </span><br><span class="line">  key不存在,报错 (报错后面的代码不再执行)</span><br><span class="line">② 字典名.get(key)   </span><br><span class="line">  key存在 正常取值, </span><br><span class="line">  key不存在,不会报错, 返回 <span class="literal">None</span> (报错后面的代码可以继续执行)</span><br></pre></td></tr></table></figure><h3 id="字典的高级用法"><a href="#字典的高级用法" class="headerlink" title="字典的高级用法"></a>字典的高级用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.l</span>en(字典名)  获取的字典中键值对的个数</span><br><span class="line"><span class="number">2.</span>高级用法</span><br><span class="line">  ① 字典名.keys()    获取所有的键(key) 组成的特殊的列表</span><br><span class="line">  ② 字典名.values()  获取所有的值(value) 组成的特殊的列表</span><br><span class="line">  ③ 字典名.items()   获取所有的键(key)和值(value) 组成元组, 元组组成的特殊的列表</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>作用: 就像列表一样用来存储数据的一种容器,主要是用来存储文本数据</span><br><span class="line"><span class="number">2.</span>列表是序列化的容器, 字符串也是序列化的容器(支持索引访问)</span><br><span class="line"><span class="number">3.</span>定义字符串的格式:</span><br><span class="line">  ① 字符串名 = <span class="string">"xxx"</span>  或 字符串名 = <span class="string">'xxx'</span></span><br><span class="line">  ② 字符串名 = <span class="string">"""xxx"""</span>  或 字符串名 = <span class="string">'''xxx'''</span></span><br><span class="line"><span class="number">4.</span>访问字符串的数据</span><br><span class="line">  通过索引访问数据  </span><br><span class="line">  格式:  字符串名[索引]      </span><br><span class="line">  注意:  使用索引访问数据时,不要越界</span><br><span class="line"><span class="number">5.</span>字符串常见使用操作</span><br><span class="line">  <span class="comment"># 访问字符串</span></span><br><span class="line">  ① 通过索引访问数据  字符串名[索引]</span><br><span class="line">  ② 通过数据获取索引  字符串名.index(小字符串)  获取小字符串在大字符串中第一次出现索引位置</span><br><span class="line">  拓展: 通过索引访问数据 ,不能修改字符串中数据</span><br><span class="line">  <span class="comment"># 统计</span></span><br><span class="line">  获取字符串的长度 len(字符串名)</span><br><span class="line">  获取大的字符串中小字符串的个数  字符串名.count(小字符串) </span><br><span class="line"><span class="number">6.</span>可以使用<span class="keyword">for</span>循环遍历字符串</span><br><span class="line"><span class="number">7.</span>字符串常见方法操作_判断类型</span><br><span class="line"><span class="number">8.</span>字符串判断类型的方法有很多，常用的有str.isspace(),str.isdigit(),str.islower(),str.isupper()</span><br><span class="line"><span class="number">9.</span>字符串的查找和替换方法中,str.startswith(substr),str.endswith(substr),str.find(substr),str.replace(old_str,new_str,num=string.count(old))</span><br><span class="line"><span class="number">10.</span>字符串的大小写转换中,常用的方法str.title(),str.lower(),str.upper()</span><br><span class="line"><span class="number">11.</span>字符串可以使用str.ljust(width)和str.rjust(width)实现文本对齐,str.center(width)实现字符串文本居中</span><br><span class="line"><span class="number">12.</span>字符串去空白字符,常常使用str.lstrip(),str.rstrip(),str.strip()</span><br><span class="line"><span class="number">13.</span>字符串常见的切分和拼接,str.split(substr,count)切分,str.splitlines()按行切分, new_str.join(str)字符串拼接</span><br><span class="line"><span class="number">14.</span>字符串是不可变对象,一般使用提供方法的修改</span><br></pre></td></tr></table></figure><h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">适用范围：字符串，列表，元组</span><br><span class="line"><span class="comment">##字符串的切片</span></span><br><span class="line"><span class="number">1.</span>作用:从大字符串中切出小字符串</span><br><span class="line"><span class="number">2.</span>格式: 字符串[开始索引 : 结束索引: 步长 ]</span><br><span class="line"></span><br><span class="line">  包含开始位置索引, 不包含结束位置索引  [开始索引,  结束索引)</span><br><span class="line"></span><br><span class="line">  步长默认是正<span class="number">1</span>,可以省略, 步长前面的冒号可以省略</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>正序切片,从左往右,开始位置索引就是字符串开头,则开始位置索引可以省略</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>正序切片,从左往右,结束位置索引就是字符串末尾,则结束位置索引可以省略</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>正序切片,从左往右,默认步长为正<span class="number">1</span>,则默认步长可以省略</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>正序切片,从左往右,默认步长为正<span class="number">1</span>,则默认步长可以省略, 步长前面冒号也可以省略</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>倒序切片,从右往左,如果开始索引就是字符串的末尾, 则开始索引可以省略, 开始索引为<span class="number">-1</span>，步长为<span class="number">-1</span>,步长不能省略</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>当索引涉及到字符串的边界时,才可以考虑省略索引</span><br></pre></td></tr></table></figure><h2 id="Python种常见的内置函数"><a href="#Python种常见的内置函数" class="headerlink" title="Python种常见的内置函数"></a>Python种常见的内置函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.l</span>en()函数可以获取容器中元素的个数(获取字典中键值对的个数)</span><br><span class="line"><span class="number">2.</span><span class="keyword">del</span>()可以删除容器中指定的元素,可以使用关键字<span class="keyword">del</span> 容器,还是可以使用<span class="keyword">del</span>()函数,</span><br><span class="line">    注意:<span class="keyword">del</span>删除目前只是支持列表,还支持字典</span><br><span class="line"><span class="number">3.</span>max()求取容器中元素最大值,如果遇到字符串,则获取的是字符对应的ASCII的最大值</span><br><span class="line"><span class="number">4.</span>min()求取容器中元素最小值,如果遇到字符串,则获取的是字符对应的ASCII的最小值</span><br></pre></td></tr></table></figure><h2 id="变量及函数的高阶用法"><a href="#变量及函数的高阶用法" class="headerlink" title="变量及函数的高阶用法"></a>变量及函数的高阶用法</h2><h3 id="查看变量地址的函数"><a href="#查看变量地址的函数" class="headerlink" title="查看变量地址的函数"></a>查看变量地址的函数</h3><p>id(变量)</p><p>###可变类型和不可变类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">可变类型：列表，字典(里面的数据可以进行修改)</span><br><span class="line">不可变类型：列表，字符串，数字类型(int,float,bool)</span><br></pre></td></tr></table></figure><h3 id="局部变量和全局变量"><a href="#局部变量和全局变量" class="headerlink" title="局部变量和全局变量"></a>局部变量和全局变量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">局部变量：定义在函数内部的变量，不同的函数中变量名可以重复，不受影响</span><br><span class="line">全局变量：定义在所有函数外部的变量，函数内部不能修改，函数内部如果想修改全局变量需要在变量前面加一个<span class="keyword">global</span>声明，一般在开发中不用全局变量，如果用的话一些公司规定在命名全部变量的前面加上g_或gl_</span><br><span class="line"><span class="comment">##案例1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span><span class="params">(num,num_list)</span>:</span></span><br><span class="line">    print(<span class="string">"函数内部代码"</span>)</span><br><span class="line">    num+=num</span><br><span class="line">    <span class="comment"># num_list.extend(num_list),函数执行结束后，外部数据同样会发生变化</span></span><br><span class="line">    num_list+=num_list</span><br><span class="line">    print(<span class="string">"内部函数完成"</span>)</span><br><span class="line">g_num=<span class="number">9</span></span><br><span class="line">g_num_list=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">demo(g_num,g_num_list)</span><br><span class="line">print(g_num)</span><br><span class="line">print(g_num_list)</span><br></pre></td></tr></table></figure><h3 id="函数的高阶用法"><a href="#函数的高阶用法" class="headerlink" title="函数的高阶用法"></a>函数的高阶用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">函数有几个返回值需要找几个变量接收</span><br><span class="line"><span class="comment">##缺省参数</span></span><br><span class="line"><span class="number">1.</span>概念：定义函数时，可以给某个参数指定一个默认值，具有默认值的参数就叫缺省参数</span><br><span class="line"><span class="number">2.</span>作用：调用函数的时候，如果没有给缺省参数传值，则在函数内部使用定义函数时指定的参数值，如果调用函数时传值，则函数内部使用传入的缺省参数的值</span><br><span class="line"><span class="number">3.</span>一般将常用的值设置为缺省参数，如果参数的值不确定，不介意设置缺省参数值</span><br><span class="line"><span class="comment">###缺省参数的注意事项：</span></span><br><span class="line"><span class="number">1.</span>带有默认值的缺省参数，在参数列表末位</span><br><span class="line">eg:<span class="function"><span class="keyword">def</span> <span class="title">test01</span><span class="params">(a,b=<span class="number">2</span>)</span></span></span><br><span class="line"><span class="function">2.调用函数时如果有多个缺省参数，最好指定参数名，这样解释器才能知道参数的对应关系</span></span><br><span class="line"><span class="function"><span class="title">eg</span>:</span><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(a,b=<span class="number">1</span>,c=<span class="number">2</span>)</span>:</span></span><br><span class="line">    print(<span class="string">"我是%d"</span> % b)</span><br><span class="line">    print(<span class="string">"我是%d"</span> % c)</span><br><span class="line">test(<span class="number">3</span>,b=<span class="number">4</span>,c=<span class="number">5</span>)</span><br><span class="line"><span class="comment">##多值参数</span></span><br><span class="line"><span class="number">1.</span>命名：多值参数命名时，习惯</span><br><span class="line">*args:存放元祖参数；**kwargs:存放字典参数</span><br><span class="line">案例<span class="number">1</span>:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(a,*args,**kwargs)</span>:</span></span><br><span class="line">    print(a)</span><br><span class="line">    print(args)</span><br><span class="line">    print(kwargs)</span><br><span class="line">test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,name=<span class="string">"小明"</span>,age=<span class="number">18</span>)</span><br><span class="line">案例<span class="number">2</span>：计算任意多个数字的和</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_number</span><span class="params">(*args)</span>:</span></span><br><span class="line">    sum=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> args:</span><br><span class="line">        sum+=i</span><br><span class="line">    print(sum)</span><br><span class="line">sum_number(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">###字典和元组的拆包</span></span><br><span class="line">作用：需要给元组/字典变量传递给函数指定的参数时使用</span><br><span class="line">案例：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_number</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">    print(args)</span><br><span class="line">    print(kwargs)</span><br><span class="line">g_num=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">g_info=&#123;<span class="string">"name"</span>:<span class="string">"小明"</span>,<span class="string">"age"</span>:<span class="number">19</span>&#125;</span><br><span class="line">sum_number(*g_num,**g_info)</span><br></pre></td></tr></table></figure><h3 id="函数的递归"><a href="#函数的递归" class="headerlink" title="函数的递归"></a>函数的递归</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>概念：函数调用自身的编程技巧称为递归</span><br><span class="line"><span class="number">2.</span>特点：一个函数内部调用自己</span><br><span class="line"><span class="number">3.</span>代码特点：函数内部的代码是相同的，知识针对参数不同函数处理结果不同，当参数满足一个条件时函数不再执行</span><br><span class="line">实例<span class="number">1</span>：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_number</span><span class="params">(num)</span>:</span></span><br><span class="line">    print(num)</span><br><span class="line">    <span class="keyword">if</span> num==<span class="number">1</span>: <span class="comment"># 递归函数的出口</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    sum_number(num<span class="number">-1</span>)</span><br><span class="line">sum_number(<span class="number">3</span>)</span><br><span class="line">案例<span class="number">2</span>：计算<span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span>+<span class="number">5</span>+....+sum</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_number</span><span class="params">(num)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> num==<span class="number">1</span>: <span class="comment"># 递归函数的出口</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    tempt=sum_number(num<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> num+tempt</span><br><span class="line"></span><br><span class="line">result=sum_number(sum)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语句：<span class="keyword">lambda</span> arg1,arg2,arg3,....argn:表达式</span><br><span class="line">实例：</span><br><span class="line">sum=<span class="keyword">lambda</span> a,b:a+b</span><br><span class="line">print(<span class="string">"result=%s"</span> % sum(<span class="number">1</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="文件的概念"><a href="#文件的概念" class="headerlink" title="文件的概念"></a>文件的概念</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##文件:</span></span><br><span class="line"><span class="number">1.</span>计算机中文件,就是存储在持久存储设备(长期存储设备)上的数据</span><br><span class="line"><span class="number">2.</span>长期存储设备:硬盘,U盘,移动硬盘,光盘</span><br><span class="line"><span class="number">3.</span>将数据长期的保存下来,在需要的时候使用</span><br><span class="line"></span><br><span class="line"><span class="comment">##文件的存储方式:</span></span><br><span class="line">计算机中文件的数据,最终都是以二进制的格式来保存的</span><br><span class="line"></span><br><span class="line"><span class="comment">##文件分类</span></span><br><span class="line"><span class="number">1.</span>文本文件</span><br><span class="line">  可以使用文本编辑器打开的文件</span><br><span class="line">  .txt文件, .py文件</span><br><span class="line">  本质上还是二进制文件(最终都要保存到硬盘上)</span><br><span class="line"><span class="number">2.</span>二进制文件</span><br><span class="line">  不能使用文本编辑器打开,可以使用专门的软件打开的文件</span><br><span class="line">  图片文件(.jpg,.png,.gif) 音视频文件, excel文件</span><br></pre></td></tr></table></figure><h3 id="操作文件的1函数3方法"><a href="#操作文件的1函数3方法" class="headerlink" title="操作文件的1函数3方法"></a>操作文件的1函数3方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">操作文件的流程:</span><br><span class="line"><span class="number">1.</span>打开文件</span><br><span class="line"><span class="number">2.</span>操作文件</span><br><span class="line">  读  把文件内容读取到内存</span><br><span class="line">  写  把内存中数据写入到文件中  (文件放在硬盘上)</span><br><span class="line"><span class="number">3.</span>关闭文件</span><br><span class="line"></span><br><span class="line">操作文件的函数/方法:</span><br><span class="line"><span class="number">1.</span>open()函数:</span><br><span class="line">  作用: 打开文件</span><br><span class="line">  文件存在,正常打开, 返回文件操作对象</span><br><span class="line">  文件不存在,报错</span><br><span class="line">  说明: windows系统打开文件时,需要指定编码格式  encoding=<span class="string">"utf-8"</span></span><br><span class="line">        linux/unix 系统 打开文件时,不需要指定编码格式(默认就是utf<span class="number">-8</span>编码)</span><br><span class="line"><span class="number">2.</span>read() 方法</span><br><span class="line">  作用: 读取文件的内容 一次性全部读取</span><br><span class="line"><span class="number">3.</span>close() 方法</span><br><span class="line">  作用: 关闭文件  造成系统资源的浪费 (一个运行的程序最多打开<span class="number">1024</span>个文件)</span><br><span class="line">案例：</span><br><span class="line"><span class="comment"># 1.打开文件</span></span><br><span class="line">file=open(<span class="string">"文件名"</span>) <span class="comment"># 如果不在当前目录需要加上文件路径</span></span><br><span class="line"><span class="comment">#读文件</span></span><br><span class="line">file.read()</span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><h2 id="打开文件的三种方式"><a href="#打开文件的三种方式" class="headerlink" title="打开文件的三种方式"></a>打开文件的三种方式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">打开文件的三种方式:</span><br><span class="line"><span class="string">"r"</span> : 只读</span><br><span class="line"> 文件存在, 从开头读</span><br><span class="line">文件不存在, 报错</span><br><span class="line"></span><br><span class="line"><span class="string">"w"</span>: 只写</span><br><span class="line">文件存在, 覆盖</span><br><span class="line">文件不存在, 新建</span><br><span class="line"></span><br><span class="line"><span class="string">"a"</span>: 追加</span><br><span class="line">文件存在,在文件末尾追加数据</span><br><span class="line">文件不存在,新建</span><br><span class="line"></span><br><span class="line">注意: 频繁移动文件指针会降低文件读写效率,一般情况使用只读或只写方式打开文件</span><br><span class="line">    </span><br><span class="line">readline() 方法 </span><br><span class="line">作用: 一次读取一行, 读取完成以后把文件指针移动文件的下一行</span><br><span class="line">为了读取大文件内容,需要和配合<span class="keyword">while</span> <span class="literal">True</span>一起使用</span><br><span class="line">实例：大文件按行读取</span><br><span class="line"><span class="comment"># 1.打开文件</span></span><br><span class="line">file=open(<span class="string">"cards_main.py"</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 2.按行读取文件</span></span><br><span class="line">    text=file.readline()</span><br><span class="line">    <span class="comment"># 3.判断是否读到内容</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 每读取一行的末位已经有一个换行符"\n"</span></span><br><span class="line">    print(text,end=<span class="string">""</span>)</span><br><span class="line"><span class="comment"># 4.关闭文件</span></span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line">案例<span class="number">2</span>：文件复制</span><br><span class="line"><span class="comment"># 1.打开文件</span></span><br><span class="line">file=open(<span class="string">"文件"</span>)</span><br><span class="line">file_write=open(<span class="string">"文件_复制"</span>,<span class="string">"w"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.读取文件并写入文件</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    text=file.readline()</span><br><span class="line">    <span class="comment"># 3.判断是否读到内容</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    file_write.write(text)</span><br><span class="line"><span class="comment"># 4.关闭文件</span></span><br><span class="line">file.close()</span><br><span class="line">file_write.close()</span><br></pre></td></tr></table></figure><h3 id="OS的基本用法"><a href="#OS的基本用法" class="headerlink" title="OS的基本用法"></a>OS的基本用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">os模块操作文件:</span><br><span class="line"><span class="number">1.</span>rename 重命名文件, os.rename(源文件名, 目标文件名)</span><br><span class="line">  rename还可以重命名文件夹</span><br><span class="line"><span class="number">2.</span>remove 删除文件, os.remove(文件名)</span><br><span class="line">  可以指定路径去删除文件</span><br><span class="line"></span><br><span class="line">  os模块中对文件夹的操作</span><br><span class="line"><span class="comment"># 01 listdir 获取目录列表  os.listdir(目录名)</span></span><br><span class="line">获取的是指定目录下的所有的文件和文件夹, 以列表的格式保存</span><br><span class="line"><span class="number">02</span> mkdir 创建目录 os.mkdir(目录名) </span><br><span class="line">   <span class="comment"># 可以指定路径创建目录</span></span><br><span class="line"><span class="number">03</span> rmdir 删除目录 os.rmdir(目录名)</span><br><span class="line">   注意: rmdir 只能删除空目录</span><br><span class="line">   注意: 可以使用  shutil模块中rmtree() 删除非空目录</span><br><span class="line"><span class="number">04</span> getcwd 获取当前目录 os.getcwd()</span><br><span class="line"><span class="number">05</span> chdir 修改工作目录 os.chdir(目标目录)</span><br><span class="line"><span class="number">06</span> path.isdir 判断是否是文件夹   os.path.isdir(文件夹路径)</span><br><span class="line">是文件夹  返回<span class="literal">True</span></span><br><span class="line">不是文件夹  返回<span class="literal">False</span></span><br><span class="line"><span class="number">07</span> path.exists(目录/文件)   判断指定的目录或文件是否存在,  存在 返回<span class="literal">True</span>, 否则返回<span class="literal">False</span></span><br><span class="line"></span><br><span class="line">案例<span class="number">1</span>：批量创建文件重命名文件</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">批量修改文件名</span></span><br><span class="line"><span class="string"> 1.创建一个目录在该目录下创建20个文件</span></span><br><span class="line"><span class="string">2.将这20个文件重命民</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.mkdir(<span class="string">'A'</span>) <span class="comment"># 创建目录</span></span><br><span class="line">os.chdir(<span class="string">'./A'</span>) <span class="comment"># 修改目录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_file</span><span class="params">()</span>:</span></span><br><span class="line">    i=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i&lt;=<span class="number">20</span>:</span><br><span class="line">        file=open(<span class="string">"file"</span>+str(i),<span class="string">'w'</span>)</span><br><span class="line">        file.write(<span class="string">'我命由我不由天'</span>)</span><br><span class="line">        file.close()</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rename_file</span><span class="params">()</span>:</span></span><br><span class="line">    dic_file=os.listdir() <span class="comment"># 获取文件列表</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> dic_file:</span><br><span class="line">        os.rename(name,<span class="string">'[rename]'</span>+name)</span><br><span class="line">create_file()</span><br><span class="line">rename_file()</span><br></pre></td></tr></table></figure><h3 id="os的高级用法"><a href="#os的高级用法" class="headerlink" title="os的高级用法"></a>os的高级用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">- [ ] Import os，<span class="comment">#导入标准库os模块，利用其中的API</span></span><br><span class="line">python路径拼接os.path.join()函数的用法</span><br><span class="line">os.path.join()函数：连接两个或更多的路径名组件</span><br><span class="line">   <span class="number">1.</span>如果各组件名首字母不包含’/’，则函数会自动加上</span><br><span class="line">　<span class="number">2.</span>第一个以”/”开头的参数开始拼接，之前的参数全部丢弃,当有多个时，从最后一个开始</span><br><span class="line">　<span class="number">3.</span>如果最后一个组件/为空，则生成的路径以一个’/’分隔符结尾</span><br><span class="line"></span><br><span class="line">print(<span class="string">"2:"</span>,os.path.join(<span class="string">'/aaaa'</span>,<span class="string">'/bbbb'</span>,<span class="string">'/ccccc.txt'</span>)) <span class="comment">#不良写法习惯</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="number">2</span>: /ccccc.txt</span><br><span class="line"></span><br><span class="line">print(<span class="string">"22:"</span>,os.path.join(<span class="string">'/aaaa/'</span>,<span class="string">'bbbb/'</span>,<span class="string">'ccccc.txt'</span>)) <span class="comment">#通常可以这样写</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="number">22</span>: aaaa/bbb/ccccc.txt</span><br><span class="line"></span><br><span class="line">path1=<span class="string">'/aaaa'</span></span><br><span class="line">path2=<span class="string">'/bbbb'</span></span><br><span class="line">path3=<span class="string">'/cccc'</span></span><br><span class="line">path10=path1+path2+path3</span><br><span class="line">print(path10)</span><br><span class="line">/aaaa/bbbb/cccc</span><br><span class="line"></span><br><span class="line">path1=<span class="string">'/aaaa'</span></span><br><span class="line">path2=<span class="string">'/bbbb'</span></span><br><span class="line">path3=<span class="string">'/cccc'</span></span><br><span class="line">path20=os.path.join(path1,path2,path3)</span><br><span class="line">print(path20)</span><br><span class="line">/cccc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">path1=<span class="string">'/aaaa/'</span></span><br><span class="line">path2=<span class="string">'bbbb/'</span></span><br><span class="line">path3=<span class="string">'cccc'</span></span><br><span class="line">path20=os.path.join(path1,path2,path3)</span><br><span class="line">print(path20)</span><br><span class="line">/aaaa/bbbb/cccc</span><br><span class="line"></span><br><span class="line">os.path.expanduser(path)  将路径中的～转换成user目录</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">path=<span class="string">'~/baidu.com'</span></span><br><span class="line">tmp=os.path.expanduser(path)</span><br><span class="line">print(tmp)</span><br><span class="line">/Users/qingclass/baidu.com</span><br><span class="line"></span><br><span class="line">os.path.join(path)  <span class="comment">#把目录和文件名合成一个路径</span></span><br><span class="line">os.path.exists(path) <span class="comment">#判断文件是否存在</span></span><br></pre></td></tr></table></figure><h3 id="eval-函数的用法"><a href="#eval-函数的用法" class="headerlink" title="eval()函数的用法"></a>eval()函数的用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">eval()函数将字符串当做有效的表达式, 进行计算</span><br><span class="line">把字符串两边的双引号去掉, 双引号中内容是什么 ,eval()函数返回的结果就是什么</span><br><span class="line"></span><br><span class="line">不要滥用eval()函数</span><br><span class="line">注意: 使用eval()函数对input()函数结果直接进行转换</span><br><span class="line">很危险</span><br><span class="line">案例：</span><br><span class="line">result=eval(<span class="string">"1+1"</span>)</span><br><span class="line">print(result)</span><br><span class="line">list_1=eval(<span class="string">"[1,2,3,4,5]"</span>)</span><br><span class="line">print(list_1)</span><br><span class="line">print(type(list_1))</span><br><span class="line">dict1=eval(<span class="string">'&#123;"age":18,"name":"小红"&#125;'</span>)</span><br><span class="line">print(dict1)</span><br><span class="line">print(type(dict1))</span><br></pre></td></tr></table></figure><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##面向过程:  (流水线思维方式)</span></span><br><span class="line"><span class="number">1.</span>让小哥去买雪碧, 他去买雪碧的过程都是精确控制的,从头到尾一步一步去完成</span><br><span class="line"><span class="number">2.</span>吃烤鸭, 自己去养鸭子,杀鸭子,自己烤鸭子.自己吃.中间过程每一个步骤都是自己去实现</span><br><span class="line"></span><br><span class="line">特点:</span><br><span class="line"><span class="number">1.</span>过于注重步骤和过程, 不注重职责分工</span><br><span class="line"><span class="number">2.</span>如果代码需求很复杂, 代码不便于管理</span><br><span class="line"><span class="number">3.</span>开发复杂项目,没有固定套路,不适合开发大型项目</span><br><span class="line"></span><br><span class="line"><span class="comment">##面向对象: ( 上帝式思维方式)</span></span><br><span class="line"><span class="number">1.</span>让小哥去买雪碧,不需要精确控制买雪碧的过程, 由小哥自己去决定</span><br><span class="line"><span class="number">2.</span>吃烤鸭, 自己去卖鸭子的店里买烤鸭. 烤鸭的制作过程有店里老板完成,</span><br><span class="line">  我们自己不需要参与</span><br><span class="line"></span><br><span class="line">特点: </span><br><span class="line"><span class="number">1.</span>注重 对象和职责, 不同的对象完成不同的功能</span><br><span class="line"><span class="number">2.</span>更加适合复杂的业务需求, 尤其是大型项目</span><br><span class="line"><span class="number">3.</span>面向对象 的编程思维方式在 面向过程  的编程思维方式基础之上</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">类:( 飞机图纸 类)</span><br><span class="line"><span class="number">1.</span>具有相同特征和行为的统称, 是一个抽象的概念</span><br><span class="line">  特征----&gt; 属性----&gt;  变量     飞机的长宽高</span><br><span class="line">  行为----&gt; 方法-----&gt; 函数     飞机 可以飞翔, 翻阅</span><br><span class="line"></span><br><span class="line">对象: (一架架飞机)</span><br><span class="line"><span class="number">1.</span>对象就是由类创建出来的一个个具体存在的事物</span><br><span class="line"> 对象中具有类的属性和方法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">人类:</span><br><span class="line">特征: 一个鼻子,两只眼睛,一个嘴巴,两个耳朵 -----&gt; 特征---&gt; 属性---&gt; 变量</span><br><span class="line">行为: 吃, 走, 睡觉, 工作 ----- &gt; 行为 -----&gt; 方法 ----&gt; 函数</span><br><span class="line"></span><br><span class="line">对象:</span><br><span class="line">坐着的小明  开车的小王  唱歌的小红</span><br><span class="line">对象中都有自己的属性和方法</span><br><span class="line">每个对象的属性和方法的结果可能各不相同</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">类和对象的关系:</span><br><span class="line"><span class="number">1.</span>类是模板, 通过类可以创建出来一个个具体存在的对象.</span><br><span class="line"><span class="number">2.</span>先有类,再有对象( 对象是由类创建出来的)</span><br><span class="line"><span class="number">3.</span>类一般只有一个, 对象可以有多个</span><br><span class="line"><span class="number">4.</span>类中有的属性和方法, 对象也具有属性和方法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">设计类满足的三要素:</span><br><span class="line"><span class="number">1.</span>类名,这类事物抽象的统称,是这类事物的名字,</span><br><span class="line">  要满足大驼峰命名法(每个单词的首字母都要大写)</span><br><span class="line">2.属性----这类事物具有的特征----&gt; 名词,静态的特征</span><br><span class="line">3.方法----这类事物具有的行为----&gt; 动词,动态的行为</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 类的设计</span></span><br><span class="line">小明 -----&gt; 姓名, 特征---&gt; 属性</span><br><span class="line">18岁 -----&gt; 年龄, 特征---&gt; 属性</span><br><span class="line">1.75------&gt; 身高, 特征---&gt; 属性</span><br><span class="line">跑 -------&gt;       行为---&gt; 方法</span><br><span class="line">吃  ------&gt;       行为---&gt; 方法</span><br><span class="line"></span><br><span class="line">小美 -----&gt; 姓名, 特征---&gt; 属性</span><br><span class="line">17岁 -----&gt; 年龄, 特征---&gt; 属性</span><br><span class="line">1.65------&gt; 身高, 特征---&gt; 属性</span><br><span class="line">跑 -------&gt;       行为---&gt; 方法</span><br><span class="line">吃  ------&gt;       行为---&gt; 方法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">人类:</span><br><span class="line">姓名</span><br><span class="line">年龄</span><br><span class="line">身高</span><br><span class="line">跑</span><br><span class="line">吃 </span><br><span class="line"></span><br><span class="line">Person:</span><br><span class="line">name</span><br><span class="line">age</span><br><span class="line">high</span><br><span class="line">run()</span><br><span class="line">eat()</span><br><span class="line"></span><br><span class="line"><span class="comment">##dir()函数</span></span><br><span class="line"><span class="number">1.</span>python中内置的函数</span><br><span class="line"><span class="number">2.</span>可以来查看变量/对象/数据 的所有属性和方法</span><br></pre></td></tr></table></figure><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>语法:</span><br><span class="line"><span class="class"><span class="keyword">class</span> 类名:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> 方法名1<span class="params">(self, 参数列表)</span>:</span></span><br><span class="line">        print(<span class="string">"---方法执行语句代码---"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> 方法名2<span class="params">(self, 参数列表)</span>:</span></span><br><span class="line">        print(<span class="string">"---方法执行语句代码---"</span>)</span><br><span class="line"><span class="number">2.</span>类名要符合大驼峰命名法</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法和函数的区别:</span></span><br><span class="line"><span class="number">1.</span>定义的位置不同:</span><br><span class="line">函数定义在类外</span><br><span class="line">方法定义在类内部</span><br><span class="line"><span class="number">2.</span>参数不同:</span><br><span class="line">函数没有参数 self</span><br><span class="line">方法有参数 self</span><br><span class="line"><span class="number">3.</span>调用方式不同</span><br><span class="line">函数:  函数名( 参数列表 )</span><br><span class="line">方法:  对象名.方法名( 参数列表 )</span><br><span class="line"></span><br><span class="line"><span class="comment">#类创建对象:</span></span><br><span class="line">对象变量名 = 类名()</span><br><span class="line">对象变量名保存的是对象内存地址的引用</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line">    <span class="string">"""定义一个猫类"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"小猫爱吃鱼"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drink</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"小猫爱喝水"</span>)</span><br><span class="line">tom=Cat()</span><br><span class="line">tom.eat()</span><br><span class="line">tom.drink()</span><br><span class="line"></span><br><span class="line">方法的调用顺序:</span><br><span class="line"><span class="number">1.</span>Python解释器遇到定义类时,会进入类的内部定义类模板, </span><br><span class="line">但是不会进入方法体内部执行方法体中的代码</span><br><span class="line"><span class="number">2.</span>如果在类外, 使用对象.方法名()  </span><br><span class="line">  调用方法时, 才会进入类内方法体中执行 方法体中的代码</span><br><span class="line"><span class="number">3.</span>当类内 方法体内部代码执行完毕以后,</span><br><span class="line">  回到方法调用的地方继续向下执行</span><br><span class="line"></span><br><span class="line">地址的进制表示:</span><br><span class="line"><span class="number">1.</span>十进制   %d</span><br><span class="line"><span class="number">2.</span>十六进制 %x</span><br><span class="line">获取变量的引用的内存地址  id(变量)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给对象添加属性有两种方式:</span></span><br><span class="line"><span class="number">1.</span>在类外部给对象添加属性</span><br><span class="line">  方式:  对象.属性名 = 值</span><br><span class="line">  添加完属性后,访问方式:</span><br><span class="line">  <span class="number">1</span>).在类的内部   可以使用self参数访问属性   self.属性名</span><br><span class="line">  <span class="number">2</span>).在类的外部   通过对象访问属性         对象名.属性名</span><br><span class="line"><span class="number">2.</span>在类内部给对象添加属性  -- &gt; 待定</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">重点:</span><br><span class="line">self参数的小结:</span><br><span class="line"><span class="number">1.</span>self保存当前对象地址的引用(哪个对象调用方法,self就保存哪个对象的引用地址)</span><br><span class="line"><span class="number">2.</span>属性的访问:</span><br><span class="line">  在类内部 可以使用self参数访问属性  self.属性名</span><br><span class="line">  在类的外部 使用对象访问属性  对象.属性名</span><br><span class="line"><span class="number">3.</span>方法的访问:</span><br><span class="line">   在类内部 通过self参数访问方法   self.方法名()</span><br><span class="line">   在类外部 通过对象调用方法      对象名.方法名()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">匿名函数:</span><br><span class="line"><span class="number">1.</span>匿名函数( <span class="keyword">lambda</span>表达式 )</span><br><span class="line">2.作用: 省略def 关键字定义函数的标准步骤, 可以快速的定义功能简单的函数</span><br><span class="line"><span class="number">3.</span>语法:  <span class="keyword">lambda</span>  参数 / 多个参数 : 表达式</span><br></pre></td></tr></table></figure><h3 id="init-del-str方法"><a href="#init-del-str方法" class="headerlink" title="init  ,del,str方法"></a><strong>init</strong>  ,del,str方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">__init__方法是魔法方法(内置方法), 当创建对象时,自动调用</span><br><span class="line">作用:就是 初始化数据</span><br><span class="line">创建对象时(使用 类名()  ):</span><br><span class="line"><span class="number">1.</span>创建对象时,先分配内存空间</span><br><span class="line"><span class="number">2.</span>再初始化内存空间中数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在类内部给对象添加属性</span><br><span class="line"><span class="number">1.</span>在__init__方法中添加 属性   self.属性名 =  属性值</span><br><span class="line"><span class="number">2.</span>类外访问属性  对象.属性名</span><br><span class="line"><span class="number">3.</span>类内访问属性  self.属性名</span><br><span class="line"></span><br><span class="line">初始化的同时设置属性值:</span><br><span class="line"><span class="number">1.</span>在初始化方法__init__中添加属性参数 __init__(self, 属性参数)</span><br><span class="line"><span class="number">2.</span>在初始化方法中 把属性参数作为属性保存  self.属性 = 属性参数</span><br><span class="line"><span class="number">3.</span>使用类创建对象时 Cat(参数列表)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">魔法方法:</span><br><span class="line">__del__ 魔法方法 对象被从内存中销毁前， 会被自动调用</span><br><span class="line">__str__  魔法方法:</span><br><span class="line"><span class="number">1.</span>使用<span class="keyword">print</span>打印对象时, __str__方法会自动调用</span><br><span class="line"><span class="number">2.</span>作用: 打印对象的描述信息</span><br><span class="line"><span class="number">3.</span>注意:  __str__方法 只能返回字符串</span><br><span class="line">实例：</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        print(<span class="string">"我是初始化方法:%s"</span> % name)</span><br><span class="line">        self.name=name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"小猫喜欢吃鱼"</span>)</span><br><span class="line">tom=Cat(<span class="string">"TOM"</span>)</span><br><span class="line">tom.eat()</span><br></pre></td></tr></table></figure><h3 id="面向对象封装"><a href="#面向对象封装" class="headerlink" title="面向对象封装"></a>面向对象封装</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">案例<span class="number">1</span>：小明原体重<span class="number">56.78</span>，跑步减<span class="number">0.5</span>斤，吃增<span class="number">1</span>斤</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,weight)</span>:</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.weight=weight</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"%s体重是%.2f"</span> %(self.name,self.weight)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"%s爱跑步"</span>% self.name)</span><br><span class="line">        self.weight -=<span class="number">0.5</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"%s爱吃"</span>% self.name)</span><br><span class="line">        self.weight +=<span class="number">1</span></span><br><span class="line">person=Person(<span class="string">"小明"</span>,<span class="number">56.78</span>)</span><br><span class="line">person.run()</span><br><span class="line">person.eat()</span><br><span class="line">print(person)</span><br></pre></td></tr></table></figure><h3 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">身份运算符</span><br><span class="line"><span class="keyword">is</span> 用来判断两个变量引用地址是否相同  如果相同反回<span class="literal">True</span>, 否则返回<span class="literal">False</span></span><br><span class="line">== 用来判断两个变量的数据值是否相等  如果相等反回<span class="literal">True</span>, 否则返回<span class="literal">False</span></span><br></pre></td></tr></table></figure><h3 id="私有属性和私有方法"><a href="#私有属性和私有方法" class="headerlink" title="私有属性和私有方法"></a>私有属性和私有方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>有些情况下,类中一些属性和方法不需要类外直接访问到,可以把类中的属性和方法定义为</span><br><span class="line">私有</span><br><span class="line"><span class="number">2.</span>前置双下划线的属性和方法就是私有属性和私有方法, </span><br><span class="line">  __age 私有属性,  __screat(self) 私有方法</span><br><span class="line"><span class="number">3.</span>私有属性和私有方法在类外部不能直接访问,</span><br><span class="line">  但是可以在类内部访问到  可以通过self访问</span><br><span class="line"><span class="number">4.</span>Python中并没有真正意义上的私有属性和私有方法, </span><br><span class="line">  而是通过名字重整的方式将私有属性和私有方法改了名字</span><br><span class="line">  方式: </span><br><span class="line">    ① 私有属性名: _类名__私有属性名  </span><br><span class="line">    ② 私有方法名: _类名__私有方法名</span><br><span class="line"><span class="number">5.</span>可以通过重整后的私有属性名和私有方法名,间接去访问</span><br><span class="line"><span class="number">6.</span>Python中的警告: Python中不阻止你去干坏事,一切靠自觉</span><br><span class="line"><span class="number">7.</span>可以通过对外方法间接访问私有属性, set_age()/ get_age()</span><br></pre></td></tr></table></figure><h4 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">异常:</span><br><span class="line"><span class="number">1.</span>程序执行过程中,python解释器遇到错误,程序不再向下执行,并且提示错误信息,这就是异常</span><br><span class="line"><span class="number">2.</span>程序不再向下执行,并且提示错误信息的动作, 就是抛出(<span class="keyword">raise</span>)异常</span><br><span class="line">3.出现异常需要捕捉异常,为什么? 程序开发人员无法消灭异常(比如网络不稳定),</span><br><span class="line">  只能靠捕捉异常,并对捕捉到的异常进行相应处理(图片加载失败,要提示相应的错误信息)</span><br><span class="line"></span><br><span class="line">异常的捕获:</span><br><span class="line"><span class="number">1.</span>使用<span class="keyword">try</span>...<span class="keyword">except</span>来捕获异常并处理异常,把可能出现异常的代码放在<span class="keyword">try</span>缩进部分</span><br><span class="line"><span class="number">2.</span><span class="keyword">except</span>部分的代码只有在发生异常时才会执行,可以处理异常修复或信息提示</span><br><span class="line"><span class="number">3.</span>只要捕捉了异常,不管异常是否发生,程序都可以正常结束</span><br><span class="line"><span class="number">4.</span>在<span class="keyword">try</span>语句中出现异常,异常后面的代码不再执行</span><br><span class="line"><span class="number">5.</span>捕获指定异常时,在<span class="keyword">except</span>后面添加异常类型</span><br><span class="line">  格式: <span class="keyword">except</span> 异常类型</span><br><span class="line"><span class="number">6.</span>对同一个异常捕获多次,只执行第一次捕获的异常代码</span><br><span class="line"><span class="number">7.</span>一次捕获多个异常  格式: <span class="keyword">except</span> ( 异常类型<span class="number">1</span>, 异常类型<span class="number">2</span>, ...):</span><br><span class="line">  作用: 对不同的异常有相同的处理结果</span><br><span class="line"><span class="number">8.</span>捕获任意类型异常  格式: <span class="keyword">except</span> Exception:</span><br><span class="line"><span class="number">9.</span>获取异常的错误信息,给异常类型起别名,</span><br><span class="line">  <span class="keyword">except</span> 异常类型名 <span class="keyword">as</span>  别名</span><br><span class="line">   (别名中记录异常的错误信息)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">异常的完整语法:</span><br><span class="line"><span class="number">1.</span>格式: </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 可能会出现异常的代码</span></span><br><span class="line"><span class="keyword">except</span> 异常类型<span class="number">1</span>:</span><br><span class="line">    <span class="comment"># 针对异常类型1的处理代码</span></span><br><span class="line"><span class="keyword">except</span> 异常类型<span class="number">2</span>:</span><br><span class="line">    <span class="comment"># 针对异常类型2的处理代码</span></span><br><span class="line"><span class="keyword">except</span> (异常类型<span class="number">3</span>,异常类型<span class="number">4</span>):</span><br><span class="line">    <span class="comment"># 针对异常类型3或异常类型4的处理代码</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> exp:</span><br><span class="line">    <span class="comment"># exp中获取异常的错误信息</span></span><br><span class="line">    <span class="comment"># except部分只有在发生异常时才会执行</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># else部分在没有发生异常时才会执行</span></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="comment"># finally部分无论有没有异常都会执行..</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>应用场景,在打开文件向文件写入数据时程序崩溃,</span><br><span class="line">  此时可以在<span class="keyword">finally</span>部分添加关闭文件资源的操作,避免系统资源浪费</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">异常的传递:</span><br><span class="line"><span class="number">1.</span>如果在被调用的函数中有异常没有捕获处理,则会把异常传递给调用的地方</span><br><span class="line"><span class="number">2.</span>最终传递到Python解释器依然没有捕获异常,则程序崩溃</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">抛出异常:</span><br><span class="line"><span class="number">1.</span>创建Exception异常类的对象  有参数:字符串</span><br><span class="line"><span class="number">2.</span>使用<span class="keyword">raise</span>抛出异常,语法: <span class="keyword">raise</span> Exception(<span class="string">"异常的错误提示信息"</span>)</span><br></pre></td></tr></table></figure><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">模块:</span><br><span class="line"><span class="number">1.</span>以.py结尾的文件原则上都可以作为模块使用,把成熟稳定的代码封装到模块中,</span><br><span class="line">   便于其它开发者使用</span><br><span class="line"><span class="number">2.</span>模块名必须符合标识符的命名规范,(由数字,字母,下划线组成,并且不能以数字开头)</span><br><span class="line"><span class="number">3.</span>模块中可以封装全局变量,函数,类等,当做工具可以提供给其它开发者使用</span><br><span class="line"><span class="number">4.</span>使用模块,则需要:</span><br><span class="line">  <span class="number">1</span>).先导入模块 <span class="keyword">import</span> 模块名</span><br><span class="line">  <span class="number">2</span>).使用模块中工具,  模块名.全局变量名,模块名.函数名()   模块名.类名()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>如果模块名太长,可以使用<span class="keyword">as</span>给模块起别名,</span><br><span class="line">   ① 格式: <span class="keyword">import</span> 模块名 <span class="keyword">as</span> 模块别名</span><br><span class="line">   ② 注意: 模块别名要符合大驼峰命名法则</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>注意: <span class="keyword">from</span> ...<span class="keyword">import</span>导入模块中工具(全局变量,函数,类),</span><br><span class="line">  格式:  <span class="keyword">from</span>  模块名  <span class="keyword">import</span> 工具名</span><br><span class="line">  如果工具名相同,后导入的工具名会覆盖之前导入的工具名</span><br><span class="line">  解决办法: 用<span class="keyword">as</span>给工具名起新的别名</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>还可以使用 <span class="keyword">from</span>...<span class="keyword">import</span> * 导入模块中工具 </span><br><span class="line">  ,这种方式可以将模块中所有的全局变量,函数,类都作为工具导入</span><br><span class="line">  注意: 不推荐使用,因为函数重名并没有任何的提示,出现问题不好排查</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">导入模块的两种方式:</span><br><span class="line"><span class="number">1.</span><span class="keyword">import</span> 模块名</span><br><span class="line">    特点: 将模块中所有的全局变量,函数,类全部导入</span><br><span class="line">    访问方式: 模块名.全局变量  模块名.函数()   模块名.类名()</span><br><span class="line"><span class="number">2.</span><span class="keyword">from</span> 模块名 <span class="keyword">import</span> 全局变量/函数/类名</span><br><span class="line">    特点: 将所需要的全局变量/函数/类名导入</span><br><span class="line">    访问方式: 直接使用  全局变量名/函数()/类名()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">模块的搜索顺序:</span><br><span class="line"><span class="number">1.</span>导入模块时,现在当前目录下查找,如果查找到了,就导入</span><br><span class="line"><span class="number">2.</span>如果当前目录下没有找到模块,则导入系统模块</span><br><span class="line"><span class="number">3.</span>可以使用__file__属性查看模块的路径,使用方式:模块名.__file__</span><br><span class="line"><span class="number">4.</span>在开发时,给文件起名,不要和系统的模块文件名相同</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__name__内置属性:</span><br><span class="line"><span class="number">1.</span>__name__内置属性可以做到,模块代码在测试情况下执行,而在被导入情况下不会执行</span><br><span class="line"><span class="number">2.</span>如果在当前文件中直接打印__name__内置属性,则直接输出字符串__main__</span><br><span class="line"><span class="number">3.</span>如果当前文件被当做模块导入,在导入的文件中直接运行时,则__name__内置属性 </span><br><span class="line">  输出的就是当前被导入的模块名</span><br><span class="line"><span class="number">4.</span>如果要做到代码在测试情况下执行,而不会在导入情况下执行,</span><br><span class="line">  要在当前文件中添加<span class="keyword">if</span>条件判断 <span class="keyword">if</span>  __name__ == <span class="string">"__main__"</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">包:</span><br><span class="line"><span class="number">1.</span>包是包含很多模块的特殊的目录</span><br><span class="line"><span class="number">2.</span>包中包含__init__.py文件</span><br><span class="line"><span class="number">3.</span>我们可以把包直接给调用者,调用者导入包后,可以获取到包中所有的模块</span><br><span class="line">  导入包的方式: <span class="keyword">import</span> 包名</span><br><span class="line"><span class="number">4.</span>创建包的两种方式:</span><br><span class="line">  ① 在PyCharm中新建一个文件夹,在文件夹新建文件__init__.py</span><br><span class="line">  ② 在PyCharm中可以直接新建 Python Package</span><br><span class="line"><span class="number">5.</span>如果想要把包给其它开发者导入使用,__init__.py 中指定 对外界提供的模块列表</span><br><span class="line">  需要在  __init__.py文件中添加</span><br><span class="line">    <span class="keyword">from</span>  .  <span class="keyword">import</span>  模块名</span><br><span class="line"><span class="number">6.</span>导入包方式:</span><br><span class="line">    ① <span class="keyword">import</span> 包名</span><br><span class="line">      <span class="keyword">import</span> 包名.模块名</span><br><span class="line">    ② <span class="keyword">from</span> 包名 <span class="keyword">import</span> 模块名</span><br><span class="line">    ③ <span class="keyword">from</span> 包名.模块名 <span class="keyword">import</span> 函数名/类名</span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><h3 id="面向对象三大特征"><a href="#面向对象三大特征" class="headerlink" title="面向对象三大特征"></a>面向对象三大特征</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>封装 根据职责将属性和方法封装到一个抽象的类中</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>继承 实现代码的重用，相同的代码不需要重复编写</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>多态 不同的对象调用相同的方法，产生不同的执行结果，增加代码的灵活度</span><br></pre></td></tr></table></figure><h3 id="单继承"><a href="#单继承" class="headerlink" title="单继承"></a>单继承</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">单继承的概念：子类拥有父类的所有方法和属性</span><br><span class="line">语法：<span class="class"><span class="keyword">class</span> 类名<span class="params">(父类名)</span>：</span></span><br><span class="line"><span class="class"><span class="title">pass</span></span></span><br><span class="line">特点：1.传递性：A继承B,B继承C,A具有BC的属性和方法</span><br><span class="line"> <span class="number">2.</span>可以重写父类：当父类的方法不能满足子类的话，可以对方法进行重写</span><br><span class="line">    重写分为两种：<span class="number">1.</span>覆盖父类，<span class="number">2.</span>扩展父类</span><br><span class="line">    第<span class="number">1</span>种的应用场景：父类的方法实现与子类的方法实现完全不同</span><br><span class="line">    第<span class="number">2</span>种的应用场景：子类的方法实现中包含父类的方法实现，调用：super().父类方法，调用父类方法的执行</span><br></pre></td></tr></table></figure><h3 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">多继承概念：子类可以继承多个父类，并且拥有所有父类的属性和方法</span><br><span class="line">语法：<span class="class"><span class="keyword">class</span> 类名<span class="params">(父类名<span class="number">1</span>，父类名<span class="number">2</span>，......)</span>：</span></span><br><span class="line"><span class="class"><span class="title">pass</span></span></span><br></pre></td></tr></table></figure><p>定义类的时候，如果没有父类</p><p>语法：class 类名（object）</p><p>​        pass</p><p>##获取隐藏元素的文本信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  is_displayed()  为false的元素,依然可以通过getAttribute()方法获取元素的属性. </span><br><span class="line"></span><br><span class="line">     由于webdriver spec的定义，Selenium WebDriver 只会与可见元素交互，所以获取隐藏元素的文本总是会返回空字符串</span><br><span class="line"></span><br><span class="line">  想要获取隐藏元素的文本，可以使用element.attribute(<span class="string">'attributeName'</span>), 通过textContent, innerText, innerHTML等属性获 取。(划重点)</span><br><span class="line"></span><br><span class="line">innerHTML 会返回元素的内部 HTML， 包含所有的HTML标签。 </span><br><span class="line"></span><br><span class="line">例如，&lt;div&gt;Hello &lt;p&gt;World!&lt;/p&gt;&lt;/div&gt;的innerHTML会得到Hello &lt;p&gt;World!&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">textContent 和 innerText 只会得到文本内容，而不会包含 HTML 标签。 </span><br><span class="line"></span><br><span class="line">textContent 是 W3C 兼容的文字内容属性，但是 IE 不支持</span><br><span class="line"></span><br><span class="line">innerText 不是 W3C DOM 的指定内容，FireFox不支持</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>切片</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>功能测试基础知识.md</title>
    <link href="undefined2020/01/04/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>2020/01/04/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<hr><p>[TOC]</p><h2 id="测试理论"><a href="#测试理论" class="headerlink" title="测试理论"></a>测试理论</h2><h3 id="软件开发模型"><a href="#软件开发模型" class="headerlink" title="软件开发模型"></a>软件开发模型</h3><h4 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h4><p><strong>模型：</strong>需求分析-概要设计-详细设计-编码-软件测试-软件维护</p><p><strong>优点：</strong>线性模型，是其他模型的基础，文档驱动；开发的各个阶段比较清晰，当前阶段完成之后只需关注后续阶段</p><p><strong>缺点：</strong>风险后延，不适应需求的变化</p><h4 id="快速原型"><a href="#快速原型" class="headerlink" title="快速原型"></a>快速原型</h4><p><strong>模型：</strong>快速分析-构造-运行-评价-快速分析-构造-运行-评价-快速分析…</p><p><strong>特点：</strong>在开发真实系统之前先构造一个原型，在该原型的基础上，逐渐完成整个系统的开发工作</p><p><strong>优点：</strong>支持用户参与，适应需求变化，减少由于需求不明带来的项目开发风险</p><p>####螺旋模型</p><p><strong>优点：</strong>引进了风险分析活动</p><p><strong>缺点：</strong>需要丰富的风险评估经验和专业知识</p><h3 id="软件测试模型"><a href="#软件测试模型" class="headerlink" title="软件测试模型"></a>软件测试模型</h3><p>####v模型</p><p><strong>示意图：</strong>需求分析-概要设计-详细设计-编码-单元测试-集成测试-系统测试-验收测试</p><p><strong>缺点：</strong>返工量大，灵活性比较低</p><h4 id="w模型"><a href="#w模型" class="headerlink" title="w模型"></a>w模型</h4><p><strong>示意图：</strong>需求分析（验收/系统测试设计）-概要设计（集成测试设计）-详细设计（单元测试设计）-编码（单元测试）-集成（集成测试）-实施（系统测试）-交付（验收测试）</p><p><strong>优点：</strong>测试伴随着整个软件的开发周期，早介入，早发现，早修复且不仅对程序，文档和设计也进行测试</p><p>####H模型</p><p><strong>示意图：</strong>测试准备-测试就绪点-测试执行</p><h2 id="软件测试的分类"><a href="#软件测试的分类" class="headerlink" title="软件测试的分类"></a>软件测试的分类</h2><h3 id="按阶段划分"><a href="#按阶段划分" class="headerlink" title="按阶段划分"></a>按阶段划分</h3><p><strong>单元测试：</strong>针对软件设计中的最小单位-程序模块，进行正确性检查的测试工作</p><p><strong>集成测试：</strong>在单元测试的基础上，将所有程序模块进行有序的递增的测试，重点测试不同模块的接口部分</p><p><strong>系统测试：</strong>将整个软件系统看作一个整体进行测试，测试的依据是软件需求文档</p><p><strong>验收测试：</strong>检验软件是否符合用户需求的测试</p><p>​    α测试：内部版本，软件开发者内部交流，该版本软件bug较多，普通用户最好不要安装</p><p>​    β 测试：公测版本，对所有用户开放的测试版本 ，软件公司免费发布，用户从相关网站上下载，通过一些专业爱好者的测试，将问题反馈给开发者，开发者进行有针对性的修改</p><p>​    γ测试：软件版本正式发行的候选版本，该版本已经相当成熟了与即将发布的正式版本相差无几，成为正式发布的候选版本</p><h3 id="按是否查看源代码"><a href="#按是否查看源代码" class="headerlink" title="按是否查看源代码"></a>按是否查看源代码</h3><p><strong>黑盒测试:</strong>完全不考虑程序内部结构和内部特性，注重于测试软件的功能需求，只关心软件的输入数据和输出数据</p><p>​    ‘功能测试’：逻辑功能测试，界面测试，安装测试</p><p>​    ‘性能测试’：时间性能，稳定性测试，负载测试，压力测试</p><p><strong>白盒测试：</strong>看源代码和程序结构</p><p><strong>灰盒测试：</strong>介于白盒测试和黑盒测试之间，灰盒测试多用户集成测试阶段，不仅考虑输入和输出还关注程序内部的情况</p><h3 id="按是否运行"><a href="#按是否运行" class="headerlink" title="按是否运行"></a>按是否运行</h3><p><strong>静态测试：</strong>不实际运行被测软件，而只是静态的检查程序代码，界面或文档中可能存在的错误过程</p><p><strong>动态测试：</strong>实际运行被测程序，输入相应的测试数据检查实际输出结果和预期结果是否相符的过程</p><h3 id="按是否自动化"><a href="#按是否自动化" class="headerlink" title="按是否自动化"></a>按是否自动化</h3><p><strong>人工测试/手工测试</strong>：测试人员手动去进行的测试</p><p><strong>自动化测试：</strong>利用代码或工具帮助人工进行测试</p><h3 id="软件测试的其他分类"><a href="#软件测试的其他分类" class="headerlink" title="软件测试的其他分类"></a>软件测试的其他分类</h3><p><strong>冒烟测试：</strong>对系统进行最基本功能的测试，保证基本的功能和流程能走通</p><p><strong>回归测试：</strong>当修复一个bug后，把之前的测试用例在新的代码下进行再次测试</p><p><strong>随机测试：</strong>主要是对被测软件的一些重要功能进行复测，也包括测试哪些当前测试用例没有覆盖到的部分</p><p><strong>探索性测试：</strong>同时设计测试和执行测试，测试人员通过测试不断学习被测系统</p><h2 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h2><p>定义：为特定的目的而设计的一组测试输入，执行条件和预期结果的文档</p><h3 id="测试用例的8大要素"><a href="#测试用例的8大要素" class="headerlink" title="测试用例的8大要素"></a>测试用例的8大要素</h3><p>用例编号，用例标题，测试项目，用例级别，预置条件，测试输入，执行步骤，预期结果</p><h3 id="测试用例设计方法"><a href="#测试用例设计方法" class="headerlink" title="测试用例设计方法"></a>测试用例设计方法</h3><p>等价类划分法</p><p>​    有效等价类（满足需求）：</p><p>​    无效等价类（不满足需求）：</p>]]></content>
    
    
    
    <tags>
      
      <tag>功能测试</tag>
      
      <tag>开发模型</tag>
      
      <tag>测试模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电脑手机公司相关常识.md</title>
    <link href="undefined2019/12/28/%E7%94%B5%E8%84%91%E6%89%8B%E6%9C%BA%E7%9B%B8%E5%85%B3%E5%B8%B8%E8%AF%86/"/>
    <url>2019/12/28/%E7%94%B5%E8%84%91%E6%89%8B%E6%9C%BA%E7%9B%B8%E5%85%B3%E5%B8%B8%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>###电脑手机的快捷键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">iphone6s截屏键：关机键+home键</span><br><span class="line"></span><br><span class="line">小米手机的截屏：右边音量下键+屏幕上的三个横线同时摁；</span><br><span class="line"></span><br><span class="line">Vivo手机截屏：右侧手机电源键+音量下键</span><br><span class="line"></span><br><span class="line">OPPO手机截屏：三指往下滑；</span><br><span class="line"></span><br><span class="line">Mac电脑Chrome浏览器开发者工具的快捷键：</span><br><span class="line"></span><br><span class="line">开发者工具：option＋command＋i</span><br><span class="line"></span><br><span class="line">javascript控制台：option＋command＋j</span><br><span class="line"></span><br><span class="line">或者按option＋command＋c也可以打开</span><br><span class="line"></span><br><span class="line">在终端中打开另一个终端的快捷键：command+T</span><br></pre></td></tr></table></figure><h3 id="Mac电脑便利贴"><a href="#Mac电脑便利贴" class="headerlink" title="Mac电脑便利贴"></a>Mac电脑便利贴</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">大的显示器自己的便利贴</span><br><span class="line">Mac笔记本电脑需要自己在appstore里面下载Simple Antnotes获取安装即可-⌘+n新建一个便利签</span><br></pre></td></tr></table></figure><p>###公司常用语</p><p><strong>PMO</strong>:PMO(Project Management Office)一般称为项目管理办公室、项目管理中心或者项目管理部，是在组织内部将实践、过程、运作形式化和标准化，同时在组织内各机能间，为推动专案前进产生各种工作资源冲突时，负责协调整合的机能，所以是为了提高组织管理成熟度的核心部门，它根据业界最佳实践和公认的项目管理知识体系（PMBOK），并结合企业自身的业务和行业特点，为组织量身定制项目管理流程、培养项目经理团队、建立项目管理信息系统、对项目提供顾问式指导、开展多项目管理等，以此确保项目成功率的提高和组织战略的有效贯彻和执行。</p><p><strong>MVP</strong>:MVP的全称为Model-View-Presenter，Model提供数据，View负责显示，Presenter负责逻辑的处理。</p><p>####Mac换行刷新快捷键</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shift+enter,换行</span><br><span class="line">shift+command+R,刷新</span><br></pre></td></tr></table></figure><h3 id="百度搜索技巧"><a href="#百度搜索技巧" class="headerlink" title="百度搜索技巧"></a>百度搜索技巧</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">文本框中输入</span><br><span class="line"></span><br><span class="line">Intitle:标题</span><br><span class="line">    </span><br><span class="line">inurl:链接,site:站名,“+” “-”,Filetype:文档格式</span><br><span class="line">            </span><br><span class="line">搜索工具</span><br><span class="line"></span><br><span class="line">设置-更多工具-扩展程序</span><br><span class="line"></span><br><span class="line">setupvpn  :翻墙工具</span><br><span class="line"></span><br><span class="line">ColorZilla  选颜色的插件</span><br></pre></td></tr></table></figure><h3 id="如何在家连公司的数据库"><a href="#如何在家连公司的数据库" class="headerlink" title="如何在家连公司的数据库"></a>如何在家连公司的数据库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在家想要连公司的数据库，wiki,jira需要开VPN的注意事项：</span><br><span class="line"><span class="number">1.</span>VPN与修改电脑的host不能同时存在（添加了wiki,jira的域名到host中，即可在家中打开,但如果开了VPN就需要注释到host中wiki,jira的域名）</span><br><span class="line"><span class="number">2.</span>如果还是连不上数据库可以查看自己家路由的网段LAN是否跟公司域名的网段有冲突，如果有的话让电脑连手机的热点即可访问</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>常识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>电脑</tag>
      
      <tag>手机</tag>
      
      <tag>公司</tag>
      
      <tag>常识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试相关常识.md</title>
    <link href="undefined2019/11/19/%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3%E5%B8%B8%E8%AF%86/"/>
    <url>2019/11/19/%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3%E5%B8%B8%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>###测试常识</p><p>微信开发者工具的使用</p><p>微信开发者文档：一个用户针对一个公众号会产生一个OpenID,</p><p>微信开发者工具可以方便微信开发者和测试人员模拟用户的手机操作；</p><p>####大驼峰和小驼峰命名的区别？</p><p>大驼峰：每个单词的首字母大写；小驼峰：第一个单词的首字母小写，后续单词的首字母均大写</p><p>####K12是什么？</p><p>K12是学前教育至高中教育的缩写，现在普遍被用来代指基础教育</p><h4 id="苹果手机怎么清cookies？android手机怎么清cookies？浏览器怎么清cookies"><a href="#苹果手机怎么清cookies？android手机怎么清cookies？浏览器怎么清cookies" class="headerlink" title="苹果手机怎么清cookies？android手机怎么清cookies？浏览器怎么清cookies?"></a>苹果手机怎么清cookies？android手机怎么清cookies？浏览器怎么清cookies?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IOS:设置-Safari-清楚历史记录与网站数据和cookies;</span><br><span class="line"></span><br><span class="line">android：点击手机浏览器的图标-点击右上角的三个点-点击设置-安全与隐私-清除浏览器数据和cookie-勾选cookie和网站数据-确定；</span><br><span class="line"></span><br><span class="line">浏览器：点击浏览器右上方的向上箭头-更多工具-清楚浏览器数据-选择cookie及其他网站数据-清楚数据；</span><br></pre></td></tr></table></figure><h4 id="token"><a href="#token" class="headerlink" title="token"></a>token</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">token是什么？</span><br><span class="line"></span><br><span class="line">Token的产生：当客户端频繁向服务端请求数据，服务端需要频繁的去数据库查询用户名的密码并进行对比，判断用户名和密码正确与否，并作出相应提示</span><br><span class="line"></span><br><span class="line">一般在邀请和登录系统中使用，作为指令后劲儿令牌来使用</span><br><span class="line"></span><br><span class="line">Token的定义：token是服务端生成的一串字符串，以作客户端进行请求的一个令牌，当第一次登陆后，服务器生成一个token便将此token返回给客户端，，以后客户端只需带上这个token前来请求数据即可，无需再次带上用户名和密码</span><br><span class="line"></span><br><span class="line">使用token的目的：为了减轻服务器的压力，减少频繁的查询数据库，是服务器更加的健壮</span><br><span class="line"></span><br><span class="line">Token:一般在邀请和登录系统中使用，作为指令后劲儿令牌来使用</span><br></pre></td></tr></table></figure><h4 id="灰度测试？"><a href="#灰度测试？" class="headerlink" title="灰度测试？"></a>灰度测试？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在某项产品或应用正式发布之前，选择特定人群试用，逐步扩大其适用者数量，以便及时发现和纠正其中的问题</span><br><span class="line"></span><br><span class="line">适用的范围：软件要在不久的将来推出一个全新的功能或者做一次比较大的改版</span><br><span class="line"></span><br><span class="line">灰度测试的方式有两种：软件系统内自带灰度测试发布系统；适用第三方工具辅助进行；</span><br></pre></td></tr></table></figure><h4 id="产品从开发到上线需要经过那几个环境？"><a href="#产品从开发到上线需要经过那几个环境？" class="headerlink" title="产品从开发到上线需要经过那几个环境？"></a>产品从开发到上线需要经过那几个环境？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本地环境-测试环境-回归环境-预上线环境（会连接生产环境的数据库，使用生产环境的数据进行测试）-灰度测试环境-线上环境/生产环境（所有服务器的代码都已经是最新的）</span><br></pre></td></tr></table></figure><h4 id="MVC-MVP-MVVM"><a href="#MVC-MVP-MVVM" class="headerlink" title="MVC?MVP?MVVM?"></a>MVC?MVP?MVVM?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">M:model的缩写，可以理解为网站数据（数据保存）</span><br><span class="line"></span><br><span class="line">V：view的缩写，代表网站的界面（用户的界面）</span><br><span class="line"></span><br><span class="line">C:controller的缩写，可以理解为php, asp等这类后台的语言（业务逻辑）</span><br><span class="line"></span><br><span class="line">P:presenter的缩写</span><br><span class="line"></span><br><span class="line">M：最后一个M,是viewmodel</span><br><span class="line"></span><br><span class="line">MVC是单向的：v-c-m-v</span><br><span class="line"></span><br><span class="line">MVP是双向的：v--p--m</span><br><span class="line"></span><br><span class="line">MVVM:v-viewmodel—m</span><br></pre></td></tr></table></figure><h4 id="url由什么组成？"><a href="#url由什么组成？" class="headerlink" title="url由什么组成？"></a>url由什么组成？</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">url简称统一资源定位符，由协议类型，主机名，路径，文件名组成</span><br><span class="line"></span><br><span class="line">http://baike.baidu.com/view/<span class="number">567419.</span>htm</span><br><span class="line"></span><br><span class="line">URL 就是 Uniform Resource Locator，统一资源定位符， 网址。</span><br><span class="line"></span><br><span class="line">地址构成：</span><br><span class="line"></span><br><span class="line">protocol :// hostname[:port] / path / ;parameters<span class="comment">#fragment</span></span><br><span class="line"></span><br><span class="line">即 通讯协议，主机名，通讯口，路经，参数，查询，信息片断</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line"></span><br><span class="line">https://zhidao.baidu.com/question/2270814807896158308.html?entry=qb_ihome_tag</span><br></pre></td></tr></table></figure><h4 id="什么是域名？域名跟url有什么关系？"><a href="#什么是域名？域名跟url有什么关系？" class="headerlink" title="什么是域名？域名跟url有什么关系？"></a>什么是域名？域名跟url有什么关系？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">域名是人们为了便于记忆，按照一定的规则给Internet上的计算机起的名字，通常由一串用.分割的字符组成，两个或两个以上的词构成，域名是唯一的，url包含域名</span><br><span class="line"></span><br><span class="line">通俗地说，URL是一个详细地址（比如xx家yy房间xx东西）</span><br><span class="line"></span><br><span class="line">域名是一个字符串形式的服务器地址（相当于上面的xx家），这个主要是方便人阅读和记忆。</span><br><span class="line"></span><br><span class="line">IP地址是机器语言形式的服务器地址（相当于上面的xx家），这个是网络底层实际使用的地址，主要是机器来处理的。</span><br><span class="line"></span><br><span class="line">用域名访问服务器的话，计算机先回向域名服务器（dns）请求把域名翻译成IP地址，然后再去用ip地址访问服务器。</span><br><span class="line"> 域名？</span><br><span class="line">域名是由前缀和后缀组成，前缀和后缀之间通过.连接（例如：baidu.com）</span><br></pre></td></tr></table></figure><h4 id="PM-RD-QA-OP是什么意思？"><a href="#PM-RD-QA-OP是什么意思？" class="headerlink" title="PM,RD,QA,OP是什么意思？"></a>PM,RD,QA,OP是什么意思？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PM:Product  Manager 产品经理</span><br><span class="line"></span><br><span class="line">RD:Research <span class="keyword">and</span> Development engineer 研发工程师 有一定经验的专业工作者</span><br><span class="line"></span><br><span class="line">QA:Quality Aassurance  测试人员  保证产品质量</span><br><span class="line"></span><br><span class="line">OP：Operator 操作员 管理员</span><br></pre></td></tr></table></figure><p>####公众号收到消息必须是用户和公众号保持24或48小时活跃</p><h4 id="谷歌浏览器如何让申请个人用户？"><a href="#谷歌浏览器如何让申请个人用户？" class="headerlink" title="谷歌浏览器如何让申请个人用户？"></a>谷歌浏览器如何让申请个人用户？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打开浏览器-点击人头-选择管理用户-点击添加用户-邮箱注册</span><br></pre></td></tr></table></figure><p>####图数据库（GDB）</p><p>在线数据库管理系统，图数据库在进行2度以上的查询速度远高于关系型数据库</p><p>g.E():查询所有</p><h4 id="cookies和session的区别？"><a href="#cookies和session的区别？" class="headerlink" title="cookies和session的区别？"></a>cookies和session的区别？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>cookies数据存在放在客户的浏览器上，session数据存在服务器上；</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>cookies没有session安全；</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>session占用服务器的性能，当考虑减轻服务器的压力时使用cookies;</span><br><span class="line"></span><br><span class="line">总结：最好将登陆信息等重要信息放在session中，其他信息如果保留可以放在cookies里</span><br></pre></td></tr></table></figure><h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN?"></a>CDN?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">简介：CDN的全称是Content Delivery Network即内容分发网站，CDN是构建在现有网络基础之上的智能虚拟网络；</span><br><span class="line"></span><br><span class="line">作用：使用户就近获取所需内容，降低网络堵塞，提高用户访问响应速度和命中率，</span><br></pre></td></tr></table></figure><p><strong>一个汉字占两个字符，一个数字或英文（不分大小写）只占一个字符</strong></p><p>####服务器错误的几种状态</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">500</span>:服务器内部错误，可能是用户权限或者数据库连接错误</span><br><span class="line"></span><br><span class="line"><span class="number">501</span>:服务器还不具有请求功能</span><br><span class="line"></span><br><span class="line"><span class="number">502</span>:服务器上的一个错误网关，先请一下缓存或在服务器上进行刷新试试，如果不行让程序员处理</span><br><span class="line"></span><br><span class="line"><span class="number">503</span>:服务器不可用，出现的原因大多是服务器正在维护或暂停，还可能是cpu占用频率大导致，过一会就好了</span><br><span class="line"></span><br><span class="line"><span class="number">504</span>:代表网关超时，需要专业的负责人处理</span><br><span class="line"></span><br><span class="line"><span class="number">505</span>:http的版本是不受支持的，需要在internet选项的高级下进行设置</span><br></pre></td></tr></table></figure><h4 id="静默授权-非静默授权"><a href="#静默授权-非静默授权" class="headerlink" title="静默授权/非静默授权"></a>静默授权/非静默授权</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">静默授权：只要用户打开网页就可以获取他的openid，unionid,但获取不到用户的头像和昵称</span><br><span class="line"></span><br><span class="line">非静默授权：需要用户手动点击同意，可以获取用户的昵称和头像</span><br></pre></td></tr></table></figure><h4 id="unionid-openid-unionid"><a href="#unionid-openid-unionid" class="headerlink" title="unionid/openid/unionid"></a>unionid/openid/unionid</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>appid</span><br><span class="line"></span><br><span class="line">公众号的唯一标识</span><br><span class="line"></span><br><span class="line">注册即分配，可在公众号后台查询</span><br><span class="line"></span><br><span class="line">用来进行公众号，小程序等的各种交互功能</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>openid</span><br><span class="line"></span><br><span class="line">用户在该公众号下的唯一标识</span><br><span class="line"></span><br><span class="line">加密后的微信号</span><br><span class="line"></span><br><span class="line">一个公众号对应一个openid</span><br><span class="line"></span><br><span class="line">用户在关注公众号后，公众号可获取</span><br><span class="line"></span><br><span class="line">可通过openid来获取用户基本信息</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>unionid</span><br><span class="line"></span><br><span class="line">一个公司有多个公众号和小程序，一个用户对于不同的公众号和小程序有不同的openid,此时就需要申请一个微信开放平台账号，将这些公众号和小程序绑定起来，一个微信用户对同一个微信开放平台下的公众号和小程序就有相同的unionid</span><br></pre></td></tr></table></figure><h4 id="Android-ios怎么进入开发者模式"><a href="#Android-ios怎么进入开发者模式" class="headerlink" title="Android/ios怎么进入开发者模式"></a>Android/ios怎么进入开发者模式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Andriod手机直接在百度上搜索需要进入开发者模式的机型即可</span><br><span class="line"></span><br><span class="line">iOS需要结合xcode才能进入开发者模式</span><br></pre></td></tr></table></figure><p><strong>进行app/公众号测试的时候需要在android，ios,大屏，小屏，不同的操作系统上进行测试，写测试用例的时候，除了根据业务需要写用例之外，还需要考虑实际的业务场景</strong></p><h4 id="逻辑删除-物理删除"><a href="#逻辑删除-物理删除" class="headerlink" title="逻辑删除/物理删除"></a>逻辑删除/物理删除</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">物理删除：将文件或数据测底清除，不可逆</span><br><span class="line"></span><br><span class="line">逻辑删除：只是在逻辑上删除了文件或数据，没有测底删除，可逆，通过某种工具或手段还可恢复</span><br></pre></td></tr></table></figure><p>####前后端如何让对于文本框中的空格/空行需要进行校验</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">前端可以限制字数，进行校验一个空格算一个字符</span><br><span class="line">后端，可以对空行进行校验，对于不满足规则的不让存储在数据库中不允许在数据库中进行修改</span><br></pre></td></tr></table></figure><h4 id="慢查询"><a href="#慢查询" class="headerlink" title="慢查询"></a>慢查询</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户端接口能保持在<span class="number">300</span>ms以内,你就认为它性能还不错</span><br><span class="line">管理端接口能保持在<span class="number">800</span>ms内,你也认为可接受的范围</span><br><span class="line">不用公司对性能的要求不同</span><br></pre></td></tr></table></figure><p>####脏数据怎么产生的？会造成什么影响？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">脏数据：从目标中取出的数据已经过期、错误或者没有意义，这种数据就叫做脏数据。</span><br><span class="line">脏读：读取出来脏数据就叫脏读。</span><br><span class="line"><span class="number">1</span>、数据库中的并发事务处理问题：</span><br><span class="line">脏读：在并发访问的情况下，不同的事务对相同的数据进行操作，在事务A修改数据还未提交的时候，事务B对该数据进行读取，读出了事物A修改过后的数据，但是事物A最终没有提交，这种情况就是数据库中的脏读情况</span><br><span class="line">更新丢失：对于同一行数据不同事务进行更新，结果覆盖</span><br><span class="line">幻读：事务A前后两次读取，后一次读取的数据变多了，事物B在两次读取中间已经进行数据插入</span><br><span class="line">不可重复读：事务A读取了事务B修改前后的两次数据，不符合隔离型</span><br><span class="line">隔离等级：可以解决上述问题，mysql默认可重复读的隔离等级，只会存在读取的数据和数据库不一致的问题</span><br><span class="line"><span class="number">2</span>、mybati一级缓存中的脏数据：</span><br><span class="line">mybatis的一级缓存：默认是SqlSession级别,只要通过session查过的数据，都会放在session上，下一次再查询相同id的数据，都直接冲缓存中取出来，而不用到数据库里去取了。</span><br><span class="line">mybatis一级缓存脏数据：当有不同的sqlSession在对数据库进行操作，一级缓存只能保证当前sqlSession中的增删改在一级缓存中自动更新，就会产生脏数据。</span><br><span class="line"><span class="number">3</span>、mybati二级缓存中的脏数据：</span><br><span class="line">mybatis二级缓存：是SessionFactory级别，和namespace绑定，同一个namespace放到一个缓存对象中，当这个namaspace中执行了非sselect语句的时候，整个namespace中的缓存全部清除掉。</span><br><span class="line">mybatis二级缓存脏数据：引起脏读的操作通常发生在多表关联操作中，比如在两个不同的mapper中都涉及到同一个表的增删改查操作，当其中一个mapper对这张表进行查询操作，此时另一个mapper进行了更新操作刷新缓存，然后第一个mapper又查询了一次，那么这次查询出的数据是脏数据。出现脏读的原因是他们的操作的缓存并不是同一个。</span><br><span class="line"> </span><br><span class="line">所以不推荐使用mybatis的自带一二级缓存，推荐使用第三方缓存：memcached或者redis。</span><br><span class="line">（<span class="number">3</span>）常见问题：</span><br><span class="line">redis中怎么更新缓存避免脏读？</span><br><span class="line">（<span class="number">4</span>）解决方案：</span><br><span class="line">读写部分：</span><br><span class="line"><span class="keyword">if</span>(redis存在数据)&#123;</span><br><span class="line">    读取redis数据</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    数据库读取，同时存redis+设置超时时间</span><br><span class="line"> </span><br><span class="line">更新部分：</span><br><span class="line"><span class="keyword">if</span>(数据库update)&#123;</span><br><span class="line">    更新redis+设置超时时间</span><br><span class="line"> </span><br><span class="line">（<span class="number">5</span>）编码实战：</span><br><span class="line">演示读写部分和更新部分</span><br><span class="line">（<span class="number">6</span>）拓展思考：</span><br><span class="line">还有哪些其他方式进行redis数据更新</span><br><span class="line"><span class="number">1</span>、主动更新：后台点击更新缓存按钮，从DB查找最新数据集合，删除原缓存数据，存储新数据到缓存（或者用定时任务来做）</span><br><span class="line">问题：更新过程中删除掉缓存后刚好有业务在查询，那么这个时候返回的数据会是空，会影响用户体验，如果高并发穿透DB，可能导致服务器崩溃</span><br><span class="line"><span class="number">2</span>、由用户触发更新：前台获取数据时发现没有缓存数据就会去数据库同步数据到缓存</span><br><span class="line">问题：当并发请求获取缓存数据不存在的时候，就会产生并发的查询数据的操作</span><br><span class="line"> </span><br><span class="line"><span class="number">3</span>、提前加载好数据：后台点击更新缓存按钮，从DB查找最新数据集合，这里不删除缓存，通过遍历数据覆盖和删除掉无效的数据</span><br><span class="line">问题：逻辑相对麻烦，而且更新机制无法通用</span><br></pre></td></tr></table></figure><h4 id="容器？事物？"><a href="#容器？事物？" class="headerlink" title="容器？事物？"></a>容器？事物？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">简单地说，一个容器包含了完整的运行时环境：除了应用程序本身之外，这个应用所需的全部依赖、类库、其他二进制文件、配置文件等，都统一被打入了一个称为容器镜像的包中。通过将应用程序本身，和其依赖容器化，操作系统发行版本和其他基础环境造成的差异，都被抽象掉了。比如docker</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">百度百科中解释：指作为单个逻辑工作单元执行的一系列操作，要么完全地执行，要么完全地不执行。</span><br><span class="line">简单的说，事务就是并发控制的单位，是用户定义的一个操作序列。</span><br><span class="line">而一个逻辑工作单元要成为事务，就必须满足ACID属性。</span><br><span class="line">A：原子性（Atomicity）</span><br><span class="line">    事务中的操作要么都不做，要么就全做。</span><br><span class="line">C：一致性（Consistency）</span><br><span class="line">    事务执行的结果必须是从数据库从一个一致性状态转换到另一个一致性状态。</span><br><span class="line">I：隔离性（Isolation）</span><br><span class="line">    一个事务的执行不能被其他事务干扰</span><br><span class="line">D：持久性（Durability）</span><br><span class="line">    一个事务一旦提交，它对数据库中数据的改变就应该是永久性的</span><br><span class="line">事物的隔离级别：</span><br><span class="line"> <span class="number">1.</span>读未提交（Read Uncommitted）</span><br><span class="line">    引发脏读（读取了未提交的数据）</span><br><span class="line"> <span class="number">2.</span>读已提交（Read Committed）</span><br><span class="line">   这是大多数数据库系统默认的隔离级别，但不是MySQL默认的</span><br><span class="line">   只能看见已经提交事务所做的改变</span><br><span class="line">   引发不可重复读，不可重读读意味着我们同一事务执行完全相同的select语句时可能看到不一样的结果。——&gt;导致这种情况的原因可能有：(<span class="number">1</span>)有一个交叉的事务有新的commit，导致了数据的改变;(<span class="number">2</span>)一个数据库被多个实例操作时,同一事务的其他实例在该实例处理其间可能会有新的commit，多个commit提交时，只读一次出现结果不一致</span><br><span class="line"><span class="number">3.</span>可重复读（Repeatable Read）</span><br><span class="line">   这是MySQL的默认事务隔离级别</span><br><span class="line">   它确保同一事务的多个实例在并发读取数据时，看到同样的数据行</span><br><span class="line">   此级别可能出现的问题--幻读（Phantom Read），当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行</span><br><span class="line"> InnoDB和Falcon存储引擎通过多版本并发控制(MVCC，Multiversion Concurrency Control)机制解决了该问题</span><br><span class="line"><span class="number">4.</span>可串行化（Serializable）</span><br><span class="line">    这是最高的隔离级别</span><br><span class="line">    它通过强制事务排序，使之不可能相互冲突，从而解决幻读问题。简言之，它在每个读的数据行上加上共享锁。</span><br><span class="line">    可能导致大量的超时现象和锁竞争</span><br><span class="line">事务通常以begin（start） transaction 开始，以commit 或 rollback 结束。</span><br><span class="line">commit 表示提交，将事务中所有对数据库的更新写会到磁盘的物理数据库中，事务正常结束。</span><br><span class="line">rollback表示回滚，即在事务运行的过程中发生了某种故障，事务不能继续进行，系统将事务中对数据库的所有以完成的操作全部撤消，滚回到事务开始的状态。</span><br><span class="line">事物运行的三种模式：</span><br><span class="line"><span class="number">1.</span>自动提交事务</span><br><span class="line">    每条单独的语句都是一个事务，每个语句都隐含一个commit</span><br><span class="line"><span class="number">2.</span>显式事务</span><br><span class="line">    以begin transaction 开始，以commit 或 rollback 结束。</span><br><span class="line"><span class="number">3.</span>隐性事务</span><br><span class="line">    在前一个事务完成时，新事务隐式启动，但每个事务仍以commit或rollback显示结束</span><br></pre></td></tr></table></figure><h4 id="消息通知的类型"><a href="#消息通知的类型" class="headerlink" title="消息通知的类型"></a>消息通知的类型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">消息通知:App推送，微信公众号通知（用户在<span class="number">48</span>小时内与公众号保存互动），短信通知</span><br><span class="line">App推送：分为消息通知和站内信</span><br><span class="line">这是<span class="number">2</span>种消息类型，消息通知一般用户点击或清除后不会留痕，所以一般的做法是同时发送这<span class="number">2</span>种消息，PUSH强提醒，站内信为了留痕或者保留入口。</span><br><span class="line">基本定义的区别： </span><br><span class="line">站内信主要是APP内部自己设置的重要信息展示模块，展示信息的内容、样式、时间都是由APP自行设计。 </span><br><span class="line">消息通知说的就是APP PUSH通过推送通道进行消息推送，一般展示在手机的通知栏或者通过顶部弹窗展示。 </span><br><span class="line">从展示位置的区别：</span><br><span class="line">消息推送展示在手机操作系统的通知栏或者顶部弹窗，站内信是APP内部，自行设计安排。  </span><br><span class="line">从触达效果的区别：</span><br><span class="line">一般消息推送会伴随声音、震动提示用户，提醒到位；</span><br><span class="line">站内信一般是静默展示，且实现逻辑主要是用户登录APP后客户端去服务端同步数据。</span><br><span class="line">消息痕迹的区别：</span><br><span class="line">消息通知一般用户点击或清除后不会留痕；站内信可以长时间保留，主要是看APP自己的设计。  </span><br><span class="line">从事实现逻辑区别：</span><br><span class="line">消息通知是主动调用手机终端厂商或推送服务方的通道(消息推送可以通过自己研发，显然这样的研发成本较高，大部分创业公司以及互联网转型的公司都采用的是第三方工具，国内较为普遍的是有这些：腾讯信鸽，百度云推送，个推，极光推送，华为云推送。)</span><br><span class="line">站内信一般只是数据记录，在用户登录APP进入站内信模块时才会主动从客户端向服务端请求数据。</span><br></pre></td></tr></table></figure><h4 id="如何判断一个问题是前端还是后端的问题？"><a href="#如何判断一个问题是前端还是后端的问题？" class="headerlink" title="如何判断一个问题是前端还是后端的问题？"></a>如何判断一个问题是前端还是后端的问题？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">后端问题：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>观察日志，有明确的exception(终端查看日志的命令：tail -f)</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>接口报<span class="number">500</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>返回的报文不符合接口文档，参数是否区分大小写，字母拼音错误，int或者string与接口文档不一致。 <span class="number">4.</span>返回的值前端识别不了，协商后，后台配合扩充字段满足的前端需求</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>应该返回<span class="number">0</span>条记录的，但是返回了全部，应该返回<span class="number">1</span>条记录的，但是返回了多条记录</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>应该返回有序的数据，但是返回了无序的数据</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>页面结果不正确（没页数，第一页，第二页，第三页）</span><br><span class="line"></span><br><span class="line">前端问题：</span><br><span class="line"></span><br><span class="line">界面问题：贴图错误，文字错误，样式错误 </span><br><span class="line"></span><br><span class="line">功能问题：请求接口的url错误，http中的请求参数错误</span><br></pre></td></tr></table></figure><h4 id="html-css-js"><a href="#html-css-js" class="headerlink" title="html,css,js?"></a>html,css,js?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Html:文字，页面的跳转</span><br><span class="line"></span><br><span class="line">css:样式，比如排版，布局，颜色，背景</span><br><span class="line"></span><br><span class="line">Js:负责行为，交互类的问题</span><br></pre></td></tr></table></figure><h4 id="B端？C端？"><a href="#B端？C端？" class="headerlink" title="B端？C端？"></a>B端？C端？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">B端：浏览器端</span><br><span class="line"></span><br><span class="line">        后端：主页负责逻辑处理和运算</span><br><span class="line"></span><br><span class="line">        前端：主要负责展示</span><br><span class="line"></span><br><span class="line">C端：客户端</span><br><span class="line"></span><br><span class="line">         客户端：安卓，iOS</span><br><span class="line"></span><br><span class="line">  h5:是一个页面</span><br></pre></td></tr></table></figure><h4 id="字符与字节的区别"><a href="#字符与字节的区别" class="headerlink" title="字符与字节的区别"></a>字符与字节的区别</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不同的编码方式下一个字符占的字节数是不同，一般来说：一个英文或一个数字（一个字符）占一个字节，一个汉字占两个字节；</span><br><span class="line">计算机里用字节作为最基本的存储单位；字符是指计算机中使用的字母、数字、字和符号，包括：<span class="number">1</span>、<span class="number">2</span>、<span class="number">3</span>、A、B、C、~！·<span class="comment">#￥%……—*（）——+等等</span></span><br><span class="line">注意：后端只有字符的概念</span><br></pre></td></tr></table></figure><h4 id="App测试注意点"><a href="#App测试注意点" class="headerlink" title="App测试注意点"></a>App测试注意点</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">测app的时候，一个新功能需要看未登录，登录之后会员/非会员看到的东西是否一致</span><br><span class="line">一般，一个新功能上线需要兼容之前的<span class="number">2</span><span class="number">-3</span>个版本</span><br></pre></td></tr></table></figure><h4 id="Mac-python使用PIP安装软件的方法"><a href="#Mac-python使用PIP安装软件的方法" class="headerlink" title="Mac+python使用PIP安装软件的方法"></a>Mac+python使用PIP安装软件的方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install Pillow</span><br></pre></td></tr></table></figure><h4 id="PV和UV"><a href="#PV和UV" class="headerlink" title="PV和UV?"></a>PV和UV?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PV（page view ）即页面浏览量或点击量，是衡量一个网站或网页用户访问量。具体的说，PV 值就是所有访问者在 <span class="number">24</span> 小时（<span class="number">0</span> 点到 <span class="number">24</span> 点）内看了某个网站多少个页面或某个网页多少次</span><br><span class="line">PV 是指页面刷新的次数，每一次页面刷新，就算做一次 PV 流量。度量方法就是从浏览器发出一个对网络服务器的请求（Request），网络服务器接到这个请求后，会将该请求对应的一个网页（Page）发送给浏览器，从而产生了一个 PV。那么在这里只要是这个请求发送给了浏览器，无论这个页面是否完全打开（下载完成），那么都是应当计为 <span class="number">1</span> 个 PV。</span><br><span class="line"></span><br><span class="line">UV（unique visitor ）即独立访客数，指访问某个站点或点击某个网页的不同 IP 地址的人数。在同一天内，UV  只记录第一次进入网站的具有独立IP  的访问者，在同一天内再次访问该网站则不计数。UV 提供了一定时间内不同观众数量的统计指标，而没有反应出网站的全面活动。</span><br></pre></td></tr></table></figure><h4 id="日活？月活？"><a href="#日活？月活？" class="headerlink" title="日活？月活？"></a>日活？月活？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">**日活**：每天的活跃用户数量。</span><br><span class="line">新增用户的概念：渠道推广（落地页）——下载——打开浏览——注册使用；</span><br><span class="line">不同产品的活跃用户的定义不同；</span><br><span class="line"><span class="number">1.</span>社交类产品：</span><br><span class="line"></span><br><span class="line">如果是个社交类产品，至少注册了才算个活跃用户吧。如果到了产品的稳定期，是否可以更进一步，注册后并且加了n个好友才算一个活跃用户？</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>工具类产品：</span><br><span class="line"></span><br><span class="line">如果不是强制注册后才能使用，是否打开产品就算活跃了？</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>内容类产品：</span><br><span class="line"></span><br><span class="line">比如小说，用户的主要操作就是看小说，那么是否应该定义用户看小说达到多少分钟才算活跃？新闻类等内容产品大概也是一样的道理。</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>小程序名片类产品：</span><br><span class="line"></span><br><span class="line">再取一个比较特殊的例子，最近比较火热的小程序智能名片，这类产品没有下载环节，如果直接取小程序后台的数据，把打开小程序的用户算作产品的活跃用户，这种做法其实是不妥当的。因为一个普通用户打开小程序，可能是由于别人给他发了一张名片，他只是看看就走了。</span><br><span class="line"></span><br><span class="line">这严格来说并不能算是产品的用户，只有填写了资料，注册自己的名片后才算是产品的用户。所以，或许可以把发名片作为定义活跃用户的标准。</span><br><span class="line"></span><br><span class="line">**月活**：一个月内，总的活跃用户数量。在取数据的时候，一定要注意去重。</span><br><span class="line"></span><br><span class="line">先举个例子：某产品A，上线后一个月内，共获取到了<span class="number">100</span>个用户，这<span class="number">100</span>个用户每天大概会有<span class="number">50</span>个人访问。那么产品A的月活是多少呢？</span><br><span class="line"></span><br><span class="line">可能会有两种结果。</span><br><span class="line"></span><br><span class="line">一个是<span class="number">50</span>×<span class="number">30</span>=<span class="number">1500</span>，即每天的活跃量相加，也就是月活<span class="number">1500</span>；另外是<span class="number">100</span>左右。</span><br><span class="line"></span><br><span class="line">如果你是个老司机，你可能一眼就看出来<span class="number">1500</span>是不可能的，一共才<span class="number">100</span>个用户，怎么会有<span class="number">1500</span>的月活用户呢！</span><br><span class="line"></span><br><span class="line">其实正确的答案就是<span class="number">100</span>左右，当然具体的数据需要统计了才知道，但是肯定不会超过<span class="number">100</span>。这样说下来很简单，一看就明白了，但要是把这些数据混合在大量的数据里，你能否看出来问题呢？</span><br></pre></td></tr></table></figure><h4 id="weekly-beta环境"><a href="#weekly-beta环境" class="headerlink" title="weekly/beta环境?"></a>weekly/beta环境?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weekly环境是走沙箱（不会扣信用卡的钱）的，beta环境是真付</span><br></pre></td></tr></table></figure><h4 id="项目中为什么要用redis"><a href="#项目中为什么要用redis" class="headerlink" title="项目中为什么要用redis?"></a>项目中为什么要用redis?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>性能</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>并发</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>分布锁</span><br></pre></td></tr></table></figure><h4 id="微信公众号客服消息和模板消息的区别"><a href="#微信公众号客服消息和模板消息的区别" class="headerlink" title="微信公众号客服消息和模板消息的区别"></a>微信公众号客服消息和模板消息的区别</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">客服消息用于粉丝互动，沟通，转化；模板消息用于粉丝的激活；</span><br><span class="line"></span><br><span class="line">模板消息的特点：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>不受<span class="number">48</span>小时限制和公众号互动的粉丝（可筛选标签）群发消息，且不占用公众号群发次数；</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>可自定义文字颜色，可以跳转外链，并且支持定时发送任务；</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>.突破每月<span class="number">4</span>次的群发次数，拥有每日<span class="number">10</span>万条的群发能力；</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>消息的提醒以手机振动或响铃的方式显示在用户手机的通知栏内，类似于手机收到短信的通知；</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>更具有专业性；</span><br><span class="line"></span><br><span class="line">模板消息功能需要微信公众号接入第三方平台才能够实现</span><br><span class="line"></span><br><span class="line">客服消息的特点：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>如粉丝<span class="number">48</span>小时内未与公众号产生过互动，则无法通过客服消息接口进行推送；</span><br><span class="line"></span><br><span class="line">（交互包含：发送信息、点击自定义菜单、关注公众号、扫描公众号二维码、微信支付成功、扫描二维码等）；</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>客服消息接口的推送内容不能进行自定义，只能使用商城已经预设好的推送内容</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>客服消息接口每日有调用次数上限；</span><br></pre></td></tr></table></figure><h4 id="测试迭代复盘的六句金言"><a href="#测试迭代复盘的六句金言" class="headerlink" title="测试迭代复盘的六句金言"></a>测试迭代复盘的六句金言</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">第一，目标、目的；</span><br><span class="line"></span><br><span class="line">第二，结果，事实；</span><br><span class="line"></span><br><span class="line">第三，哪些好？：</span><br><span class="line"></span><br><span class="line">第四，哪些需要改善？</span><br><span class="line"></span><br><span class="line">第五，要感谢谁？</span><br><span class="line"></span><br><span class="line">第六，怎么改善？</span><br></pre></td></tr></table></figure><h4 id="科学上网？翻墙？"><a href="#科学上网？翻墙？" class="headerlink" title="科学上网？翻墙？"></a>科学上网？翻墙？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">翻墙（网络名称）：所谓翻墙，是指绕过相应的IP封锁、内容过滤、域名劫持、流量限制等，实现对网络内容的访问。境外公司曾发布几款突破网络封锁以访问海外敏感网站或邮件的翻墙软件</span><br><span class="line"></span><br><span class="line">科学上网：网络流行语，某种通过科学的方法绕过上网限制访问，利用vpn或修改hosts文件的方法实行。</span><br></pre></td></tr></table></figure><h4 id="浏览器1002状态码"><a href="#浏览器1002状态码" class="headerlink" title="浏览器1002状态码"></a>浏览器1002状态码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1002</span>是协议错误，无法连接。看下你的web服务器的并发连接数设置，还有你的网关的反ddos的设置</span><br></pre></td></tr></table></figure><p>####阿里云身份认证的规则</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://help.aliyun.com/document_detail/127521.html?spm=a2c4g.11186623.4.2.165c57e6oRUJYB</span><br></pre></td></tr></table></figure><p>####测试流程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>需求分析</span><br><span class="line"></span><br><span class="line">需求分析是由产品制定，需要细化每一个功能的细节，对于稍大或复杂的模型需要建模；（产品的需求一般是由部门负责任和产品负责任提出的）</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>需求评审会</span><br><span class="line"></span><br><span class="line">产品经理讲需求，参与的人员为开发，测试，产品，开发的负责人，产品的负责人，设计；开发主要考虑功能实现的方案和可行性，测试主要是对需求的理解提出疑问，以便根据需求写用例</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>开发人员编写排期</span><br><span class="line"></span><br><span class="line">开发根据本期需求进行排期，将排期告知测试</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>测试计划排期</span><br><span class="line"></span><br><span class="line">测试根据开发计划，定一下测试需要多长时间，告知相关人员</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>开发进行开发和自测；测试人员编写测试用例（根据需求文档）</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>用例评审</span><br><span class="line"></span><br><span class="line">参与人员：开发，测试，产品（有时间就评，没时间就省略此步骤）</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>开发提交测试之后，测试开始测试</span><br><span class="line"></span><br><span class="line">第一轮对主功能进行测试，测试中的问题提交到jira上，开发进行修改，再进行二测试，经过几轮测试没有什么严重的问题或有一些解决不了的问题，可以通知相关人员</span><br></pre></td></tr></table></figure><h4 id="移动app测试中怎么避免bug漏测？"><a href="#移动app测试中怎么避免bug漏测？" class="headerlink" title="移动app测试中怎么避免bug漏测？"></a>移动app测试中怎么避免bug漏测？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>需求评审会之前自己先理解一下本次迭代的需求，对于存在疑问的地方可以用思维导图写出来，从用户或行业者的角度写出本次设计的缺陷点；</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>需求评审会议中，带着列出的疑问点，向产品，开发沟通自己对产品的质疑或疑问点，多提几个为什么？如何实现？逻辑由前端处理还是后端服务？后端服务逻辑是否跟第三方关联？缓存处理机制如何？数据保存何处？数据获取来源？超出预期的数据怎么处理？</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>需求评审完成之后，按照一定的功能，将需求拆分成若干大模块，大模块拆成小功能点，然后考虑小功能点的具体实现流程</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>。用例设计完成之后，进行评审（开发和产品）</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>根据线上用户反馈缺陷完善用例</span><br></pre></td></tr></table></figure><p>####自动化</p><p>自动化分为UI自动化（PO）和接口自动化</p><h4 id="接口测试"><a href="#接口测试" class="headerlink" title="接口测试"></a>接口测试</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">接口文档管理工具： swagger</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>要想进行接口测试，首先看需要有接口文档</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>数据库接口文档，在进行接口测试的过程中，经常需要到数据库中判断接口对数据的操作结果</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>多跟开发人员沟通，理清待测接口每个参数和响应字段的含义</span><br></pre></td></tr></table></figure><h4 id="测试设计"><a href="#测试设计" class="headerlink" title="测试设计"></a>测试设计</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>测试设计的流程套路</span><br><span class="line"></span><br><span class="line">a.理解需求，解决了什么问题</span><br><span class="line"></span><br><span class="line">b.站在用户的角度进行场景分析</span><br><span class="line"></span><br><span class="line">c.试用市场上已实现的同类产品，进行竞品分析</span><br><span class="line"></span><br><span class="line">d.清楚系统逻辑架构和业务流程</span><br></pre></td></tr></table></figure><h3 id="测试相关单词"><a href="#测试相关单词" class="headerlink" title="测试相关单词"></a>测试相关单词</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>query[<span class="string">'kwɪri]:质问，疑问，查询</span></span><br><span class="line"><span class="string">2.Raw[rɔ]:生的</span></span><br><span class="line"><span class="string">3.merge  [mɜːdʒ] vt. 合并；使合并；吞没 ,vi. 合并；融合</span></span><br><span class="line"><span class="string">4.sequence ['</span>si:kwəns] </span><br><span class="line">n. [数][计] 序列；顺序；续发事件</span><br><span class="line">vt. 按顺序排好</span><br><span class="line"><span class="number">5.</span>script [skript] </span><br><span class="line">n. 脚本；手迹；书写用的字母</span><br><span class="line"><span class="number">6.</span>integer  [ˈɪntɪdʒə(r)] </span><br><span class="line">n. 整数</span><br><span class="line"><span class="number">7.</span>context  [ˈkɒntekst]</span><br><span class="line">n. 环境；上下文；来龙去脉</span><br><span class="line"><span class="number">8.</span></span><br><span class="line">draft [drɑːft]</span><br><span class="line">n. 草稿</span><br><span class="line"><span class="number">9.</span>protocol  [ˈprəʊtəkɒl]</span><br><span class="line">n. 协议；草案；礼仪</span><br><span class="line">timestamp  [<span class="string">'taimstæmp]</span></span><br><span class="line"><span class="string">n. 时间戳；时间邮票</span></span><br></pre></td></tr></table></figure><h4 id="手机截屏快捷键"><a href="#手机截屏快捷键" class="headerlink" title="手机截屏快捷键"></a>手机截屏快捷键</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">苹果手机截屏键：关机键+home键</span><br><span class="line"></span><br><span class="line">小米手机的截屏：右边音量下键+屏幕上的三个横线同时摁；</span><br><span class="line"></span><br><span class="line">Vivo手机截屏：右侧手机电源键+音量下键</span><br><span class="line"></span><br><span class="line">OPPO手机截屏：三指往下滑；</span><br></pre></td></tr></table></figure><p>####PMO?MVP?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PMO(Project Management Office)一般称为项目管理办公室、项目管理中心或者项目管理部，是在组织内部将实践、过程、运作形式化和标准化，同时在组织内各机能间，为推动专案前进产生各种工作资源冲突时，负责协调整合的机能，所以是为了提高组织管理成熟度的核心部门，它根据业界最佳实践和公认的项目管理知识体系（PMBOK），并结合企业自身的业务和行业特点，为组织量身定制项目管理流程、培养项目经理团队、建立项目管理信息系统、对项目提供顾问式指导、开展多项目管理等，以此确保项目成功率的提高和组织战略的有效贯彻和执行。</span><br><span class="line"></span><br><span class="line">MVP的全称为Model-View-Presenter，Model提供数据，View负责显示，Presenter负责逻辑的处理。</span><br></pre></td></tr></table></figure><h4 id="Mac电脑的快捷键"><a href="#Mac电脑的快捷键" class="headerlink" title="Mac电脑的快捷键"></a>Mac电脑的快捷键</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>Mac电脑Chrome浏览器开发者工具的快捷键：</span><br><span class="line"></span><br><span class="line">开发者工具：option＋command＋i</span><br><span class="line"></span><br><span class="line">javascript控制台：option＋command＋j</span><br><span class="line"></span><br><span class="line">或者按option＋command＋c也可以打开</span><br><span class="line"></span><br><span class="line">在终端中打开另一个终端的快捷键：command+T</span><br><span class="line"></span><br><span class="line">Mac电脑将文件转化为txt快捷键:shift+command+T</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">2.</span>macos怎么卸载电脑上的软件？</span><br><span class="line"></span><br><span class="line">访达-应用程序-选中要卸载的程序-拖到废纸篓里即可</span><br></pre></td></tr></table></figure><h4 id="MOCK"><a href="#MOCK" class="headerlink" title="MOCK"></a>MOCK</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mock：对与某些不容易构造或者不容易获取的对象，用一个虚拟的对象来创建的方法</span><br><span class="line"></span><br><span class="line">主要用在以下三个地方：</span><br><span class="line"><span class="number">1.</span>当另一方接口或者服务还未完成，拽项目进度时，可以通过mock的方式，实现并行开发；</span><br><span class="line"><span class="number">2.</span>mock,有时候自动化测试需要一个持续稳定的环境，也可以对不是很重要的服务进行mock处理。</span><br><span class="line"><span class="number">3.</span>需要模拟异常情况，但是这种异常不容易触发时，可以使用mock实现</span><br></pre></td></tr></table></figure><h4 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">200</span>请求成功，<span class="number">201</span>新增成功，<span class="number">204</span>删除成功</span><br><span class="line"></span><br><span class="line"><span class="number">302</span>请求重定向</span><br><span class="line"></span><br><span class="line"><span class="number">400</span>代表客户端发送的请求有语法错误，<span class="number">401</span>代表访问的页面没有授权，<span class="number">403</span>表示没有权限访问这个页面，<span class="number">404</span>代表没有这个页面</span><br><span class="line"></span><br><span class="line"><span class="number">500</span>代表服务器内部异常，<span class="number">504</span>代表服务器端超时，没返回结果</span><br></pre></td></tr></table></figure><h4 id="GET请求和POST请求的区别："><a href="#GET请求和POST请求的区别：" class="headerlink" title="GET请求和POST请求的区别："></a>GET请求和POST请求的区别：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、GET使用URL或Cookie传参。而POST将数据放在BODY中。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、GET的URL会有长度上的限制，则POST的数据则可以非常大。</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>get的效率高于post</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、POST比GET安全，因为数据在地址栏上不可见。</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、一般get请求用来获取数据，post请求用来发送数据。</span><br></pre></td></tr></table></figure><h4 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JS是什么？</span><br><span class="line">- 是一种解释性脚本语言（代码不进行预编译）</span><br><span class="line">- 主要用来向HTML（标准通用标记语言下的一个应用）页面添加交互行为</span><br><span class="line">- 可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离</span><br><span class="line">- 跨平台特性，在绝大多数浏览器的支持下，可以在多种平台下运行（如Windows、Linux、Mac、Android、iOS等）。</span><br></pre></td></tr></table></figure><h4 id="金数据"><a href="#金数据" class="headerlink" title="金数据"></a>金数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">是一款免费的表单设计和数据收集工具，可用来设计表单，制作在线问卷调查，组织聚会，询问意见，整理团队数据资料，获得产品反馈等。</span><br></pre></td></tr></table></figure><p>####git?github?JenkinS?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git分布式版本控制系统，主要是项目版本管理</span><br><span class="line"></span><br><span class="line">github项目托管平台，GitHub可以托管各种git库</span><br><span class="line"></span><br><span class="line">jenkins是基于java开发的一种持续集成工具，用于监控持续重复的工作</span><br></pre></td></tr></table></figure><h4 id="前后端的区别"><a href="#前后端的区别" class="headerlink" title="前后端的区别:"></a>前后端的区别:</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前端：对于web项目，前端主要是负者页面展示的，只要我们肉眼能看到的，都是前端做的，前端需要会html,css,js</span><br><span class="line"></span><br><span class="line">后端：主要是进行逻辑处理和数据计算，需要会Java等语言</span><br><span class="line"></span><br><span class="line">前端和后端的区别：前端就时展示出来的，客户能看到的，后端主要负责逻辑处理和数据计算，前端和后端主要是通过接口来进行连接</span><br></pre></td></tr></table></figure><p>####消息通知和站内信的区别:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">消息通知：手机通知栏里接收到的消息</span><br><span class="line"></span><br><span class="line">站内信：app内我的消息通知栏</span><br><span class="line"></span><br><span class="line">APP才会有站内信和消息通知，公众号只会在公众号内部发送消息</span><br></pre></td></tr></table></figure><h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>如果浏览器中的数据显示跟别人的浏览器数据显示不一样，可以找到浏览器右上角的...-更多工具-清除浏览器数据即可</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>抓包windows上会使用fiddler，Mac上使用Charles</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>安卓<span class="number">4.2</span>之后的设备如何查找开发者选项？</span><br><span class="line">设置-关于手机-连续点击<span class="number">7</span>次软件版本号</span><br></pre></td></tr></table></figure><h3 id="工作经验总结"><a href="#工作经验总结" class="headerlink" title="工作经验总结"></a>工作经验总结</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span>当测完一个APP打开另外一个APP时需要第一个APP去主动询问用户是否打开读写权限</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>当一个app增加了新的音频或视频模块时需要考虑，当一个音频或视频播放时去打开另一个音频或视频上一个音频是否会自动停止，预期结果：会</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>当公众号升级的时候，需要考虑到老公众号和新公众号之间的兼容(老公众号的链接在新公众号中能否打开)</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>当测试过程中开发出来的功能与产品最初的原型或需求不符，先找产品确认看是不是在开发时改了需求忘记告知测试，如果不是，问一下产品这种实现行不，如果产品感觉不行想要改的话叫上开发人员一起同步一下信息，省得开发再找测试说这不是BUG需求上没有等</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>测试APP时当有分享链接的时候，需要考虑到用户先分享出去然后删除，其他用户看到应该是什么样子的，比如笔记，分享出去，然后用户本地删除，其他用户点开的一个场景</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>测视频全屏播放时需要考虑横屏全屏和竖屏全屏</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>早会汇报工作只汇报结果和数据，不要一直说自己干了啥</span><br><span class="line"></span><br><span class="line"><span class="number">8.</span>线上反馈问题时：</span><br><span class="line">APP：问产品APP的版本号，手机型号和系统版本</span><br><span class="line">公众号：问产品微信版本号，手机型号和系统版本，哪个频道？</span><br><span class="line"></span><br><span class="line"><span class="number">9.</span>在这个网址的后面加上用户的openid可以模拟用户访问其信息：https://域名/delta/landing/wx7ef1a9a686875324<span class="comment">#/my-openid</span></span><br><span class="line"></span><br><span class="line"><span class="number">10.</span>用户H5页面加载不出来：http://cdn.dns-detect.alicdn.com/把静态页面地址发给用户，用这个cdn工具测一下</span><br><span class="line"></span><br><span class="line"><span class="number">11.</span>线上APP出现问题，该如何定位？</span><br><span class="line">首先问产品是安卓，ios还是两种系统都会出现？线上反馈出现问题的具体现象和操作步骤？开发改完bug之后，询问问题已经修复打测试包了吗？我先在测试环境看一下还有问题没，如果内问题就发版吧</span><br><span class="line"></span><br><span class="line"><span class="number">12.</span>用户没有关注公众号是获取不到模板消息的</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Yapi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试相关常识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>接口测试</title>
    <link href="undefined2019/10/07/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    <url>2019/10/07/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="如何写接口测试用例？"><a href="#如何写接口测试用例？" class="headerlink" title="如何写接口测试用例？"></a>如何写接口测试用例？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">接口测试用例可分为混合场景测试用例和单个接口测试用例</span><br><span class="line"></span><br><span class="line">写测试用例之前需要先进行场景设计，模拟用户的实际操作，不知道的接口或参数可以直接用charles抓包解决；</span><br><span class="line">写接口测试用例首先看接口文档，看接口文档（swagger）涉及到哪写方面,j接着在石墨上根据着几个大点进行细分</span><br></pre></td></tr></table></figure><h2 id="接口测试的概念？"><a href="#接口测试的概念？" class="headerlink" title="接口测试的概念？"></a>接口测试的概念？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">绕过前端，直接对后端的功能进行测试</span><br></pre></td></tr></table></figure><h2 id="接口测试的流程"><a href="#接口测试的流程" class="headerlink" title="接口测试的流程?"></a>接口测试的流程?</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 需求文档和接口文档</span><br><span class="line"><span class="number">2.</span>编写测试用例 设计测试数据</span><br><span class="line"><span class="number">3.</span>执行测试</span><br><span class="line">    - 定位接口资源</span><br><span class="line">    - 提交请求数据</span><br><span class="line">    - 验证返回结果</span><br></pre></td></tr></table></figure><h2 id="接口测试的作用？"><a href="#接口测试的作用？" class="headerlink" title="接口测试的作用？"></a>接口测试的作用？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 精准定位BUG</span><br><span class="line"><span class="number">2.</span> 发现程序中的安全隐患 </span><br><span class="line"><span class="number">3.</span> 提高测试效率</span><br></pre></td></tr></table></figure><h2 id="接口测试的测试点？"><a href="#接口测试的测试点？" class="headerlink" title="接口测试的测试点？"></a>接口测试的测试点？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>功能测试</span><br><span class="line">业务流程测试：正向场景逆向场景</span><br><span class="line">    特殊字符</span><br><span class="line">    参数类型</span><br><span class="line">    参数有/无/null</span><br><span class="line">    所有必选参数</span><br><span class="line">   组合可选参数</span><br><span class="line">    边界值测试等等</span><br><span class="line"><span class="number">2.</span>性能测试</span><br><span class="line">响应时间</span><br><span class="line">吞吐量</span><br><span class="line">并发数等等</span><br><span class="line"><span class="number">3.</span>安全测试</span><br><span class="line">敏感信息是否加密</span><br><span class="line">必要参数是否后端校验</span><br><span class="line">接口是否防恶意请求等等</span><br></pre></td></tr></table></figure><h2 id="接口测试的用例如何写？"><a href="#接口测试的用例如何写？" class="headerlink" title="接口测试的用例如何写？"></a>接口测试的用例如何写？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">包含以下部分：ID,模块，接口名称，请求URL，用例名称，前置条件，请求类型，请求类型，请求参数类型，请求参数，预期结果，实际结果，备注</span><br><span class="line">最好用EXCEL写</span><br></pre></td></tr></table></figure><p>##接口测试的分类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>WEB接口测试(BS架构的)</span><br><span class="line"></span><br><span class="line">服务器接口测试 : 公司内部系统使用的接口</span><br><span class="line">第三方接口测试(外部接口测试):调用其他公司开发的接口，比如:天气预报 支付宝支付接口，微信支付接口</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>模块接口测试(CS架构的)</span><br><span class="line"></span><br><span class="line">比如:QQ 等等</span><br></pre></td></tr></table></figure><h2 id="restful架构风格"><a href="#restful架构风格" class="headerlink" title="restful架构风格"></a>restful架构风格</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">作用：提高文档的易读性</span><br><span class="line">三要素：</span><br><span class="line"><span class="number">1.</span>URL和请求方式</span><br><span class="line">URL(统一资源定位符) http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/api/departments/</span><br><span class="line">http = 访问协议， https ftp ftps</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> = 服务器的ip 通过ip地址找到服务器</span><br><span class="line"><span class="number">8000</span> = 端口号 通过端口号 找到应用程序 </span><br><span class="line">/api/departments/ = 资源路径 找到应用程序的功能模块</span><br><span class="line"></span><br><span class="line">常见的请求方式: GET POST PUT DELETE 对应的 查 增 改 删</span><br><span class="line"><span class="number">2.</span>提交数据格式</span><br><span class="line">两种格式:</span><br><span class="line">格式<span class="number">1</span></span><br><span class="line">键值对: username=huluwa&amp;passowrd=jiuyeye&amp;aihao=tuhuo&amp;aihao=tushui </span><br><span class="line">格式<span class="number">2</span></span><br><span class="line">JSON格式:</span><br><span class="line">&#123;<span class="string">"username"</span>:<span class="string">"huluwa"</span>, <span class="string">"password"</span>:<span class="string">"jiuyeye"</span>, <span class="string">"aihao"</span>:[<span class="string">"tuhuo"</span>,<span class="string">"tushui"</span>,<span class="string">"yinshen"</span>]&#125;</span><br><span class="line"><span class="number">3.</span>查看响应结果</span><br><span class="line">两大关注点: </span><br><span class="line"><span class="number">1.</span> 状态码:</span><br><span class="line"><span class="number">2</span>XX 请求成功， <span class="number">200</span> <span class="number">201</span>新增成功 <span class="number">204</span> 删除成功</span><br><span class="line"><span class="number">3</span>XX 资源重定向 ， <span class="number">302</span>请求重定向， <span class="number">304</span> 读取缓存</span><br><span class="line"><span class="number">4</span>XX 浏览器端异常 ， <span class="number">404</span>URL地址错误 比如 有空格 或者 字母写错了 </span><br><span class="line"><span class="number">5</span>XX 服务器端异常， <span class="number">500</span> 服务器挂了</span><br><span class="line"><span class="number">2.</span> 响应体: </span><br><span class="line">HTML格式数据</span><br><span class="line">JSON格式的数据</span><br></pre></td></tr></table></figure><h2 id="接口测试工具-Postman"><a href="#接口测试工具-Postman" class="headerlink" title="接口测试工具:Postman"></a>接口测试工具:Postman</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击网址：https://www.getpostman.com/apps，直接点击下一步就行</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">简单的使用方法：点击页面上方的+，选择请求方式，输入URL，点击send即可；</span><br></pre></td></tr></table></figure><p>##接口测试工具：Yapi</p><p>###特点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>基于Json5和Mockjs定义接口返回数据的结构和文档，效率提升多倍</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>扁平化权限设计，既保证了大型企业级项目的管理，又保证了易用性</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>类似postman的接口调试</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>自动化测试，支持对response断言</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>MockServer除支持普通的随机mock外，还增加了Mock期望功能，根据设置的请求过滤规则，返回期望数据</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>支持postman，har,swagger数据导入</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>免费开源，内部部署，信息再也不怕泄漏</span><br></pre></td></tr></table></figure><p>###Yapi的使用文档</p><p>测试集合-动态（查看项目的操作日志）；-设置（项目组长可以编辑项目信息）；-成员管理（可以添加成员）</p><p>新建一个接口分三步：获取权限，找到一个项目，新建接口</p><p>如果在项目列表中找不到自己想要的项目,可以联系项目组长，把自己添加到项目中</p><p><strong>1.创建分组</strong>只有超级管理员可以创建分组</p><p><strong>2.创建项目</strong>分组成员可创建项目（不是成员可联系分组组长）；项目名称不能重复，包括其他分组；基本路径为接口统一添加了前缀</p><p>1.修改项目（点开项目-项目列表详情页-设置-可修改项目头像和图标/将项目迁移到不同分组内）</p><p>2.复制项目（鼠标放到项目上，左上角有一个复制按钮）</p><p>3.删除项目（进入项目-设置-项目设置-危险操作-查看）</p><p><strong>3.Yapi使用时需要安装Cross-request插件</strong></p><p>Yapi测试使用流程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建分组（个人空间旁边的+号）-创建项目（点击头像旁边的+号/添加项目按钮）-设置（swagger自动同步-创建测试结合，导入接口,自动更新swagger接口数据到Yapi平台）-新建测试结合-新建接口（上一个接口里的参数或返回值作为下一个接口的参数时，.&#123;key&#125;.&#123;params|body&#125;.&#123;path&#125;-其中 ，. 是使用 动态变量 的标志，<span class="number">.269</span>.params 即表示 key 值为 <span class="number">269</span> 用例的请求参数，<span class="number">.269</span>.body 即表示 key 值为 <span class="number">269</span> 用例的返回值。）</span><br></pre></td></tr></table></figure><p>###Yapi的介绍</p><p>1.人员组成：超级管理员（创建组长，分配组长，管理所有成员信息），组长（创建项目，管理分组或项目信息，管理开发着雨成员），开发者/成员（不允许创建分组，不允许修改分组或项目信息）</p><p>组长一般是由项目组长或BU负责人担任（BU是英文business unit的缩写,BU manager –业务单元管理!）</p><p>组长分为：分组组长（修改/删除/创建分组下的项目，分组组长只需要对项目负责，将项目的操作任务安排给项目组长）和项目组长（只属于某一个项目无法操作项目所属分组，是Yapi的基础管理者）</p><p>在每个项目中将服务端开发者设置为项目组长权限，客户端开发者设置为开发者权限</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yapi只需要配置相关的参数和断言语句，就能实现自动化测试</span><br></pre></td></tr></table></figure><p>###Yapi中一个接口的返回结果作为下一个接口的请求参数该如何设置？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">设置-开启json5/开启消息通知(query-返回数据开启)</span><br><span class="line"></span><br><span class="line">设置-环境配置-<span class="keyword">global</span>（全局变量，接口运行或测试集合中可以通过&#123;&#123;<span class="keyword">global</span>.全局变量名&#125;&#125;）来访问当前环境变量下定义的全局变量</span><br><span class="line">**请求配置：**</span><br><span class="line">请求参数处理脚本(根据confluence中的HTTPheader来写)</span><br><span class="line">context.requestHeader.nonce= context.utils.md5(`$&#123;context.hostname&#125;-$&#123;storage.getItem(<span class="string">"userId"</span>)&#125;-$&#123;Date.now()&#125;`)</span><br><span class="line">context.requestHeader.version=<span class="string">"1.2.0"</span></span><br><span class="line">context.requestHeader.channel=<span class="string">"BE83628C-4A99-4F2F-B26F-AC828D591908"</span></span><br><span class="line">context.requestHeader.platform=<span class="string">"iOS"</span></span><br><span class="line">context.requestHeader.deviceInfo=<span class="string">"model=iPhone10,3&amp;os=iOS 12.2&amp;size=1125x2436&amp;net=unknown"</span></span><br><span class="line"><span class="keyword">if</span>(context.pathname!=<span class="string">"/yiban-app/api/user/v1.0.0/getCheckcode"</span>)&#123;</span><br><span class="line">    context.requestHeader.token=storage.getItem(<span class="string">"token"</span>)</span><br><span class="line">    context.requestHeader.userId=storage.getItem(<span class="string">"userId"</span>)）</span><br><span class="line">响应数据处理脚本</span><br><span class="line">（<span class="keyword">if</span>(context.pathname==<span class="string">"/yiban-app/api/user/v1.0.0/getCheckcode"</span>)&#123;</span><br><span class="line">    storage.setItem(<span class="string">'token'</span>, context.responseData.data.token)</span><br><span class="line">    storage.setItem(<span class="string">'userId'</span>, context.responseData.data.userVo.userId)）</span><br><span class="line">注意：这个根据公司wiki上的请求头来规范来定</span><br></pre></td></tr></table></figure><h4 id="断言？"><a href="#断言？" class="headerlink" title="断言？"></a>断言？</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">assert</span>.equal(body.code, <span class="number">200</span>)</span><br><span class="line">//心愿id数组</span><br><span class="line">list_1 = body.data.othersTeamWish.map(item=&gt;item.partnerWishId)</span><br><span class="line">//对心愿id数组作降序</span><br><span class="line">list_2 = body.data.othersTeamWish.map(item=&gt;item.partnerWishId).sort(function(a, b)&#123;return b - a&#125;)</span><br><span class="line">//默认的待认领列表按时间降序排列，如果list_1有list_2相同，则排序正确</span><br><span class="line"><span class="keyword">assert</span>.deepEqual(list_1, list_2)</span><br></pre></td></tr></table></figure><h4 id="终端中请求mock地址"><a href="#终端中请求mock地址" class="headerlink" title="终端中请求mock地址?"></a>终端中请求mock地址?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X post ‘mock地址’ | jq ‘.’</span><br></pre></td></tr></table></figure><p><strong>接口用例设计主要是参数校验，功能校验、业务场景校验、安全性及性能校验</strong></p>]]></content>
    
    
    <categories>
      
      <category>Yapi</category>
      
    </categories>
    
    
    <tags>
      
      <tag>接口测试</tag>
      
      <tag>Yapi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>敏捷开发</title>
    <link href="undefined2019/09/20/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/"/>
    <url>2019/09/20/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##App进行一次迭代的流程：</p><p><strong>1.需求评审会</strong>：产品经理，开发（前端，iOS，andriod）,测试坐在一起，产品对这一期的需求进行讲解，开发和测试可以对不懂或难以理解，不好实现的功能进行说明，没有疑问，开发先领一下任务（测试也可以领），看一下需要多长时间能够完成。<br><strong>2.启动会</strong>，开发说一下自己对所领任务的一个需求理解，产品对开发说的不足的地方进行补充，然后大家一起确定一下完成任务需要多长时间，什么时候可以提审，测试什么时候可以测，大概需要多长时间可以测完；产品什么时候可以上线；确定好时间之后只给开发一次延期的机会，如果一次延期还做不完给予扣绩效处罚。<br><strong>3.开发对产品进行开发，测试理解需求文档，写测试用例；</strong><br><strong>4.开发写完，测试开始根据测试用例进行测试；</strong>（开发自测没有问题，会打包发一个测试的链接，点开链接下载测试版的APP，进行测试，有缺陷的话会提交到jira上）(如果时间比较紧的话，开发可以改完一部分bug之后，直接开发)（一般情况下后台的接口会先开发完，开发完之后可以先测接口）<br><strong>5.测试环境测完，发现问题开发进行改正，改完测试回测没有问题可以发布预生产环境，预生产环境测完没有问题可以发布到真正的生产环境中</strong>线上如果有用户反馈及时跟踪定位缺陷，在下一个版本进行修复；<br><strong>6.本次迭代完成之后测试写一份测试报告</strong><br>在测试过程中，测试环境可以随便更改，但线上环境不要随便动，会影响线上用户的使用（切记），如果在测试过程中对于需求不是特别清楚，可以直接问产品，一定要记得及时沟通，有什么需要开发协助的可以直接跟开发或者开发领导提</p>]]></content>
    
    
    
    <tags>
      
      <tag>敏捷开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>公众号测试</title>
    <link href="undefined2019/09/03/%E5%85%AC%E4%BC%97%E5%8F%B7%E6%B5%8B%E8%AF%95/"/>
    <url>2019/09/03/%E5%85%AC%E4%BC%97%E5%8F%B7%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##基础功能点</p><p>​    是否可以正常的关注和取消关注<br>    我们自己提供出去的二维码能够被用户识别，扫描后即可关注我们<br>    用户回复关键字，是否能得到正确的回复<br>    用户是否可以查看往期文章，历史资料<br>    群发用户是否可以收到我们的消息</p><p>##扩展功能点（微商网站类型）</p><p>​    测试基础功能<br>        登录，注册，支付，注册发送的验证码是否可以用等等<br>    测试性能<br>        有时一些微站会进行秒杀活动，需要进行性能测试，保证我们的API接口不崩溃<br>    测试数据库<br>        检查数据是否正常入库或者已进行修改<br>    测试界面的一些数据信息<br>        进行一些操作之后，看看界面的一些信息是否做实时更新<br>    界面检查<br>        不同的手机界面展示不一样</p>]]></content>
    
    
    <categories>
      
      <category>公众号</category>
      
    </categories>
    
    
    <tags>
      
      <tag>公众号</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pycharm永久激活方法</title>
    <link href="undefined2019/09/03/Pycharm%E6%B0%B8%E4%B9%85%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/"/>
    <url>2019/09/03/Pycharm%E6%B0%B8%E4%B9%85%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##Pycharm的永久激活方法<br><strong>第一步：首先电脑上有专业版的Pycharm,点击此链接，下载破解补丁</strong><br>[<a href="https://pan.baidu.com/s/1mcQM8CLUnweY02ahKEr4PQ]" target="_blank" rel="noopener">https://pan.baidu.com/s/1mcQM8CLUnweY02ahKEr4PQ]</a></p><p><strong>第二步：将下载好的破解补丁文件移动到 /Applications/PyCharm.app/Contents/bin/ 目录中</strong></p><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;  mv 破解补丁 /Applications/PyCharm.app/Contents/bin/  </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>第三步：用编辑器打开 /Applications/PyCharm.app/Contents/bin/pycharm.vmoptions 文件，添加  -javaagent:你pycharm的安装路径\bin\JetbrainsCrack-release-enc.jar在最后一行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">​```python</span><br><span class="line">  cd /Applications/PyCharm.app/Contents/bin/</span><br><span class="line">  sudo vi pycharm.vmoptions</span><br></pre></td></tr></table></figure><p><strong>在文件的最下面一行输入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:/Applications/PyCharm.app/Contents/bin/破解补丁</span><br></pre></td></tr></table></figure><p><strong>第四步：启动PyCharm,输入下方的激活码激活，然后点击ok即可。</strong></p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;  ```python</span><br><span class="line">  YZVR7WDLV8-eyJsaWNlbnNlSWQiOiJZWlZSN1dETFY4IiwibGljZW5zZWVOYW1lIjoiamV0YnJhaW5zIGpzIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifV0sImhhc2giOiIxMTA1NzI3NC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-rsJR5mlJcjibqRu1gQAMUCngMe8i+AOWIi+JZkNFYPET2G1ONcLPcIzoATTRi6ofkDm5l+<span class="number">3</span>Y4HXjBPjVU6bHDdMBAzCnUqpXKsCknwSYyPSU0Y5pzuLvw6O9aPlQ46UBoTEC2BL5W6f11S7NlAq7tTbDuvFUynqSGAmTEfuZtKmzRmp20ejTPuMlSO7UqSkZvkg6YvSTrax1d2K+P9SAmVGZ9iC7AzBs4AwTf84QB9qHvE/Nh0oELSHWGG9hsZZ7sVghI/<span class="number">39</span>/jPQFTp8GLFsl36ZPybPhGDam721zxS9H++/eJk23Jz3nxaRluE4dWmpHrDg1qBHp8qVpSFejg2QYw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/<span class="number">5</span>oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/<span class="number">78</span>TmVqFl8nOeD5+<span class="number">07</span>B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+<span class="number">2</span>h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/<span class="number">72</span>W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+<span class="number">9</span>zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/<span class="number">1</span>SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+<span class="number">9</span>x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure><p> ```</p>]]></content>
    
    
    <categories>
      
      <category>Pycharm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mac</tag>
      
      <tag>Pycharm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="undefined2019/09/02/test/"/>
    <url>2019/09/02/test/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>##测试人事面试的问题</p><p>*<em>1.自我介绍 *</em></p><p>您好！我叫…，今年…岁，来自…，毕业于…，一直从事…行业，目前有3年的工作经验，熟悉功能测试，自动化测试和接口测试，最近的一个项目是…(对最近的一个项目进行介绍)。</p><p><strong>2.什么专业？为什么想要干测试呢？</strong></p><p> …</p><p><strong>3.你为什么要从上家公司离职？</strong> </p><p>在之前的公司待了两年，技术上没有什么发展空间了，还年轻，就想换一个更好的环境，有一个更大的发展空间。</p><p><strong>4.未来3到5年的一个职业规划？</strong></p><p> … </p><p><strong>5.你们公司在哪？</strong></p><p>（具体到街道，哪号楼，公司旁边有啥？你平时座什么车去？） … </p><p><strong>6.你们公司有多少个人？有几个测试？几个开发？你们由谁管？</strong></p><p>23个人，公司的人员组成：人事（1），老板（1），财务（2），行政（1）， 我们公司技术团队有18个人，前端（4），后台（4），UI设计师（1），andriod（1）,ios（2）,测试（3），运维（1）,产品经理（2）</p><p><strong>7.你们公司主要做什么的？</strong></p><p> … </p><p><strong>8.你经常和那些部门沟通配合？</strong> </p><p>我们经常和前端，后端，UI,产品沟通配合</p><p><strong>9.你们公司老板叫什么？</strong></p><p> … </p><p><strong>10.你之前薪水是多少？现在期望薪资是多少？</strong> </p><p>… </p><p><strong>11.你的薪资是由什么组成的？</strong> </p><p>基本工资+绩效，基本工资.k,绩效工资.k,绩效根据每个月KPI考核表评定，公司五险一金是按照国家最低标准交的，每个月大概扣四百多，扣除个人所得税800多，每个月工资税后大概7.5k左右，不过每个月都有交通补贴（10）+餐补（15），每个月到手差不多8k左右。 </p><p><strong>12.你对公司加班有什么看法？</strong></p><p> 合理的加班或者是线上有急事这样的加班，肯定是义不容辞的，但是如果是形式性加班，每天固定几点才能走或者是996这样的，比较不希望有这样的情况。 </p><p>*<em>13.你还有什么问题要问的吗？ *</em></p><p>技术面试：咱们项目组有多少个人？项目目前处于什么阶段测试情况？都做哪些方面的测试？ 人事面试：咱们公司五险一金的基数？公司加班多不多？上下班时间弹性吗？多久涨一次薪？ </p><p>*<em>14.你的项目做了多久？ *</em></p><p>6个月 </p><p>*<em>15.说一下你的优点？ *</em></p><p>性格外向，喜欢交朋友，擅于与人沟通，具备团队合作精神；有责任心，耐心，勇于担当；学习能力强，能吃苦，抗压能力强；对于要做的事情很执着，一分钟都不想耽误，直至完成；工作生活中都很守时重诺；</p><p>*<em>16.说一下你的缺点？ *</em></p><p>太追求完美，只要自己认定的事，不仅要做成，还要做的非常棒，不允许有任何瑕疵，因此做事情的时候，自己总会有很大压力，担心达不到自己的预期； </p><p>*<em>17.你的领导是怎么评价你的？ *</em></p><p>工作很努力，学习能力强，什么事交给我做很放心 </p><p><strong>18.你的同事是怎么评价你的？</strong></p><p> 之前的同事她们都很喜欢跟我搭档做事，说我特别的靠谱，好沟通 </p><p><strong>19.能否接受出差？</strong></p><p> 出差的话，可以接受，但不知道贵公司出差频率怎么样？大概去哪些城市？</p><p><strong>20.你对我们公司有什么了解的吗？</strong></p><p> … </p><p>*<em>21.谈谈你对跳槽的看法？ *</em></p><p>跳槽分为很多种，对于处理不好同事关系等原因在公司待不下去跳槽，这个我是不看好的，这是属于个人问题，如果不改正，到下一家公司也很难待下去；如果是在一个公司呆了两三年，技术和个人发展很长一段时间没有增长，可以适当的转换环境，在新的环境里可以有新的思路，这种我是不反对的，而我选择跳槽也是因为这个原因。</p><p>*<em>22.你想找一个什么样儿的公司？ *</em></p><p>找一个可以能用到我会的这些方面的公司，其次是能在这个公司被认可，希望大家都喜欢技术层面的，有气氛，大家一起想把项目做成，大家都积极努力。 </p><p>*<em>23.你的优势在哪？ *</em></p><p>首先，比较喜欢做测试，兴趣还是很重要的，所以会非常积极的研究适合现在用的技术，研究一些适合现在用的工具，思维比较缜密，测试对细节的思考也是比较重要的，跟团队的沟通和交流也还可以。</p><p>##功能测试面试的问题</p><p><strong>1.常用的Linux命令</strong></p><p>ls:查看当前目录下的文件内容；</p><p>cd:切换当前工作目录；</p><p>touch：创建文件； mkdir:创建目录/文件夹；</p><p>rm:删除；cp:复制；rm:移除；</p><p> Cat/more/head/tail查看日志文件内容；</p><p>grep:搜索文本文件名；</p><p> ln-s:创建软连接；ln:创建硬连接；</p><p> tar-zcvf 包名.tar.gz 被打包的文件：打包和解包；tar-zxvf 包名.tar.gz:解包和解压缩；</p><p> tar -zxvf 包名.tar.gz -C 路径 解压到指定路径下 </p><p>chmod:修改文件权限；</p><p>kill -9 进程的id ：强制杀死某个进程； top:动态查看系统资源；</p><p> netstat -anptu | grep 进程名：查看某个程序的端口号；</p><p> ps -aux | grep 进程名：查看指定应用的进程；</p><p><strong>2.用Linux干吗</strong></p><p>Linux是一个操作系统，（大多数的软件服务器都用它，因为它快，安全）作为测试用linux搭建测试环境，开发把项目写好，把项目打成jar包或war包给我们，我们在linux里面进行部署,我们使用Apache/Nigix/Tomcat,把war包上传上去，该创建文件夹创建文件夹，该创建用户创建用户（搭建环境里面用到的linux命令，创建文件，创建文件夹，压缩，解压）环境搭建好之后，当测试过程中遇到问题，需要连接数据库连接不到数据库，或需要重启服务的时候，我们需要重启电脑，当系统出现问题的时候，需要查询日志，第一查询软件的日志，我们从客户端里查不到，因为日志是写在系统里的，写在linux服务器里的，第二需要查询linux系统本身的日志，比如linux系统启动不起来了</p><p><strong>3.mysql数据库的增删改查，关联查询，子查询，内连接（需要熟练）</strong></p><p><strong>4.Navicat是什么？</strong></p><p>Navicat是连接数据库的客户端</p><p><strong>5.软件测试的模型分为哪几种？</strong></p><p>​ V模型(重点) 绘制：需求分析-概要设计-详细设计-编码-单元测试-集成测试-系统测试-验收测试 优点：阶段清晰，文档驱动 缺点：不适应需求变化，风险后延（bug修复时间较晚），返工量大 W模型（重点） 绘制：开发V：需求分析-概要设计-详细设计-编码-集成-实施 -交付 测试V:系统测试设计-集成测试设计-单元测试设计-单元测试-集成测试-系统测试-验收 优点：关注软件开发的全过程，早介入，早发现，早修复，缺陷的修复随着开发过程成指数上升 缺点：灵活度低 H模型（了解） 组成：测试准备，测试就绪点，测试执行 优点:将测试流程独立出来，测试流程与其他流程并行 缺点：技术要求高，管理要求高</p><p><strong>6.软件测试的分类？</strong></p><p>​ a.按照阶段划分 单元测试：对单独的功能或模块进行测试 集成测试：对多个功能进行组合测试 系统测试：站在系统的角度，看程序是否满足客户需求 验收测试：客户针对自己的需求进行测试 负责人：客户或者第三方机构或客户授权乙方进行测试 分类：α测试 （内测）， β测试 （公测）， γ测试（候选版本） b.按是否覆盖源代码划分 黑盒测试：不需要关注代码，只需要聚焦业务功能 </p><p>功能测试</p><p>​ 业务功能（登录注册等） 界面测试（UI）关注界面美观，页面布局等 易用性测试（鼠标三次点击直达用户目的，enter键等快捷键） 安装测试 卸载和升级测试 性能测试:时间性能,稳定性能,压力测试,负载测试 白盒测试:需要看代码 灰盒测试:既要关注代码，又要关注业务功能 c.按是否运行划分 静态测试:测的是需求或设计文档 动态测试:测的是程序 d.按照是否自动化划分 手工测试:测试人员手动进行测试的方法 自动化测试:通过工具或代码帮助测试人员更加高效进行测试的一种方法 e.其他 冒烟测试:最基本的功能和流程 回归测试:bug回归和旧功能回归 随机测试：根据测试人员的经验对一些重要的业务功能或测试用例未覆盖的某些功能进行 探索性测试：具体问题，具体分析</p><p><strong>7.测试用例的10要素？</strong></p><p>用例编号（ID），测试点(正向/逆向)，模块，优先级，前置条件，测试数据，测试步骤，预期结果，实际结果，是否自动化</p><p><strong>8.测试用例的8种设计方法？</strong></p><p>等价类划分法，边界值法，错误推测法，场景法，判定表法，因果图法，流程图法，正交法</p><p><strong>9.你在测试过程中编写过测试用例吗？都用了哪些方法？(常用)</strong></p><p>等价划分类：分为有效等价类和无效等价类，例如：三角形两边之和大于第三边是一个定理，如果我们输入一个参数，他们的和，小于第三个参数，那么相当于两边之和小于第三边，就构成不了三角形，就相当于是无效等价类。 输入的两个参数的和，加起来大于第三边的话，就相当于有效等价类。</p><p>边界值分析法：例如：购买0个，购买1个，购买-1个，这就属于边界值，购买时候的最大数量也是属于边界值，超过最大数量，等于最大数量或者小于最大数量相当于是边界。</p><p>错误猜测法：主要是根据经验吧，因为测试的时候每个系统都可能是登录系统，之前登录系统可能发现过某些bug，再去猜一下，这个系统是不是也可能会出现这样的bug。</p><p>场景法：模拟用户的使用场景。</p><p><strong>10.什么是缺陷？</strong></p><p>执行测试用例时，预期结果和实际结果不一致</p><p><strong>11.如何判断是不是缺陷？</strong>只要满足一下五个条件之一就算缺陷</p><p>软件未实现产品说明说要求的功能 软件中出现了产品说明书中明确指出不应该出现的错误 软件实现了产品说明中未提及的功能 软件未实现产品说明书中，虽未提及但应该实现的功能 难以理解，运行缓慢，不好使用等多站在用户的角度考虑问题</p><p><strong>11.缺陷产生的根本原因</strong></p><p>需求变更，沟通不畅，信息不同步，软件复杂度，进度压力</p><p><strong>12.缺陷的10大要素？</strong></p><p>ID，缺陷的标题，严重程度，模块，优先级，复现步骤，预期结果，实际结果，状态，缺陷的类型</p><p>严重程度：严重（s1）：主功能不可用，例如闪退，不能启动等 一般（s2）：次功能不可用，边界或异常未进行处理等 微小（s3）：易用性，界面展示，小的性能等问题 建议（s4）：建议性问题</p><p>优先级： p0：必须在24小时之内解决 p1：产品上线前解决 p2：下一个版本就解决</p><p>状态：新建（new），打开(open)，延期，拒绝(rejected)，再次打开(reopen)，关闭(closed),已解决（fixed） 缺陷的类型：功能错误，界面错误，兼容性错误，易用性，改进意见</p><p><strong>13.测试的5大流程？</strong></p><p>​ a.需求分析与评审 以需求评审会的形式，参与的人员：产品经理，项目经理，开发，测试，ui等 测试的主要职责：1.确保自己对文档有清晰的理解，没有疑惑 2.确定文档的正确性与完整性，能够指导后期的工作 3.对文档中存在不合理的地方提出自己的修改意见</p><p> b.编写测试计划与测试方案 测试计划：管理型文档，主要解决：谁来做？做什么？ 测试方案：技术型文档，主要解决：怎么做？</p><p> c.设计测试用例与评审</p><p> d.执行测试用例与缺陷跟踪</p><p> e.编写测试报告</p><p><strong>14.敏捷开发的5个活动</strong></p><p>迭代，迭代计划，每日站会，评审会，回顾会</p><p>敏捷开发的周期一般为1-2周，一次迭代（sprint）增加几个功能</p><p>###面试题</p><p><strong>1.内存溢出与内存泄漏</strong></p><p>内存溢出（ out of memory）：是指程序在申请内存时，没有足够的内存空间供其使用；</p><p>内存泄露 （memory leak）：是指程序在申请内存后，无法释放已申请的内存空间，一次内存泄露危害 可以忽略，但内存泄露堆积后果很严重，无论多少内存,迟早会被占光；</p><p>二者的关系：内存泄露会最终会导致内存溢出；</p><p><strong>2.冷启动与热启动</strong></p><p>app被后台杀死后，在这个状态打开app，这种启动方式叫做冷启动；</p><p>热启动：指app没有被后台杀死，仍然在后台运行，通常我们再次去打开这个app，这种启动方式叫 热启动</p><p><strong>3.怎么定位一个bug是前后端的问题?fildder的主要应用场景?</strong></p><p>用fildder进行抓包，首先看到底是请求的时候发送的参数错误了还是返回的时候返回错了，如果请求是对的，返回是错的，那肯定就是服务器的问题如果是请求的时候参数就传错了，那基本上就是前端的问题。</p><p>fildder的主要用于抓包，请求参数，请求参数类型，浏览器不支持的时候可以抓包，抓请求，抓响应，也可以进行打断点，功能测试,接口测试需要看一下开发前端页面调用的接口对不对，我需要过滤一下，APP测试时模拟弱网测试。</p><p><strong>4.bug提给开发，就向石沉大海一样，你该怎么做？</strong></p><p>首先我会跟先跟开发沟通一下，问是这个bug之前提过重复了，还是说他现在有紧急的任务需要处理，这个bug不是很严重，可以延期再处理，还是说他认为这个bug不是bug，如果开发认为不是bug,我会整理好一个详细的bug出现的文档，拿给开发，如果他坚持不改，我会直接找他的上级领导，让他的领导与他沟通；</p><p><strong>5.测试过程中，开发人员认为不是bug怎么办？</strong></p><p>首先我会先正确理解出现的错误时bug还是软件缺陷，如果是软件缺陷，我会直接找部门经理，由部门经理与开发人员协调，如果是bug，我会理清楚bug出现的原因，然后整理成报告给相应的开发人员，如果他还不改的话，我会跟部门的负责人说，让领导进行处理。</p><p><strong>6.常用的响应状态码？</strong></p><p>200请求成功，201新增成功，204删除成功 </p><p>302请求重定向 400代表客户端异常，</p><p>401代表访问的页面没有授权，403表示没有权限访问这个页面，404代表没有这个页面 </p><p>500代表服务器异常，504代表服务器端超时，没返回结果</p><p><strong>7.GET请求和POST请求的区别：</strong></p><p>​ 1、GET使用URL或Cookie传参。而POST将数据放在BODY中。 2、GET的URL会有长度上的限制，则POST的数据则可以非常大。 3.get的效率高于post 4、POST比GET安全，因为数据在地址栏上不可见。 5、一般get请求用来获取数据，post请求用来发送数据。</p><p><strong>8.为什么https比http安全？</strong></p><p>https在 http基础上增加了数据加密 ，从而使得客户端和服务器之间传输的数据更加安全</p><p><strong>9.Web测试与APP测试的差异性?</strong></p><p>a.web是b/s架构，app是C/s架构,APP的兼容性测试尤为重要：由于手机厂商生产的手机型号及相关软硬件存在千千万万的差异性，进而APP端需 要着重考虑分辨率、系统版本、尺寸、主流机型等等；</p><p>b.APP性能测试指标不一样：除了需要和web一样考虑APP客户端的性能外，我们还需要考虑电量、流量的消耗、 GPU渲染等；</p><p>c.APP网络测试场景的复杂性：如2G、3G、4G、5G、wiﬁ、弱网环境等</p><p>d.APP基于手机载体存在的交叉事件测试、前后台切换、安装/卸载/升级测试</p><p>e.APP基于手机载体特有的一些用户操作习惯类测试，如横竖屏切换、多点触控、事件触发区域等</p><p><strong>10.测试一般分为三轮测试</strong></p><p>第一轮，提交测试之后，快速的把所有功能都测一遍，第一时间发现所有的bug，然后让开发去修改，这样比较节省时间，提高效率。然后再细测每一个功能，直到所有的bug都改完以后，开始测第二轮。</p><p>第二轮测试以后发现bug的话，可能就还会有第三轮测试，希望在第二轮就能把所有的bug解决完，不要再产生新的bug。</p><p>第三轮主要是回归了，不会像第一轮和第二轮那么仔细，主要回归一些重点，没有问题以后，测试就会通过了，通过以后会发测试通过邮件，开发会把代码部署到预上线环节，然后我们再会去预上线环节去验证，主要验证一些主要功能点，以及在测试环境中产生的一些bug，看看代码是否都更新正确，代码更新到预上线环节以后，希望别出现更错的情况。</p><p>比如A文件有10行代码的更新，但是上传到预上线环节的时候，没有上传上去，我们主要通过在测试环境产生的bug和一些功能点来确认代码更新正确，另外因为预上线环节和测试环节，环境不同，可能会导致出现新的bug，然后我们会让开发去定位，看看是测试环境没有测试出来，还是因为环境改变产生的新bug，反复的进行确认，直到预上线环境没有问题，就会更新到线上了，至于什么时候上线由产品决定，我们只是测完以后告诉产品我们测完了。</p><p><strong>11.工作如何分配的？</strong><br>我们组长让我们一人负责一块，但是功能可能会有交叉的地方，我们每个人都会看一眼，其余功能，我们没事的时候，也会去测试一下，因为了解整个系统才是最关键的，才能保证每一次变化都能知道，写好测试用例，所以，除了平时固定负责的模块，其他模块如果其他人忙不过来的话，我们也会帮忙测的，主要就是通过测试用例的形式来测试</p><p><strong>12.有哪些测试环境？</strong><br>测试环境一般分为4个测试环境，开发那边有一个本地环境，这个是他们自己调试用，代码开发完以后发布到测试环境，测试环境主要是应为他们发的，测试环境测完以后没有问题，会更新到预上线环境，预上环境测完没有问题就会发布到线上环境，预上线环境是用来主要是模拟线上更新，因为预上线环境和线上环境是比较像的，其次是可以用预上线环境来验证一些线上bug，可能测试环境的代码已经跟线上不一样了，所以有一些线上bug可能没办法在测试环境验，在测试环境验不是很严谨，一般在预上线环境验，还有没有更新代码的时候，有回滚方案，测试完以后呢，开发会把他们最后一次提交的Git版本号发出来，如果有问题的话还会进行回滚，对于线上的问题，如果出现了紧急bug，我们会启动紧急更新流程，第一时间确认一下问题，确认完问题存在以后，开发会去修复，修复完以后会执行一些核心的测试用例，以保证改完以后这个bug不会产生新的bug，然后上线，及时响应。</p><p><strong>13.你以前工作的测试流程是什么？</strong></p><p>先开需求评审，一般是两周一个迭代，迭代开始之前的周四或者周五我们进行需求评审，这是第一次评审，一般是确定一下做哪些功能，哪些功能不做，测试这边也会给出一下需要的时间，开发给出大概需要的时间，都OK之后呢，产品就会去修改文档了，修改完之后呢，我们用Git管理的需求的文档，他们会把文档上传上去，之后呢，我们会把文档拉下来，之后就准备写测试用例了，大概是希望在周四之前把测试用例都写完，写完之后呢，会再进行一次评审，这个评审存在的一个问题就是产品和开发的参与度不是很高，他们提出的测试用例可能有限，但是也会给一些建议，所以呢，我们之前也给出过一些方法，比如每个人至少给出两条建议，但是如果项目进度特别赶的话，可能也不是很理想，所以自己在写测试用例的过程中写的比较好，写完之后呢，就等待提测，一般是周五的时候会提测，有时候也会有延期的情况，提交测试的环境呢，都是运维部署的，不是测试部署的。</p><p>运维部署完之后，告诉我们开始测试，我们开始执行测试用例，发现bug的话，就提交到那个jira的项目管理工具上，这个bug指派给负责人以后，我们会跟踪一下，如果修复了我们会验证一下，如果没有修复好的话呢，会再指给相应的人，如果修复好以后就关闭了。</p><p>这相当于第一轮测试完毕，第一轮完毕以后会有第二轮。因为第一轮测试完毕之后也还需要把所有的功能都再看一遍，没有问题的话，就发布预上线环境，更新到预上线环境之后，会再验证一下，并叫上产品一起验证。</p><p>整个过程都是发邮件的形式，如果想立即上线就会发布到线上环境，然后再测一下，如果没有问题就OK了，如果有问题的话就再走回滚流程。</p><p>需求评审（产品，测试，开发，开会，评审需求文档）开会讨论做什么，不做什么——测试预估测试时间——等产品更新文档——用GIT管理产品文档——GIT拉取到本地——写测试用例——产品开发一起评审——调整测试用例——等待提测——运维部署——执行测试用例——发现bug——提交到jira项目管理工具——指派给负责人——开发修复——验证——修复好以后——关闭</p><p><strong>14.讲讲你的项目是如何做自动化测试的？</strong></p><p>前提：手工测试完毕了（应该是在系统测试之后，自动化做回归测试），要求项目需求变动不频繁，项目周期长，项目需要做回归测试的。</p><p>门类：自动化测试还是属于黑盒测试，只是用代码替代人来做功能测试。</p><p>正题：一般我们都是在项目稳定，在做回归测试的时候做自动化的测试。我们web主要是用python+selenium作自动化，,首先用火狐浏览器的firebug插件定位元素（多数用Xpath和CSS方法定位元素），然后用python中的unittest框架来测试，重写setUp（）与tearDown（）方法，setUp中主要是初始化webdriver，打开网址，和设置一些统一的浏览器条件（如登录，浏览器最大化），tearDown中主在测试结束后关闭一些资源（如关闭driver退出），然后根据用例要去会写一个testXXX（）为名字的方法写具体的测试用例（定位元素，跳转页面，填充数据，最后在try 中断言结果在except中截图）。</p><p>Ps：更高级的可以讲PO模式，pytest框架。Pytest是web与app都能用。</p><p>结合项目来说：</p><p>Example1：在我的测试的商城后台的商品管理的添加、修改。是写一个python类继承unittest，在setUp方法中初始化driver，登录后台管理员。在tearDown中关闭driver。在定义个testcommoditychange的方法，在方法里找到商品按钮点击进入商品页面，定位“商品列表”的元素定位到商品管理的页面，定位“添加商品”按钮今如添加商品页面，然后通过读取配置文件（yaml，txt等很多文件格式都行）中提前写好的测试用以数据，按要去，分别定位添加到商品的分类属性总，然后点击发布商品按钮，断言结果与测试用以的预期结果是否相同。在main方法中执行测试用例。</p><p>然后在测试之前加入HTMLTestRunner这个类。利用它来生成测试报告。</p><p><strong>15.一个测试需要具备什么好的条件?</strong></p><p>了解和熟悉自己的项目，多看看产品文档，使用系统，每一个分支操作之后都应该知道是什么结果，只有这样才能写出好的测试用例，还要和产品多交流和沟通，也能增加对产品的认知，要多学习一些有用的工具，符合现阶段使用的，并不是说学的越多越好。</p><p>代码能力也很重要，写完代码才能理解一些代码层面的bug，不断学习不断总结。</p><p><strong>16.测试人员在产品开发过程中，任务是什么？</strong></p><p>保证产品质量，控制好项目的进度，因为测试既连接产品又连接开发，测试有时候有必要提醒一下项目有进度上的风险，比如想周五提测，结果周五跟他们对接的时候，发现他们不能按时提测，要下周二才能提测，这时候就存在测试不完的情况，这也是一种风险，希望能提前发现，提前预警。</p><p>17.通过支付宝/微信给朋友转账设计测试用例?</p><p>1）正确流程的测试：输入金额，信息，支付密码 2）密码验证：是否提示支付密码，以及错误密码的提示，多次输入错误密码的情况 3）留言验证：符号，表情等其他是否可以输入 4）发送后返回界面的展示 5）异常随机错误：发红包界面随机的点击 6）发送成功后金额的显示 7）对方是否可以领取 8）断网，后台切换再重新打开app 9）手机版本兼容性测试 1）发送单个红包金额验证，最大最小阈值的验证。金额为0 等异常的验证，提示信息是否正确。 2）群发红包，红包的输入的最大限额，小数点位数限制，数值为0的验证。 3）文字输入框的验证。是否可输入非文字的内容。 4）红包的最大个数的验证。 5）普通红包与随机红包的验证：金额是否平均分，或随机分。 6）领取金额跟发送的红包金额是否相等， 7）塞钱按钮是否可用 8）为领完红包退回的验证。24小时超时退换的验证。 9）安卓与苹果系统之间是否可以互发互抢红包。 9）支付方式的验证：不同支付方式的验证，余额不足的处理。密码错误是否有提示。 10）支付密码是否在前端加密，在网络传输过程中是否加密， 11）送红包的响应时间是多少 12）是否支持不同的手机，不同的系统平台，版本，发红包抢红包，收红包，不同的手机，不同的平台，不同的版本是否可以相互发送红包抢红包收红包 13）红包的界面是否跟原型效果图一样</p><h2 id="接口测试"><a href="#接口测试" class="headerlink" title="接口测试"></a>接口测试</h2><p><strong>1.什么是接口文档？什么是接口清单？他们之间有什么关系？</strong></p><p>接口文档就是API文档，接口文档是架构师或开发写的，在定义接口文档的时候，里面有很多粗略的地方，第一：哪些字段必填不知道，哪些字段是什么类型不知道，第二：他们整理的只是一个通用的模板，真正实施的时候，例如真正查询的时候是指定查询，模糊查询还是组合查询上面根本就没有写，此时我们对其进行整理，整理出指定时的接口，模糊时的接口，组合时的接口，</p><p>当不知道此时开发还没开发，目的是开发照着接口文档进行开发，接口文档是公用的（产品，开发，测试等），接口文档里包含有哪些资源的定义，资源的url,有几个参数，写的比较笼统，写的不清楚，为了防止漏测和评审，我们才从接口文档里整理接口清单，接口清单里主要包括，请求和响应，请求里面包含，请求的url，请求参数，请求方法，响应里面包含响应状态码和响应的数据。</p><p><strong>2.Jmeter测试工具都用哪些原件？</strong><br>Jmeter的常用原件有，HTTP请求——信息头（请求需要带头信息）——cookie信息管理器（模拟用户登录，获取token）有的token放在header里，有的放在cookie里的，如果放在header里的话就不用加cookie管理器——json提取器（可以提取到所有请求的返回信息）有一个缺点不能提取返回的头信息——正则提取器（可以提取信息头里的）——聚合报告（有很多属性统计，测QPS可以用聚合报告）——察看结果树（查看json结果访问数据）——函数助手（可以随机起名自动生成一个代码）——if控制器循环之类的，但是用的不多，剩下的都是要用的时候才能想起来。</p><p><strong>3.使用jmeter怎么测？</strong></p><p>基于测试计划创建线程组，基于线程组添加http请求，基于测试计划添加查看结果树和聚合报告，可以在http请求里面添加同步定时器和断言。</p><p><strong>4.接口测试中依赖登录的接口如何测试？</strong></p><p>获取token，模拟登录状态。</p><p><strong>5.接口测试中，最重要的是什么？</strong></p><p>最重要的是覆盖率，你请求的参数要覆盖比较全。例如：你测购买的时候，肯定有一个参数叫购买数量，可以发送请求的时候，这个购买数量的字段可以等于0，也可以等于1，也可以等于负值，相当于我们用这种参数呢，把这种情况都覆盖到，如果有要求的话，我们还会测一下这个接口的性能，QPS是比较关注的，接口在并发请求的情况下，会不会有什么问题。不过我们一般前期不做性能测试，只在项目的中后期做性能测试。</p><p>##移动端测试</p><p><strong>1.常用的adb命令</strong></p><p>adb –help 帮助命令；adb start-server 开启adb服务；adb kill-server 结束adb服务；</p><p>adb devices 查看设备列表，获取设备名称；adb push 将电脑文件发送到手机；</p><p>adb pull 将手机文件拉到电脑；adb logcat 查看手机运行日志；</p><p>adb shell dumpsys window windows| findstr usedApp 查看包名和启动名；</p><p>adb install apk所在路径 安装apk到手机；adb uninstall 包名 卸载apk文件；</p><p>adb shell am start -W 包名/启动名 获取app应用启动时间；</p><p><strong>2.用过什么测试框架？</strong></p><p>Unitest，pytest</p><p>##性能测试</p><p><strong>1.性能测试工具？</strong></p><p>jmeter和Loadrunner</p><p>jmeter做性能测试主要关注的目标是什么？</p><p>这个就需要看聚合报告了，测试目标是什么就看什么（错误率，响应时间，吞吐量）</p><p>Loadrunner 由三部分组成：</p><p>a. Virtual User Generator（简称：VuGen）：编写脚本（脚本的增强）</p><p>b. Controller ：场景搭建及运行</p><p>d. Analysis ：结果分析</p><p><strong>2.Loadrunner做性能测试的流程？分类？指标？</strong></p><p>流程：需求分析–&gt;测试计划–&gt;测试用例–&gt;编写脚本–&gt;设计场景–&gt;运行场景–&gt;场景监控–&gt;结果分析–&gt;系统调优–&gt;测试报告</p><p>分类：压力测试，负载测试，并发测试，稳定性测试</p><p>指标：并发数(支持多少用户同时进行请求。)，吞吐量也叫QPS(每秒查询率)，响应时间（比如测一个接口的时候，看多长时间能返回），点击数，资源利用率（内存，cpu,硬盘），错误率</p><p><strong>3.TPS和QPS有什么区别？</strong></p><p>QPS针对单个接口，叫每秒查询率，之前做纯API服务的时候，没有界面，只给用户提供API调用的时候，我们会测试，这个接口的QPS，我们用jmeter测试的，用jmeter写好请求以后呢，我们会比如先模拟20个线程组，去通知请求接口，看它的QPS到达什么程度，直到出现error，出现错误返回的时候，我们就停止，不一定是线程组的数量越多，它的QPS就越高，当QPS达到一定的程度，并且没有错误的时候，会有一个最高值，我们认为它的最高值就是它的QPS。</p><p>TPS相当于是事物，引导事物数，相当于多个接口，比如在电商网站购买东西的时候，一个购买行为可能要请求好几个接口，所有的接口组合在一起，叫TPS，主要是描述用户行为的，支持某种用户的行为能力，我认为是这样的，但是我们没有测过TPS，主要还是测QPS。</p><p>##常识</p><p>B2C：商家对客户，京东、当当、天猫;</p><p>B2B：商家对商家，阿里巴巴(不零售，只批发，淘宝很多商家都会去阿里巴巴进货)；</p><p>C2C：个人对个人，淘宝市场，淘宝，QQ商城；</p><p>1.windows系统的常用命令？</p><p>cd 切换目录；cd.. 返回上一级目录；cd \ 返回到根目录；</p><p>dir 显示目录中的内容；ctrl +z 中断命令执行；</p><p>md 创建目录；rd删除目录；copy 复制文件；move 移动文件；</p><p>del 删除文件；exit退出当前cmd窗口；ipconfig查看本机的ip;</p>]]></content>
    
    
    <categories>
      
      <category>手工测试,接口测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>blogs</title>
    <link href="undefined2019/08/27/blogs/"/>
    <url>2019/08/27/blogs/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>#如何在hexo新建文件并上传至博客<br>1.首先打开终端，切换到_posts文件所在路径，hexo new 文件名（新建一个.md文件）</p><p>2.以Typora的形式打开进行编辑，完成之后在终端中输入：hexo generate，回车，生成静态页面</p><p>3.再输入：hexo server，回车，到localhost:4000预览博客效果</p><p>4.最后输入：hexo deploy，回车，同步到github上去就行了</p><h2 id="解决hexo博客中可以上传图片"><a href="#解决hexo博客中可以上传图片" class="headerlink" title="解决hexo博客中可以上传图片"></a>解决hexo博客中可以上传图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>配置文件_config.yml中 post_asset_folder:true</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>安装插件：在hexo的目录下执行(博客文件夹下执行)</span><br><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save </span><br><span class="line"> 安装的过程中可能会出现：终端一直处于fetchMetadata: sill resolveWithNewModule hexo-asset-imag状态</span><br><span class="line">**解决方法**：</span><br><span class="line"><span class="comment">#将npm的源换成淘宝镜像(在该目录下)</span></span><br><span class="line"><span class="number">1.</span>使用下面命令更换源：npm config set registry https://registry.npm.taobao.org</span><br><span class="line"><span class="number">2.</span>源更换完成之后，使用下面命令检查</span><br><span class="line">npm config get registry<span class="comment">#或者npm info express</span></span><br><span class="line"><span class="number">3.</span>输入命令执行后，输出内容如下，即代表更换成功。</span><br><span class="line">https://registry.npm.taobao.org/</span><br><span class="line"><span class="number">4.</span>此时再输入安装插件的网址</span><br><span class="line">完成安装后用hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。图片就可以放在文件夹下面</span><br><span class="line"><span class="comment">#打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</span></span><br><span class="line">​```python</span><br><span class="line"><span class="string">'use strict'</span>;</span><br><span class="line">var cheerio = require(<span class="string">'cheerio'</span>);</span><br><span class="line"></span><br><span class="line">// http://stackoverflow.com/questions/<span class="number">14480345</span>/how-to-get-the-nth-occurrence-<span class="keyword">in</span>-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version = String(hexo.version).split(<span class="string">'.'</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">'after_post_render'</span>, function(data)&#123;</span><br><span class="line">  var config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">    var link = data.permalink;</span><br><span class="line"><span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; Number(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">   var beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   var beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">// In hexo <span class="number">3.1</span><span class="number">.1</span>, the permalink of <span class="string">"about"</span> page <span class="keyword">is</span> like <span class="string">".../about/index.html"</span>.</span><br><span class="line">var endPos = link.lastIndexOf(<span class="string">'/'</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess = [<span class="string">'excerpt'</span>, <span class="string">'more'</span>, <span class="string">'content'</span>];</span><br><span class="line">    <span class="keyword">for</span>(var i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">'img'</span>).each(function()&#123;</span><br><span class="line"><span class="keyword">if</span> ($(this).attr(<span class="string">'src'</span>))&#123;</span><br><span class="line">// For windows style path, we replace <span class="string">'\' to '</span>/<span class="string">'.</span></span><br><span class="line"><span class="string">var src = $(this).attr('</span>src<span class="string">').replace('</span>\\<span class="string">', '</span>/<span class="string">');</span></span><br><span class="line"><span class="string">if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;</span></span><br><span class="line"><span class="string">   !/^\s*\//.test(src)) &#123;</span></span><br><span class="line"><span class="string">  // For "about" page, the first part of "src" can'</span>t be removed.</span><br><span class="line">  // In addition, to support multi-level local directory.</span><br><span class="line">  var linkArray = link.split(<span class="string">'/'</span>).filter(function(elem)&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">''</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  var srcArray = src.split(<span class="string">'/'</span>).filter(function(elem)&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">''</span> &amp;&amp; elem != <span class="string">'.'</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">srcArray.shift();</span><br><span class="line">  src = srcArray.join(<span class="string">'/'</span>);</span><br><span class="line">  $(this).attr(<span class="string">'src'</span>, config.root + link + src);</span><br><span class="line">  console.info&amp;&amp;console.info(<span class="string">"update link as:--&gt;"</span>+config.root + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">console.info&amp;&amp;console.info(<span class="string">"no src attr, skipped..."</span>);</span><br><span class="line">console.info&amp;&amp;console.info($(this));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">​```python</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>文章中插入图片方式：</span><br><span class="line"></span><br><span class="line">方式一：&#123;% asset_img test.jpg This <span class="keyword">is</span> an test image %&#125;</span><br><span class="line">其中test.jpg就是你要引用的图片，我这里就是test.jpg，后面的This <span class="keyword">is</span> an test image是图片描述，可以自己修改。</span><br><span class="line"></span><br><span class="line">方式二： ![picturedescription](picturepath logo.jpg) 就可引用到图片 logo.jpg</span><br><span class="line">picturedescription:图片的描述；picturepath：图片在同名文件夹中的路径；</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blogs</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Charles</title>
    <link href="undefined2019/08/27/Charles/"/>
    <url>2019/08/27/Charles/</url>
    
    <content type="html"><![CDATA[<h1 id="charles-浏览器和手机抓包"><a href="#charles-浏览器和手机抓包" class="headerlink" title="charles 浏览器和手机抓包"></a>charles 浏览器和手机抓包</h1><p>@(charles)[http|https]<br>[TOC]</p><p>##http手机抓包操作步骤</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打开Charles，点击proxy-点击Mac OS x proxy取消前面的对勾，对勾保存是电脑抓包-点击proxy setting-在enable transparent http proxy 前面打对勾然后点击ok-点击设置保证跟电脑连接的是同一个局域网点击链接的wifi-选择手动-输入服务器的IP（安装了Charles的电脑的IP地址，可在Charles-help-local IP adress中查看）和端口号-点击Charles（⭕️）开始录制按钮，手机这边操作就可以开始抓包了；</span><br></pre></td></tr></table></figure><p>##Charles Android/ios手机抓https协议</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>电脑端打开Charles-help-ssl proxying-install Charles root certificate</span><br><span class="line"><span class="number">2.</span>下载安装证书，默认路径不需要更改，在钥匙串访问中选择证书双击证书文件-选择始始终信任</span><br><span class="line"><span class="number">3.</span>电脑端打开Charles-help-ssl proxying-install Charles root certificate on a mobile  device <span class="keyword">or</span> remote browers-下载安装证书，默认路径不需要更改，在钥匙串访问中选择证书双击证书文件-选择始始终信任</span><br><span class="line"><span class="number">4.</span>设置手机代理,要抓包的手机与电脑在同一个局域网下（链接同一个Wi-Fi即可），打开手机设置-选择已经连接的Wi-Fi-手动代理-输入安装charles电脑的IP（charles-help-localip address）和端口号（proxy-proxy setting-proxies）</span><br><span class="line"><span class="number">5.</span>手机在浏览器中输入：chls.pro/ssl</span><br><span class="line"><span class="number">6.</span>手机弹出提示：安装配置描述文件，选择允许，即可</span><br></pre></td></tr></table></figure><h2 id="Charles过滤"><a href="#Charles过滤" class="headerlink" title="Charles过滤"></a>Charles过滤</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">方法一：打开Charles，页面左下方有一个filters，在里面输入自己想要过滤的内容部分即可</span><br><span class="line"></span><br><span class="line">方法二：菜单栏选择 “Proxy”-&gt;”Recording Settings”，在弹出的窗口中选择 Include 栏，再点击“Add”，在弹出的窗口中输入需要监控的协议，主机地址，端口号等信息，来添加一个项目。</span><br><span class="line"></span><br><span class="line">方法三：在想过滤的网络请求上右击，选择 “Focus”，之后在 Filter 一栏勾选上 Focussed 一项</span><br></pre></td></tr></table></figure><p>##Charles模拟弱网测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打开charles-proxy-throttle Settings-勾选Enable settings-在throttle preset中选择要模拟的网路环境，如果没有的话可以自己在下方设置-ok</span><br></pre></td></tr></table></figure><p>##charles如何打断点，修改response数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>打开将要访问的网址，通过Charles抓到想要修改数据的接口,双击接口连接勾选Breakpoints</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>点击Charles-proxy-Breakpoints settings</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span>进入breakpoint settings页面,设置完成之后，点击ok</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4.</span>重新访问该接口，charles自动跳转到breakpoints页面</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5.此时修改Response数据，点击Edit Response，切换底部tab至Text，修改所需要的数据</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6.修改数据后，点击Execute，查看访问的页面，数据将会显示已修改的Response数据</span><br></pre></td></tr></table></figure><p>##Charles设置断点</p><p>1.选中接口-双击-compose</p><p>2.设置断点：<br>代理-断点设置-启用断点-添加（有些不知道天什么的可以用不填/*）<br>选择该接口-右键选择断点-proxy-breakpoint settings中进行编辑（请求或响应）</p><p>在请求上：即从应用程序发送请求之后，但后端接收到请求之前<br>在响应上：即在后端发送响应之后但在响应之前</p><p>##Charles的破解方法：</p><p><strong>1.修改charles.jar文件或者替换掉原来的软件。</strong><br>从官网上下载Charles，安装完毕，需要点击运行一起，command + q 彻底退出一次<br>在命令行终端输入 sudo spctl –master-disable 信任任何来源 （避免软件提示破损问题）<br>在命令行终端输入 open /Applications/Charles.app/Contents/Java/ 打开并替换 charles.jar（最好备份一下源文件, 我修改源文件名charles.jar.bak）<br>替换完成后，在此打开charles软件<br>替换 charles.jar的文件的下载地址<br>百度云：链接:<a href="https://pan.baidu.com/s/1_-Qsq_BzpQiqCStaD8XjUQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1_-Qsq_BzpQiqCStaD8XjUQ</a> 密码:vsgq<br><strong>2.注册码</strong><br>按照常规安装好charles软件之后，打开软件，点击工具栏中的help –&gt; register<br>输入如下信息：<br>Registered Name: <a href="https://zhile.io" target="_blank" rel="noopener">https://zhile.io</a><br>License Key: 48891cf209c6d32bf4<br>使用Charles进行手机抓包（iOS）<br><strong>注意：对某个手机进行抓包的时候，该手机的安全证书必须是跟该电脑连接同一个Wi-Fi安装的</strong></p><p>###手机上安装安全证书：（iOS-iphonex）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1.</span>在浏览器中输入http://chls.pro/ssl</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>设置-通用描述文件-点击安装</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>设置-通用-关于本机-证书信任设置点击开启\</span><br></pre></td></tr></table></figure><p>###手机上安装安全证书：（android-vivox27）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如何将之前的安全证书删除：</span><br><span class="line"></span><br><span class="line">设置-安全与隐私更多安全设置-用户凭据-点击证书-删除</span><br><span class="line"></span><br><span class="line">重新安装证书：</span><br><span class="line"></span><br><span class="line">电脑和手机连接同一个网络，电脑上点击安装安全证书-手机在浏览器器中输入http://charlesproxy.com/getssl -点击下载-在浏览器的下载中心打开</span><br></pre></td></tr></table></figure><p>####Charles中一个手机可以在不同网段下安装多个证书</p><p>#####charles抓包iOS手机报服务器开小差？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">电脑和手机连接同一个网段，电脑上点击help-安装证书到手机-OK-手机浏览器中输入chls.pro/ssl-下载-设置-通用-描述文件-安装-设置-通用-关于本机-证书信任设置-开启即可</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>charles</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Charles</tag>
      
      <tag>http</tag>
      
      <tag>https</tag>
      
      <tag>激活</tag>
      
      <tag>打断点</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql数据库</title>
    <link href="undefined2019/08/25/mysql/"/>
    <url>2019/08/25/mysql/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>###MySQL数据库简介</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">MySQL是服务端，提供操作数据的服务</span><br><span class="line">navicat是客户端，提供界面，先连接服务端，操作mysql的数据</span><br><span class="line"></span><br><span class="line">连接服务端:MySQL必须是已经启动状态,需要ip，端口，用户名，密码</span><br><span class="line">    </span><br><span class="line">想在关系型数据库存数据，先有仓库，再有表，再存数据</span><br><span class="line"></span><br><span class="line">设计数据库时的数据类型与约束</span><br><span class="line"></span><br><span class="line">**数据类型**</span><br><span class="line"></span><br><span class="line">- 整数：int，默认有符号（可以存负数），无符号（不能存负数），长度没有意思</span><br><span class="line">- 小数：decimal，（<span class="number">5</span>，<span class="number">3</span>），整数占<span class="number">2</span>位，小数点后占<span class="number">3</span>位</span><br><span class="line">- 字符串：varchar，一个数字或一个字母或一个标点符号或一个中文占一个字符</span><br><span class="line">- 日期时间：datetime，格式：`<span class="number">2019</span><span class="number">-04</span><span class="number">-02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>`</span><br><span class="line"></span><br><span class="line">**约束**</span><br><span class="line"></span><br><span class="line">- 主键(primary key)：唯一的标识一条数据，如果某个字段设置为主键，这列值==唯一且不能为空==，通常一个表会有一个id字段，设置为主键，通常设置为自动递增（从<span class="number">1</span>开始自动增长），设置为无符号</span><br><span class="line"></span><br><span class="line">  id字段：主键，无符号的int，自动递增</span><br><span class="line"></span><br><span class="line">- 非空：字段不允许为空，==不填写值，显示(null)，是空==，空字符串不是空</span><br><span class="line"></span><br><span class="line">- 惟一(unique)：此字段的值不允许重复，sql语法再讲</span><br><span class="line">- 默认值(default)：当不填写此值时会使用默认值，如果填写时以填写为准，给varchar或datetime字段设置默认值时，必须用英文引号</span><br><span class="line">- 外键(foreign key)：维护两个表之间的关联关系</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">####  查询编辑器</span></span><br><span class="line"></span><br><span class="line">某个仓库--查询—右键点击—新建查询</span><br><span class="line"></span><br><span class="line">- 每一条sql语句结尾需要一个英文分号</span><br><span class="line"></span><br><span class="line">- 注释sql语句：ctrl+/(windows);command+/或者<span class="comment"># (mac)</span></span><br><span class="line"></span><br><span class="line">  取消注释：ctrl+shift+/(windows),command+中/英+/(mac)</span><br></pre></td></tr></table></figure><p>###数据库表的操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">**创建表**</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line"></span><br><span class="line">​```sql</span><br><span class="line">create table 表名(</span><br><span class="line">字段名 类型 约束,</span><br><span class="line">字段名 类型 约束,</span><br><span class="line">...</span><br><span class="line">)</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>例：创建学生表，字段要求如下：</p><p>姓名(长度为10)， 年龄，身高(保留小数点2位)</p><p>要一个主键字段：id，无符号的整数，主键，自动递增</p><p>​<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> students3(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">unsigned</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">age <span class="built_in">int</span>,</span><br><span class="line">height <span class="built_in">decimal</span>(<span class="number">5</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p><strong>删除表</strong></p><p>语法：</p><p>​<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法一：<span class="keyword">drop</span> <span class="keyword">table</span> 表名</span><br><span class="line"></span><br><span class="line">语法二：<span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> 表名</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p>例：删除学生表</p><p>​<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> students;</span><br><span class="line">如果表不存在，会报错</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> students2;</span><br><span class="line">如果表不存在，不会报错</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p><strong>数据操作-增删改</strong></p><p>###增</p><p>####添加一行数据</p><p>语法一：所有字段设置值，==值的顺序与表中字段的顺序对应==<br>insert into 表名 values(值1,值2,…)<br>主键列是自动增长，插入时需要占位，通常使用0或者 default 或者 null 来占位</p><p>语法二：部分字段设置值，值的顺序与给出的字段顺序对应<br>insert into 表名(字段1,字段2) values(值1,值2,…)</p><p>###添加多行数据</p><p>语法一：写多条insert语句，语句之间用英文分号隔开</p><p>​<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students3 <span class="keyword">values</span>(<span class="literal">null</span>,<span class="string">'亚瑟5'</span>,<span class="number">12</span>,<span class="number">123.1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students3(<span class="keyword">name</span>) <span class="keyword">values</span>(<span class="string">'鲁班5'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students3(age,<span class="keyword">name</span>) <span class="keyword">values</span>(<span class="number">22</span>,<span class="string">'鲁班5'</span>);</span><br><span class="line">​</span><br></pre></td></tr></table></figure></p><p>语法二：写一条insert语句，设置多条数据，数据之间用英文逗号隔开</p><p>​<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> students3 <span class="keyword">values</span>(<span class="literal">null</span>,<span class="string">'亚瑟51'</span>,<span class="number">12</span>,<span class="number">123.1</span>),</span><br><span class="line">(<span class="literal">null</span>,<span class="string">'亚瑟52'</span>,<span class="number">12</span>,<span class="number">123.1</span>),(<span class="literal">null</span>,<span class="string">'亚瑟53'</span>,<span class="number">12</span>,<span class="number">123.1</span>);</span><br><span class="line"></span><br><span class="line">**改**</span><br><span class="line"></span><br><span class="line">语法：<span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段=值,字段<span class="number">2</span>=值<span class="number">2</span> <span class="keyword">where</span> 条件</span><br><span class="line"></span><br><span class="line">例：修改<span class="keyword">id</span>为<span class="number">5</span>的学生数据，姓名改为 狄仁杰，年龄改为 <span class="number">20</span></span><br><span class="line"><span class="keyword">update</span> students3 <span class="keyword">set</span> <span class="keyword">name</span>=<span class="string">'狄仁杰'</span>,age=<span class="number">20</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">5</span>;</span><br><span class="line">注意：如果不写where，会修改所有行的数据</span><br><span class="line"></span><br><span class="line">**删**</span><br><span class="line"></span><br><span class="line">语法一：<span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件</span><br><span class="line"></span><br><span class="line">例：删除<span class="keyword">id</span>为<span class="number">6</span>的学生数据</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> students3 <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">6</span>;</span><br><span class="line">注意：如果不写where，会删除所有行</span><br><span class="line"></span><br><span class="line">语法二：删除表的所有数据，保留表结构</span><br><span class="line"></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名</span><br><span class="line">例：删除学生表的所有数据</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> students3_copy1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**Truncate和Delete、Drop的区别**</span><br><span class="line"></span><br><span class="line">1、<span class="keyword">Delete</span>删除数据时，即使删除所有数据，其中的自增长字段不会从<span class="number">1</span>开始</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、<span class="keyword">Truncate</span>删除数据时，其中的自增长字段恢复从<span class="number">1</span>开始</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、<span class="keyword">Drop</span>是删除表，所有数据和表结构都删掉</span><br><span class="line"></span><br><span class="line">**总结**</span><br><span class="line"></span><br><span class="line">在速度上，<span class="keyword">drop</span> &gt; <span class="keyword">truncate</span> &gt; <span class="keyword">delete</span></span><br><span class="line"></span><br><span class="line">如果想删除部分数据用<span class="keyword">delete</span>，注意带上<span class="keyword">where</span>子句</span><br><span class="line"></span><br><span class="line">如果想删除表，用<span class="keyword">drop</span></span><br><span class="line"></span><br><span class="line">如果想保留表而将所有数据删除，自增长字段恢复从<span class="number">1</span>开始，用<span class="keyword">truncate</span></span><br></pre></td></tr></table></figure></p><p>###查询相关的操作</p><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">语法：select * <span class="keyword">from</span> 表名 where 条件（条件是过滤行，格式：字段 符号 值）</span><br><span class="line"></span><br><span class="line">**比较运算符**：字段=值，字段&gt;值,字段&lt;值,字段!=值,字段&lt;&gt;值;</span><br><span class="line"></span><br><span class="line">**逻辑运算符**:</span><br><span class="line"><span class="keyword">and</span>：且，多个条件同时成立</span><br><span class="line"> <span class="keyword">or</span>：或，多个条件成立一个即可</span><br><span class="line"> <span class="keyword">not</span>：非，对某个条件取反</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**模糊查询**</span><br><span class="line">字段 like 值</span><br><span class="line">% 代表任意个字符,_ 代表一个字符</span><br><span class="line"></span><br><span class="line">例<span class="number">1</span>：查询姓孙的学生</span><br><span class="line">select * <span class="keyword">from</span> students where name like <span class="string">'孙%'</span>;</span><br><span class="line"></span><br><span class="line">例<span class="number">2</span>：查询姓孙且名字是一个字的学生</span><br><span class="line">select * <span class="keyword">from</span> students where name like <span class="string">'孙_'</span>; </span><br><span class="line"></span><br><span class="line">**范围查询**---<span class="keyword">in</span> </span><br><span class="line"></span><br><span class="line">例<span class="number">1</span>：查询家乡是北京或上海或广东的学生</span><br><span class="line">select * <span class="keyword">from</span> students where hometown <span class="keyword">in</span>(<span class="string">'北京'</span>,<span class="string">'上海'</span>,<span class="string">'广东'</span>);</span><br><span class="line"></span><br><span class="line"> between 值<span class="number">1</span> <span class="keyword">and</span> 值<span class="number">2</span> ，==值<span class="number">1</span>&lt;=值<span class="number">2</span>==</span><br><span class="line">例<span class="number">2</span>：查询年龄为<span class="number">18</span>至<span class="number">20</span>的学生</span><br><span class="line">select * <span class="keyword">from</span> students where age between <span class="number">18</span> <span class="keyword">and</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**空判断**</span><br><span class="line"></span><br><span class="line">- (null)是空</span><br><span class="line">- <span class="string">''</span>是空字符串</span><br><span class="line">- 字段 <span class="keyword">is</span> null</span><br><span class="line"></span><br><span class="line">例<span class="number">1</span>：查询没有填写身份证的学生</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> students where card <span class="keyword">is</span> null;</span><br><span class="line"></span><br><span class="line">查询身份证为空字符串的学生</span><br><span class="line">select * <span class="keyword">from</span> students where card=<span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">例<span class="number">2</span>：查询填写了身份证的学生</span><br><span class="line">select * <span class="keyword">from</span> students where <span class="keyword">not</span> card  <span class="keyword">is</span>  null;</span><br></pre></td></tr></table></figure><p>####查询字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*查询所有字段**</span><br><span class="line">语法：select * <span class="keyword">from</span> 表名</span><br><span class="line"></span><br><span class="line">*查询部分字段**</span><br><span class="line">语法：select 字段名<span class="number">1</span>,字段名<span class="number">2</span> <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><h4 id="起别名"><a href="#起别名" class="headerlink" title="起别名"></a>起别名</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>给表起别名，在多表查询中经常使用</span><br><span class="line">语法：select 别名.字段名<span class="number">1</span>,别名.字段名<span class="number">2</span> <span class="keyword">from</span> 表名 <span class="keyword">as</span> 别名</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>给字段起别名</span><br><span class="line">语法：select name <span class="keyword">as</span> 别名,sex <span class="keyword">as</span> 别名,age <span class="keyword">from</span> students;</span><br></pre></td></tr></table></figure><p>####去重</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：select distinct 字段 <span class="keyword">from</span> 表名</span><br><span class="line">例：查询所有学生的性别，不显示重复的数据</span><br><span class="line"></span><br><span class="line">select distinct sex <span class="keyword">from</span> students;</span><br><span class="line">注意：什么是重复数据，在显示的结果中，如果一行记录和另一行完全一致，才是重复数据</span><br></pre></td></tr></table></figure><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">select * <span class="keyword">from</span> 表名 order by 字段 asc或desc </span><br><span class="line">- asc从小到大排列，即升序</span><br><span class="line">- desc从大到小排序，即降序</span><br><span class="line"></span><br><span class="line">例<span class="number">1</span>：查询所有学生信息，按年龄从小到大排序</span><br><span class="line">select * <span class="keyword">from</span> students order by age asc;</span><br><span class="line">select * <span class="keyword">from</span> students order by age;</span><br><span class="line">默认是升序</span><br><span class="line"></span><br><span class="line">例<span class="number">2</span>：查询所有学生信息，按年龄从大到小排序，年龄相同时，再按学号从小到大排序</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> students order by age desc,studentno;</span><br><span class="line">当按照多个字段排序时，先按第一个字段排序，当第一个字段的值相同时，再按第二个字段排序</span><br><span class="line"></span><br><span class="line">默认排序只能排英文和数字，对中文字段排序需要用到convert函数</span><br><span class="line"></span><br><span class="line">​```sql</span><br><span class="line">select * <span class="keyword">from</span> students order by convert(name using gbk);</span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 聚合函数</span><br><span class="line"></span><br><span class="line">```PYTHON</span><br><span class="line">为了快速得到统计数据，有5个聚合函数:count，max，min，sum，avg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">例1：查询学生总数</span><br><span class="line">select count(*) from students;</span><br><span class="line">count()，要么写*，要么写一个字段，如果count(字段)，不会统计为null的数据</span><br><span class="line"></span><br><span class="line">例2：查询女生的最大年龄</span><br><span class="line">select max(age) from students where sex=&apos;女&apos;;</span><br><span class="line"></span><br><span class="line">例3：查询1班的最小年龄</span><br><span class="line">select min(age) from students where class=&apos;1班&apos;;</span><br><span class="line"></span><br><span class="line">例4：查询北京学生的年龄总和</span><br><span class="line">select sum(age) from students where hometown=&apos;北京&apos;;</span><br><span class="line"></span><br><span class="line">例5：查询女生的平均年龄</span><br><span class="line">select avg(age) from students where sex=&apos;女&apos;;</span><br><span class="line"></span><br><span class="line">查询所有学生的最大年龄、最小年龄、平均年龄</span><br><span class="line">select max(age),min(age),avg(age) from students;</span><br></pre></td></tr></table></figure><h4 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">按照字段分组，此字段相同的数据会被放到一个组中，==目的是对每一组的数据进行统计(聚合函数)==</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line">select 字段,聚合 <span class="keyword">from</span> 表名 group by 字段</span><br><span class="line"></span><br><span class="line">例<span class="number">1</span>：查询各种性别的人数</span><br><span class="line">select sex,count(*) <span class="keyword">from</span> students group by sex;</span><br><span class="line"></span><br><span class="line">注意：按照哪个字段分组，select后面就只能写那个字段再加上聚合函数</span><br></pre></td></tr></table></figure><h4 id="分组后的数据筛选"><a href="#分组后的数据筛选" class="headerlink" title="分组后的数据筛选"></a>分组后的数据筛选</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">语法：select 字段,聚合 <span class="keyword">from</span> 表名 group by 字段 having 条件</span><br><span class="line">例<span class="number">1</span>：查询男生总人数</span><br><span class="line"></span><br><span class="line">select count(*) <span class="keyword">from</span> students where sex=<span class="string">'男'</span>;</span><br><span class="line"></span><br><span class="line">select sex,count(*) <span class="keyword">from</span> students group by sex having sex=<span class="string">'男'</span>;</span><br><span class="line"></span><br><span class="line">having是对分组后得到的结果，再进行过滤</span><br><span class="line"></span><br><span class="line">*对比where与having**</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>where是对<span class="keyword">from</span>后面指定的表进行数据筛选，属于对原始数据的筛选</span><br><span class="line"><span class="number">2.</span>having是对group by的结果进行筛选</span><br><span class="line"><span class="number">3.</span>having后面的条件中可以用聚合函数，where后面不可以</span><br></pre></td></tr></table></figure><h4 id="获取部分行"><a href="#获取部分行" class="headerlink" title="获取部分行"></a>获取部分行</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法：select * <span class="keyword">from</span> 表名 limit 起始位置,个数</span><br><span class="line">注意：起始位置是从<span class="number">0</span>开始</span><br><span class="line">例<span class="number">1</span>：查询前<span class="number">3</span>行学生信息</span><br><span class="line">select * <span class="keyword">from</span> students limit <span class="number">0</span>,<span class="number">3</span>;</span><br><span class="line">select * <span class="keyword">from</span> students limit <span class="number">3</span>;</span><br><span class="line">省略起始位置，起始位置是<span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="SQL语句的书写顺序"><a href="#SQL语句的书写顺序" class="headerlink" title="SQL语句的书写顺序"></a>SQL语句的书写顺序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select *,字段名 <span class="keyword">as</span> 别名,聚合  ⑥</span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span>  ①</span><br><span class="line">inner|left|right join 表<span class="number">2</span> on 表<span class="number">1.</span>字段=表<span class="number">2.</span>字段  ②</span><br><span class="line">where 条件  ③</span><br><span class="line">group by 字段 having 条件(聚合)  ④</span><br><span class="line">order by 字段 asc 或 desc  ⑤</span><br><span class="line">limit  ⑥</span><br></pre></td></tr></table></figure><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：select * <span class="keyword">from</span> 表名 limit 起始位置,数量</span><br><span class="line">​</span><br></pre></td></tr></table></figure><p>已知：每页显示3条数据，求：显示每一页的sql语句<br>查询表的数据的数量<br>select count(*) from students;<br>计算共显示多少页<br>12/3=4页<br>13/3=4+1页</p><p>– 第一页<br>select * from students limit 0,3;<br>– 第二页<br>select * from students limit 3,3;<br>– 第三页<br>select * from students limit 6,3;<br>– 第四页<br>select * from students limit 9,3;<br>​<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">#### 连接查询</span><br><span class="line"></span><br><span class="line">```PYTHON</span><br><span class="line">概念：当查询结果的列来源于多张表时，需要将多张表连接成一个大的数据集，再选择合适的列返回</span><br><span class="line"></span><br><span class="line">**内连接**：只把匹配成功的数据连接起来</span><br><span class="line">语法1：select * from 表1 inner join 表2 on 表1.字段=表2.字段；</span><br><span class="line">语法2：select * from 表1,表2 where 表1.字段=表2.字段；</span><br><span class="line"></span><br><span class="line">多表的内连接查询：</span><br><span class="line">select * from 表1 inner join 表2 on 表1.字段=表2.字段</span><br><span class="line">前面连接后得到一个结果</span><br><span class="line">inner join 表3 on 表3.字段=表1.字段</span><br><span class="line">inner join ...</span><br><span class="line">多表连接后的结果中，可能有重名的字段，如果用到了重名的字段，必须加表名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** 左连接**：查询的结果为两个表匹配到的数据加左表特有的数据</span><br><span class="line">语法：select * from 表1 left join 表2 on 表1.列=表2.列</span><br><span class="line">left join 前面的表是左表,左表在右表中找不到对应的数据用null填充</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**右连接**：查询的结果为两个表匹配到的数据加右表特有的数据</span><br><span class="line">语法：select * from 表1 right join 表2 on 表1.列=表2.列；</span><br><span class="line">right join 后面的表是右表，右表在左表中找不到对应的数据用null填充</span><br><span class="line"></span><br><span class="line">**自关联**：是连接查询的一种应用，对同一个表查询多次，把多次查询的结果连接起来</span><br><span class="line">语法：select * from 表1 inner join 表1 on 表1.字段=表1.字段</span><br><span class="line">例1：查询河南省的所有城市</span><br><span class="line">select * from areas as a1</span><br><span class="line">inner join areas as a2 on a1.aid=a2.pid</span><br><span class="line">where a1.atitle=&apos;河南省&apos;;</span><br><span class="line">注意：自关联必须对表起别名</span><br><span class="line">应用场景：数据之间有上下级关系，用一个表存储</span><br></pre></td></tr></table></figure></p><h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">语法：select ...(select ...);</span><br><span class="line"></span><br><span class="line">子查询是辅助主查询的,要么充当条件,要么充当数据源；</span><br><span class="line">子查询是可以独立存在的语句,是一条完整的select语句；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##子查找充当条件</span></span><br><span class="line">例<span class="number">1</span>：查询大于平均年龄的学生</span><br><span class="line"></span><br><span class="line">查平均年龄</span><br><span class="line">select avg(age) <span class="keyword">from</span> students;</span><br><span class="line"><span class="number">21.5833</span></span><br><span class="line">查询大于平均年龄的学生</span><br><span class="line">select * <span class="keyword">from</span> students where age&gt;<span class="number">21.5833</span>;</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> students where age&gt;(select avg(age) <span class="keyword">from</span> students);</span><br><span class="line"></span><br><span class="line"><span class="comment">##子查询充当数据源：必须给子查询返回的结果且别名</span></span><br><span class="line"></span><br><span class="line">例<span class="number">5</span>：查询数据库和系统测试的课程成绩</span><br><span class="line">先过滤，只要<span class="string">'数据库'</span>,<span class="string">'系统测试'</span></span><br><span class="line">select * <span class="keyword">from</span> </span><br><span class="line">(select * <span class="keyword">from</span> courses where  name <span class="keyword">in</span> (<span class="string">'数据库'</span>,<span class="string">'系统测试'</span>)) <span class="keyword">as</span> temp</span><br><span class="line">inner join scores on temp.courseno=scores.courseno</span><br></pre></td></tr></table></figure><h4 id="数据库高级用法"><a href="#数据库高级用法" class="headerlink" title="数据库高级用法"></a>数据库高级用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### 1.1 数据库设计</span></span><br><span class="line"></span><br><span class="line">**E-R模型**</span><br><span class="line"> E表示entry，实体：一个数据对象，描述具有相同特征的事物，一个表</span><br><span class="line">R表示relationship，联系：表示一个或多个实体之间的关联关系，关系的类型包括包括一对一、一对多、多对多</span><br><span class="line"></span><br><span class="line">**关系也是一种数据，需要通过一个字段存储在表中**</span><br><span class="line"></span><br><span class="line">一对一：常用的数据不常用数据的编号</span><br><span class="line"></span><br><span class="line">一对多：多的一方记录编号</span><br><span class="line"></span><br><span class="line">多对多：创建中间表记录编号</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 1.2 命令行客户端</span></span><br><span class="line"></span><br><span class="line">- 连接服务端</span><br><span class="line"></span><br><span class="line">方式一：所有程序中--MySQL command line client</span><br><span class="line"></span><br><span class="line">方式二：找到命令行客户端的路径，</span><br><span class="line"></span><br><span class="line">C:\Program Files (x86)\MySQL\MySQL Server <span class="number">5.1</span>\bin\mysql.exe</span><br><span class="line"></span><br><span class="line">`<span class="string">"C:\Program Files (x86)\MySQL\MySQL Server 5.1\bin\mysql.exe"</span> -uroot -p`</span><br><span class="line"></span><br><span class="line">- 操作数据库</span><br><span class="line"><span class="number">1.</span>查看所有数据库:show databases</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>使用数据库:use 仓库名</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>查看当前使用的数据库:select database()</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 创建数据库:create database 仓库名 charset=utf8</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>删除数据库:drop database 仓库名</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>操作数据表</span><br><span class="line"></span><br><span class="line">  查看当前数据库中所有表:show tables</span><br><span class="line"></span><br><span class="line">  查看表结构:desc 表名</span><br><span class="line"></span><br><span class="line">  查看表的创建语句:show create table 表名</span><br><span class="line"></span><br><span class="line">   如果中文乱码，`set charset gbk;` ;是sql语句的分隔符，遇到;时才会执行前面的语句</span><br><span class="line"></span><br><span class="line">- 备份与恢复</span><br><span class="line"></span><br><span class="line">以管理员身份运行cmd程序</span><br><span class="line"></span><br><span class="line">备份</span><br><span class="line">mysql dump -uroot -p ceshidb12&gt;ceshidb12.sql</span><br><span class="line"></span><br><span class="line">恢复</span><br><span class="line">mysql  -uroot -p  ceshibak&lt;ceshidb12.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 1.3 内置函数</span></span><br><span class="line"></span><br><span class="line">- 字符串函数</span><br><span class="line"></span><br><span class="line">  <span class="number">1.</span>拼接字符串concat</span><br><span class="line"></span><br><span class="line">  select concat(<span class="number">123</span>,<span class="string">'abc'</span>,<span class="number">89</span>);</span><br><span class="line">  </span><br><span class="line">  select name,hometown,concat(name,<span class="string">'的家乡是'</span>,hometown) <span class="keyword">from</span> students;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - 包含字符个数length</span><br><span class="line"></span><br><span class="line">  select length(<span class="string">'我'</span>);中文长度是<span class="number">3</span></span><br><span class="line">  </span><br><span class="line">  select * <span class="keyword">from</span> students where length(name)=<span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">  - 截取字符串</span><br><span class="line">    - left(str,len)返回字符串str的左端len个字符</span><br><span class="line">    - right(str,len)返回字符串str的右端len个字符</span><br><span class="line">    - substring(str,pos,len)返回字符串str的位置pos起len个字符</span><br><span class="line"></span><br><span class="line">  select left(<span class="string">'abc'</span>,<span class="number">1</span>);</span><br><span class="line">  select right(<span class="string">'abc'</span>,<span class="number">1</span>);</span><br><span class="line">  select substring(<span class="string">'abc'</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">  </span><br><span class="line">  select name,concat(left(name,<span class="number">1</span>),<span class="string">'xx'</span>) <span class="keyword">from</span> students;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - 去除空格</span><br><span class="line">    ltrim(str)返回删除了左空格的字符串str</span><br><span class="line">    rtrim(str)返回删除了右空格的字符串str</span><br><span class="line"></span><br><span class="line">  select ltrim(<span class="string">'  abc  '</span>);</span><br><span class="line">  select rtrim(<span class="string">'  abc  '</span>);</span><br><span class="line">  select rtrim(ltrim(<span class="string">'  abc  '</span>));</span><br></pre></td></tr></table></figure><ul><li><p>大小写转换，函数如下<br>lower(str)<br>upper(str)</p><p>select lower(‘aBa’);<br>select upper(‘aBa’);</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 数学函数</span><br><span class="line"></span><br><span class="line">  - 求四舍五入值round(n,d)，n表示原数，d表示小数位置，默认为0</span><br><span class="line"></span><br><span class="line">  select round(1.56,1);</span><br><span class="line">  </span><br><span class="line">  select round(avg(age)) from students;</span><br><span class="line"></span><br><span class="line">  - 求x的y次幂pow(x,y)</span><br><span class="line"></span><br><span class="line">  select pow(2,4);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - 获取圆周率PI()</span><br><span class="line"></span><br><span class="line">  select PI();</span><br><span class="line"></span><br><span class="line">  - 随机数</span><br><span class="line">    rand()==，值为0-1.0的浮点数</span><br><span class="line">  随机在一个表中取一条记录</span><br><span class="line">  select * from students order by rand() limit 1;</span><br><span class="line"></span><br><span class="line">- 日期时间函数</span><br><span class="line"></span><br><span class="line">  - 当前日期current_date()</span><br><span class="line">  - select current_time()</span><br><span class="line">  - 当前日期时间now()</span><br><span class="line">  - 日期格式化date_format(date,format)</span><br><span class="line"></span><br><span class="line">  select date_format(&apos;2019-04-28 15:02:28&apos;,&apos;%Y年%m月%d日 %H时%i分%s秒&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 1.4 流程控制</span><br><span class="line"></span><br><span class="line">case语法：</span><br><span class="line">case 值 when 比较值1 then 结果1 when 比较值2 then 结果2 ... else 结果 end</span><br><span class="line"></span><br><span class="line">select name,sex,case sex when &apos;男&apos; then concat(left(name,1),&apos;帅哥&apos;) when &apos;女&apos; then concat(left(name,1),&apos;美女&apos;) else concat(left(name,1),&apos;xx&apos;) end as tmp from students;</span><br><span class="line"></span><br><span class="line">#### 1.5 自定义函数</span><br><span class="line"></span><br><span class="line">语法：create function 函数名称(参数列表) returns 返回类型 begin sql语句 end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">例：create function my_trim(str varchar(100)) returns varchar(100) begin return ltrim(rtrim(str));</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">使用：select my_trim(&apos;  abc  &apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">delimiter的作用是把命令行中默认的分隔符;改成其他的符号</span><br><span class="line"></span><br><span class="line">#### 1.6 存储过程</span><br><span class="line"></span><br><span class="line">语法：create procedure 存储过程名称(参数列表) begin sql语句 end</span><br><span class="line">例：create procedure proc_stu() begin select * from students;end</span><br><span class="line"></span><br><span class="line">使用：call proc_stu;</span><br><span class="line"></span><br><span class="line">- 存储过程和函数都是为了可重复的执行操作数据库的 sql 语句的集合.</span><br><span class="line">- 存储过程和函数都是一次编译,就会被缓存起来,下次使用就直接命中缓存中已经编译好的 sql, 不需要重复编译</span><br><span class="line">- 减少网络交互,减少网络访问流量</span><br><span class="line"></span><br><span class="line">#### 1.7 ==视图==</span><br><span class="line"></span><br><span class="line">语法：create view 视图名 as select...</span><br><span class="line"></span><br><span class="line">例：create view v_sss as select stu.*,cs.courseNo,cs.name courseName,sc.score</span><br><span class="line">from students stu</span><br><span class="line">inner join scores sc on stu.studentNo = sc.studentnum</span><br><span class="line">inner join courses cs on cs.courseNo = sc.courseNo;</span><br><span class="line"></span><br><span class="line">注意：创建视图时，select语句返回的结果不能有重复的字段</span><br><span class="line"></span><br><span class="line">使用：select * from v_sss;</span><br><span class="line">作用：视图的用途就是查询，存在于服务端，可以重复使用，节省流量</span><br><span class="line"></span><br><span class="line">- 查看视图：查看表会将所有的视图也列出来</span><br><span class="line">show tables;</span><br><span class="line"></span><br><span class="line">- 删除视图</span><br><span class="line">drop view 名称</span><br><span class="line"></span><br><span class="line">#### 1.8 事务</span><br><span class="line"></span><br><span class="line">所谓事务,它是一个操作序列，这些操作要么都执行，要么都不执行</span><br><span class="line"></span><br><span class="line">- 全部成功</span><br><span class="line"></span><br><span class="line">1、开启事务：begin</span><br><span class="line"></span><br><span class="line">2、多个操作都成功</span><br><span class="line"></span><br><span class="line">大乔给小乔转5岁</span><br><span class="line">update students set age=age-5 where name=&apos;大乔&apos;;</span><br><span class="line"></span><br><span class="line">update students set age=age+5 where name=&apos;小乔&apos;;</span><br><span class="line"></span><br><span class="line">3、提交事务：commit</span><br><span class="line"></span><br><span class="line">- 全部失败</span><br><span class="line"></span><br><span class="line">1、开启事务：begin</span><br><span class="line"></span><br><span class="line">2、多个操作有一个失败</span><br><span class="line"></span><br><span class="line">大乔给小乔转5岁</span><br><span class="line">update students set age=age-5 where name=&apos;大乔&apos;;</span><br><span class="line"></span><br><span class="line">update students set age=age+5 where nama=&apos;小乔&apos;;</span><br><span class="line"></span><br><span class="line">3、回滚：rollback</span><br><span class="line"></span><br><span class="line">#### 1.9 索引</span><br><span class="line"></span><br><span class="line">提升查询的速度，降低更新表的速度</span><br><span class="line"></span><br><span class="line">1.查看索引：show index from 表名</span><br><span class="line">2.创建索引</span><br><span class="line"> 方式一：建表时创建索引</span><br><span class="line">create table create_index2(id int primary key,-- 如果字段是主键或唯一，会自动创建索引</span><br><span class="line">name varchar(10) unique,-- 唯一约束</span><br><span class="line">age int,</span><br><span class="line">key (age) -- 创建索引）；</span><br><span class="line"></span><br><span class="line">索引作用在某一列数据，如果name字段有索引，下面的语言效果高</span><br><span class="line"></span><br><span class="line">select * from student where name=&apos;&apos;</span><br><span class="line"></span><br><span class="line">  方式二：对于已经存在的表，添加索引</span><br><span class="line">create index 索引名称 on 表名(字段名称(长度))</span><br><span class="line">create index name_i on create_index(name(10));</span><br><span class="line">create index age_i on create_index(age);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3.删除索引：</span><br><span class="line"></span><br><span class="line">drop index 索引名称 on 表名</span><br><span class="line"></span><br><span class="line">#### 1.10 外键</span><br><span class="line"></span><br><span class="line">一个表a的字段aa，被另一个b的bb字段约束</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line"></span><br><span class="line">方式一：创建数据表的时候设置外键约束</span><br><span class="line">foreign key(自己的字段) references 主表(主表字段)</span><br><span class="line"></span><br><span class="line">例：create table class(id int unsigned primary key auto_increment,name varchar(10));</span><br><span class="line"></span><br><span class="line">create table stu(name varchar(10),class_id int unsigned,foreign key(class_id) references class(id));</span><br><span class="line"></span><br><span class="line">方式二：对于已经存在的数据表设置外键约束</span><br><span class="line"></span><br><span class="line">alter table 从表名 add foreign key (从表字段) references 主表名(主表字段);</span><br><span class="line"></span><br><span class="line">例：alter table stu add foreign key(class_id) references class(id);</span><br><span class="line"></span><br><span class="line">查看外键：show create table 表名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">CREATE TABLE `stu` (</span><br><span class="line">  `name` varchar(10) DEFAULT NULL,</span><br><span class="line">  `class_id` int(10) unsigned DEFAULT NULL,</span><br><span class="line">  KEY `class_id` (`class_id`),</span><br><span class="line">  CONSTRAINT `stu_ibfk_1` FOREIGN KEY (`class_id`) REFERENCES `class` (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8</span><br><span class="line">​</span><br></pre></td></tr></table></figure></li></ul><p>删除外键：alter table 表名 drop<br>foreign key 外键名称;</p><p>外键的缺点：降低表更新的效率</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 重置MYSQL密码</span><br><span class="line"></span><br><span class="line">```PYTHON</span><br><span class="line">**修改密码**</span><br><span class="line">1、连接上mysql，操作mysql仓库</span><br><span class="line"></span><br><span class="line">2、修改密码，密码存在user表中</span><br><span class="line">update user set password=password(&apos;321&apos;);</span><br><span class="line"></span><br><span class="line">加密是不可逆</span><br><span class="line"></span><br><span class="line">3、刷新权限，让密码生效</span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">8.0版本直接运行下面命令</span><br><span class="line">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;你的新密码&apos;</span><br><span class="line"></span><br><span class="line">**忘记 root 账户密码怎么办**</span><br><span class="line"></span><br><span class="line">重置密码</span><br><span class="line">1、找到配置文件</span><br><span class="line">C:\Program Files (x86)\MySQL\MySQL Server 5.1\my.ini</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">skip-grant-tables</span><br><span class="line"></span><br><span class="line">重启mysql服务</span><br><span class="line"></span><br><span class="line">2、按照前面的内容设置一个新密码</span><br><span class="line"></span><br><span class="line">3、还原配置文件，重启mysql服务</span><br><span class="line"></span><br><span class="line">8.0配置文件路径</span><br><span class="line">C:\ProgramData\MySQL Server 8.0</span><br><span class="line"></span><br><span class="line">**操作日志**</span><br><span class="line">1、查询日志功能是否启用</span><br><span class="line">show variables like &apos;general%&apos;;</span><br><span class="line"></span><br><span class="line">2、启用日志</span><br><span class="line">set global general_log=1;</span><br><span class="line"></span><br><span class="line">3、操作数据库，日志文件会发生变化</span><br><span class="line"></span><br><span class="line">4、关闭日志</span><br><span class="line">set global general_log=0;</span><br><span class="line"></span><br><span class="line">#### 1.1 NoSQL</span><br><span class="line"></span><br><span class="line">非关系型数据库的统称</span><br><span class="line"></span><br><span class="line">- 不用sql语言</span><br><span class="line">- 不用表存储数据</span><br><span class="line">- 性能高</span><br><span class="line"></span><br><span class="line">#### 1.2 Redis</span><br><span class="line"></span><br><span class="line">- key-value存数据</span><br><span class="line">- 性能高</span><br><span class="line">&gt;启动redis时，加载硬盘的数据到内存，</span><br><span class="line">&gt;定时把内存中的新数据保存到硬盘</span><br><span class="line"></span><br><span class="line">## 2. 服务端与客户端</span><br><span class="line"></span><br><span class="line">- 服务端操作</span><br><span class="line"></span><br><span class="line">  - 启动:redis-server</span><br><span class="line"></span><br><span class="line">  - 停止:ctrl+c</span><br><span class="line"></span><br><span class="line">  - 如果把启动redis的窗口关闭:ps -aux | grep &apos;redis&apos;;kill 3892</span><br><span class="line"></span><br><span class="line">- 客户端操作</span><br><span class="line"></span><br><span class="line">  - 连接服务端</span><br><span class="line">redis-cli</span><br><span class="line">redis-cli --raw(如果中文乱码用)</span><br><span class="line"></span><br><span class="line">  - 停止:ctrl+c</span><br><span class="line"></span><br><span class="line">  - 切换数据库</span><br><span class="line"></span><br><span class="line">  不能创建仓库，默认有16个仓库，通过0-15来标识</span><br><span class="line"></span><br><span class="line">  select 数字 刚连接上服务端时，进入的是0仓库</span><br><span class="line"></span><br><span class="line">## 3. key-value</span><br><span class="line"></span><br><span class="line">键值对</span><br><span class="line"></span><br><span class="line">键的名称唯一，不能重复，用字母数字和下划线</span><br><span class="line"></span><br><span class="line">值的类型有5种，string，hash，list，set，zset</span><br><span class="line"></span><br><span class="line">## 4. string</span><br><span class="line"></span><br><span class="line">字符串</span><br><span class="line"></span><br><span class="line">- string是redis最基本的类型</span><br><span class="line">- 最大能存储512MB数据</span><br><span class="line">- string类型是二进制安全的，可以存储任何数据，比如数字、图片等</span><br><span class="line"></span><br><span class="line">**增加、修改**</span><br><span class="line"></span><br><span class="line">- 设置键值</span><br><span class="line">- 如果设置的键不存在则为添加，如果设置的键已经存在则修改</span><br><span class="line"></span><br><span class="line">语法：`set key value`</span><br><span class="line"></span><br><span class="line">例1：设置键为&apos;user1&apos;值为&apos;wzj&apos;的数据</span><br><span class="line"></span><br><span class="line">`set user1 wzj`</span><br><span class="line"></span><br><span class="line">- 设置键值及过期时间，以秒为单位</span><br><span class="line"></span><br><span class="line">语法：`setex key 秒 value`</span><br><span class="line"></span><br><span class="line">例2：设置键为&apos;user2&apos;值为&apos;lb&apos;过期时间为8秒的数据</span><br><span class="line"></span><br><span class="line">`setex user2 8 lb`</span><br><span class="line"></span><br><span class="line">- 设置多个键值</span><br><span class="line"></span><br><span class="line">语法 ：`mset key1 value1 key2 value2 ...`</span><br><span class="line"></span><br><span class="line">例3：设置键为&apos;user4&apos;值为&apos;xq&apos;、键为&apos;user5&apos;值为&apos;dq&apos;、键为&apos;user6&apos;值为&apos;zgl&apos;、键为&apos;user7&apos;值为&apos;bq&apos;的数据</span><br><span class="line"></span><br><span class="line">`mset user4 xq user5 dq user6 zgl user7 bq`</span><br><span class="line"></span><br><span class="line">- 追加值，如果键不存在，新建一个键值对</span><br><span class="line"></span><br><span class="line">语法：`append key value`</span><br><span class="line"></span><br><span class="line">例4：向键为user1中追加值&apos; haha&apos;</span><br><span class="line"></span><br><span class="line">`append user1 haha`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**获取**</span><br><span class="line"></span><br><span class="line">- 获取：根据键获取值，如果不存在此键则返回nil</span><br><span class="line"></span><br><span class="line">语法：`get key`</span><br><span class="line"></span><br><span class="line">例5：获取键&apos;user1&apos;的值</span><br><span class="line"></span><br><span class="line">` get user1000`</span><br><span class="line"></span><br><span class="line">- 根据多个键获取多个值</span><br><span class="line"></span><br><span class="line">语法：`mget key1 key2 ...`</span><br><span class="line"></span><br><span class="line">例6：获取键&apos;user3&apos;、&apos;user4&apos;、&apos;user5&apos;、&apos;user6&apos;的值</span><br><span class="line"></span><br><span class="line">`mget user3 user4 user5 user6`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">string没有删除命令</span><br><span class="line"></span><br><span class="line">## 5. 键命令</span><br><span class="line"></span><br><span class="line">- ==查找键==，参数支持正则表达式</span><br><span class="line"></span><br><span class="line">语法：`keys 表达式`</span><br><span class="line"></span><br><span class="line">例1：查看所有键</span><br><span class="line"></span><br><span class="line">`keys *`</span><br><span class="line"></span><br><span class="line">例2：查看名称中包含a的键</span><br><span class="line"></span><br><span class="line">`keys *a*`</span><br><span class="line"></span><br><span class="line">*任意个字符，?一个字符</span><br><span class="line"></span><br><span class="line">- 判断键是否存在，如果存在返回1，不存在返回0</span><br><span class="line"></span><br><span class="line">语法：`exists key1 key2 ...`</span><br><span class="line"></span><br><span class="line">例3：判断键&apos;user1&apos;、&apos;user2&apos;是否存在</span><br><span class="line"></span><br><span class="line">`exists user1 user2`</span><br><span class="line"></span><br><span class="line">- 查看键对应的value的类型</span><br><span class="line"></span><br><span class="line">语法：`type key`</span><br><span class="line"></span><br><span class="line">例4：查看键&apos;user1&apos;的值类型，为redis支持的五种类型中的一种</span><br><span class="line"></span><br><span class="line">`type user1`</span><br><span class="line"></span><br><span class="line">- ==删除键==及对应的值</span><br><span class="line"></span><br><span class="line">语法：`del key1 key2...`</span><br><span class="line"></span><br><span class="line">例5：删除键&apos;user3&apos;、&apos;user4&apos;、&apos;user5&apos;、&apos;user6&apos;</span><br><span class="line"></span><br><span class="line">`del user3 user4 user5 user6`</span><br><span class="line"></span><br><span class="line">- 设置过期时间，以秒为单位</span><br><span class="line"></span><br><span class="line">语法：`expire key 秒`</span><br><span class="line"></span><br><span class="line">例6：设置键&apos;user1&apos;的过期时间为10秒</span><br><span class="line"></span><br><span class="line">`expire user1 10`</span><br><span class="line"></span><br><span class="line">- 查看有效时间，以秒为单位</span><br><span class="line"></span><br><span class="line">语法：`ttl key`</span><br><span class="line"></span><br><span class="line">例7：查看键&apos;user7&apos;的有效时间</span><br><span class="line"></span><br><span class="line">`tll user7`</span><br><span class="line"></span><br><span class="line">-1代表永不过期 ，-2代表过期或不存在</span><br><span class="line"></span><br><span class="line">## 6. hash</span><br><span class="line"></span><br><span class="line">哈希</span><br><span class="line"></span><br><span class="line">- hash用于存储键值对集合</span><br><span class="line">- 值的类型为string</span><br><span class="line">- 键可以理解为属性，一个属性对应一个值</span><br><span class="line"></span><br><span class="line">**增加、修改**</span><br><span class="line"></span><br><span class="line">- 设置单个属性</span><br><span class="line"></span><br><span class="line">语法：`hset key 属性 值 `</span><br><span class="line"></span><br><span class="line">例1：设置键&apos;huser1&apos;的属性&apos;name&apos;为&apos;lb&apos;</span><br><span class="line"></span><br><span class="line">`hset huser1 name lb`</span><br><span class="line"></span><br><span class="line">- 设置多个属性</span><br><span class="line"></span><br><span class="line">语法：`hmset key 属性 值 属性2 值2`</span><br><span class="line"></span><br><span class="line">例2：设置键&apos;huser2&apos;的属性&apos;name&apos;为&apos;wzj&apos;、属性&apos;gender&apos;为&apos;nv&apos;、属性&apos;birthday&apos;为&apos;2017-1-1&apos;</span><br><span class="line"></span><br><span class="line">`hmset huser2 name wzj gender nv birthday 2017-1-1`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**获取**</span><br><span class="line"></span><br><span class="line">- 获取指定键所有的属性</span><br><span class="line"></span><br><span class="line">语法：`hkeys key`</span><br><span class="line"></span><br><span class="line">例3：获取键&apos;huser2&apos;的所有属性</span><br><span class="line"></span><br><span class="line">`hkeys huser2`</span><br><span class="line"></span><br><span class="line">- 获取一个属性的值</span><br><span class="line"></span><br><span class="line">语法：`hget key 属性 `</span><br><span class="line"></span><br><span class="line">例4：获取键&apos;huser2&apos;属性&apos;name&apos;的值</span><br><span class="line"></span><br><span class="line">`hget huser2 name`</span><br><span class="line"></span><br><span class="line">- 获取多个属性的值</span><br><span class="line"></span><br><span class="line">语法：`hmget key属性 属性2 `</span><br><span class="line"></span><br><span class="line">例5：获取键&apos;huser2&apos;属性&apos;name&apos;、&apos;gender&apos;、&apos;birthday&apos;的值</span><br><span class="line"></span><br><span class="line">`hmget huser2 name gender birthday`</span><br><span class="line"></span><br><span class="line">- 获取所有属性的值</span><br><span class="line"></span><br><span class="line">语法：`hvals key`</span><br><span class="line"></span><br><span class="line">例6：获取键&apos;huser2&apos;所有属性的值</span><br><span class="line"></span><br><span class="line">`hvals huser2`</span><br><span class="line"></span><br><span class="line">例7：获取键&apos;huser2&apos;所有属性和所有值</span><br><span class="line"></span><br><span class="line">`hgetall huser2`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**删除**</span><br><span class="line"></span><br><span class="line">- 删除属性，属性对应的值会被一起删除</span><br><span class="line"></span><br><span class="line">语法：`hdel key 属性1 属性2`</span><br><span class="line"></span><br><span class="line">- 例8：删除键&apos;huser2&apos;的属性&apos;gender&apos;,name</span><br><span class="line"></span><br><span class="line">`hdel huser2 gender name`</span><br><span class="line"></span><br><span class="line">如果所有属性都被删除，整个键值对被删除</span><br><span class="line"></span><br><span class="line">## 7. list</span><br><span class="line"></span><br><span class="line">链表</span><br><span class="line"></span><br><span class="line">- 链表中存的数据类型为string</span><br><span class="line">- 按照添加的顺序排序，从左往右的顺序</span><br><span class="line">- list是双向链表</span><br><span class="line"></span><br><span class="line">**增加**</span><br><span class="line"></span><br><span class="line">- 在左侧插入数据</span><br><span class="line"></span><br><span class="line">语法：`lpush key 值1 值2`</span><br><span class="line"></span><br><span class="line">例1：从键为&apos;luser1&apos;的列表左侧加入数据&apos;dq&apos;、&apos;xq&apos;</span><br><span class="line"></span><br><span class="line">`lpush luser1  dq xq`</span><br><span class="line"></span><br><span class="line">- 在右侧插入数据</span><br><span class="line"></span><br><span class="line">语法：`rpush key 值1 值2`</span><br><span class="line"></span><br><span class="line">例2：从键为&apos;luser1&apos;的列表右侧加入数据&apos;lb&apos;、&apos;zf&apos;</span><br><span class="line"></span><br><span class="line">`rpush  luser1  lb zf`</span><br><span class="line"></span><br><span class="line">- 在指定元素的前或后插入新元素</span><br><span class="line"></span><br><span class="line">语法：`linsert key before或after 现有值 新值`</span><br><span class="line"></span><br><span class="line">例3：在键为&apos;luser1&apos;的列表中元素&apos;lb&apos;前加入&apos;wzj&apos;</span><br><span class="line"></span><br><span class="line">`linsert luser1 before lb wzj`</span><br><span class="line"></span><br><span class="line">**获取**</span><br><span class="line"></span><br><span class="line">- 返回列表里指定范围内的元素</span><br><span class="line">  - start、stop为元素的下标索引</span><br><span class="line">  - 索引从左侧开始，第一个元素为0</span><br><span class="line">  - 索引可以是负数，表示从尾部开始计数，如-1表示最后一个元素</span><br><span class="line"></span><br><span class="line">语法：`lrange key start stop`</span><br><span class="line"></span><br><span class="line">例4：获取键为&apos;luser1&apos;的列表所有元素</span><br><span class="line"></span><br><span class="line">`lrange luser1 0 -1`</span><br><span class="line"></span><br><span class="line">**修改**</span><br><span class="line"></span><br><span class="line">- 设置指定索引位置的元素值</span><br><span class="line">  - 索引从左侧开始，第一个元素为0</span><br><span class="line">  - 索引可以是负数，表示尾部开始计数，如-1表示最后一个元素</span><br><span class="line"></span><br><span class="line">语法：`lset key 位置 新值`</span><br><span class="line"></span><br><span class="line">例5：修改键为&apos;luser1&apos;的列表中下标为1的元素值为&apos;kai&apos;</span><br><span class="line"></span><br><span class="line">`lset luser1 1 kai`</span><br><span class="line"></span><br><span class="line">**删除**</span><br><span class="line"></span><br><span class="line">- 删除指定元素</span><br><span class="line">  - 将列表中前count次出现的值为value的元素移除</span><br><span class="line">  - count &gt;0: 从头往尾移除</span><br><span class="line">  - count &lt;0: 从尾往头移除</span><br><span class="line">  - count = 0: 移除所有</span><br><span class="line"></span><br><span class="line">语法：`lrem key count value`</span><br><span class="line"></span><br><span class="line">例6.2：从&apos;luser2&apos;列表右侧开始删除2个&apos;h0&apos;</span><br><span class="line"></span><br><span class="line">`lrem luser2 0 h0`</span><br><span class="line"></span><br><span class="line">## 8. set</span><br><span class="line"></span><br><span class="line">==无序==集合</span><br><span class="line"></span><br><span class="line">- 元素为string类型</span><br><span class="line">- 元素具有==唯一==性，不重复</span><br><span class="line">- 说明：对于集合没有修改操作</span><br><span class="line"></span><br><span class="line">**增加**</span><br><span class="line"></span><br><span class="line">- 添加元素</span><br><span class="line"></span><br><span class="line">语法：`sadd key 值1 值2`</span><br><span class="line"></span><br><span class="line">例1：向键&apos;suser1&apos;的集合中添加元素&apos;dq&apos;、&apos;xq&apos;、&apos;lb&apos;</span><br><span class="line"></span><br><span class="line">`sadd suser1 dq xq lb`</span><br><span class="line"></span><br><span class="line">**获取**</span><br><span class="line"></span><br><span class="line">- 返回所有的元素</span><br><span class="line"></span><br><span class="line">语法：`smembers key`</span><br><span class="line"></span><br><span class="line">例2：获取键&apos;suser1&apos;的集合中所有元素</span><br><span class="line"></span><br><span class="line">`smembers &apos;suser1&apos;`</span><br><span class="line"></span><br><span class="line">**删除**</span><br><span class="line"></span><br><span class="line">- 删除指定元素</span><br><span class="line"></span><br><span class="line">语法：`srem key 值`</span><br><span class="line"></span><br><span class="line">例3：删除键&apos;suser1&apos;的集合中元素&apos;xq&apos;</span><br><span class="line"></span><br><span class="line">`srem suser1 xq`</span><br><span class="line"></span><br><span class="line">## 9. zset</span><br><span class="line"></span><br><span class="line">==有序==集合</span><br><span class="line"></span><br><span class="line">- 元素为string类型</span><br><span class="line">- 元素具有==唯一==性，不重复</span><br><span class="line">- 每个元素都会关联一个分数，分数可以为负数，通过分数将元素从小到大排序</span><br><span class="line">- 说明：没有修改操作</span><br><span class="line"></span><br><span class="line">**增加**</span><br><span class="line"></span><br><span class="line">- 添加</span><br><span class="line"></span><br><span class="line">语法：`zadd key 分1 值1 分2 值2`</span><br><span class="line"></span><br><span class="line">例1：向键&apos;zuser1&apos;的集合中添加元素&apos;dq&apos;、&apos;xq&apos;、&apos;lb&apos;、&apos;bq&apos;，分数分别为1、5、8、3</span><br><span class="line"></span><br><span class="line">`add zuser1 1 dq 5 xq 8 lb 3 bq`</span><br><span class="line"></span><br><span class="line">如果值存在，可以修改那个值的分数</span><br><span class="line"></span><br><span class="line">**获取**</span><br><span class="line"></span><br><span class="line">- 返回指定范围内的元素</span><br><span class="line">  - start、stop为元素的下标索引</span><br><span class="line">  - 索引从左侧开始，第一个元素为0</span><br><span class="line">  - 索引可以是负数，表示从尾部开始计数，如-1表示最后一个元素</span><br><span class="line"></span><br><span class="line">语法：`zrange key start stop`</span><br><span class="line"></span><br><span class="line">例2：获取键&apos;zuser1&apos;的集合中所有元素</span><br><span class="line"></span><br><span class="line">`zrange &apos;zuser1&apos; 0 -1`</span><br><span class="line"></span><br><span class="line">- 返回score值在min和max之间的元素</span><br><span class="line"></span><br><span class="line">语法：`zrangebyscore key 低分 高分`</span><br><span class="line"></span><br><span class="line">例3：获取键&apos;zuser1&apos;的集合中分数在4和9之间的元素</span><br><span class="line"></span><br><span class="line">`zrangebyscore zuser1 4 9`</span><br><span class="line"></span><br><span class="line">- 返回成员member的score值</span><br><span class="line"></span><br><span class="line">语法：`zscore key 值`</span><br><span class="line"></span><br><span class="line">例4：获取键&apos;zuser1&apos;的集合中元素&apos;lb&apos;的分数</span><br><span class="line"></span><br><span class="line">`zscore zuser1 lb`</span><br><span class="line"></span><br><span class="line">**删除**</span><br><span class="line"></span><br><span class="line">- 删除指定元素</span><br><span class="line"></span><br><span class="line">语法：`zrem key 值1 值2`</span><br><span class="line"></span><br><span class="line">例5：删除集合&apos;zuser1&apos;中元素&apos;dq&apos;</span><br><span class="line"></span><br><span class="line">`zrem zuser1 dq`</span><br><span class="line"></span><br><span class="line">- 删除分数在指定范围的元素</span><br><span class="line"></span><br><span class="line">语法：`zremrangebyscore key 低分 高分`</span><br><span class="line"></span><br><span class="line">例6：删除集合&apos;zuser1&apos;中分数在4、9之间的元素</span><br><span class="line"></span><br><span class="line">`remrangebyscore zuser1 4 9`</span><br></pre></td></tr></table></figure><h1 id="mysql忘记密码解决方法"><a href="#mysql忘记密码解决方法" class="headerlink" title="mysql忘记密码解决方法"></a><a href="https://junconec.github.io/2019/07/23/mysql/" target="_blank" rel="noopener">mysql忘记密码解决方法</a></h1><p>mysql 解决忘记密码问题</p><p>mac下mysql 1045 (28000): Access denied for user ‘root’@’localhost’ (using password:</p><p>新入了mac pro，安装好mysql后，用终端进入mysql遇到个问题： 1045 (28000): Access denied for user ‘root’@’localhost’ (using password: N</p><p>讲道理，我还设密码呢，但是第一次进来就报错，goo了一下大概原因可能是mysql创建的时候给自动分配了密码。</p><p>不管分配没分配密码，反正一般的解决方法就是：先跳过验证，再重设密码。</p><p>具体步骤：</p><ol><li><p>先关闭MySQL服务；<br>执行</p><p>sudo /usr/local/mysql/support-files/mysql.server stop</p></li></ol><p>或者在系统偏好设置中关闭MySQL服务(如果电脑有设置密码的，此处会要求输入计算机密码)</p><p>2.去mysql文件夹里设置跳过验证（3步）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">先进入mysql文件夹：</span><br><span class="line">cd /usr/local/mysql/bin/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">设置权限，如果电脑有设置密码（开机和解锁计算机时要求输入的那个密码），在输入此句后会要求输入密码。输入密码后按回车确认</span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line">跳过验证</span><br><span class="line">./mysqld_safe --skip-grant-tables &amp;</span><br></pre></td></tr></table></figure><p>3.开始设置我们自己的新密码</p><p>打开一个新的终端，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysql -u root -p</span><br></pre></td></tr></table></figure><p>然后会要求输入密码，因为此时根本没有密码，所以直接点确认，显示以下信息表示成功进入mysql(与windows系统一样)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 20</span><br><span class="line">Server version: 5.7.11</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>现在设置新密码，注意要打引号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE mysql.user SET authentication_string=PASSWORD(&apos;cc77&apos;) where User=&apos;root&apos;;</span><br></pre></td></tr></table></figure><p>回车确认，显示以下信息表示修改密码成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 1</span><br></pre></td></tr></table></figure><p>然后刷新一下，让上述修改生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>刷新成功会显示以下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><p>4.重启mysql,用新密码登录，可以登录成功了。但是进行其他mysql操作，会显示：</p><p>ERROR 1820 (HY000) :You must reset your password using AlTER USER statement before executing this statement.</p><p>意思是还要再重设一遍密码，直接输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD = PASSWORD(&apos;cc77&apos;);</span><br></pre></td></tr></table></figure><p>修改成功后，终端会显示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure><p>至此，修改密码彻底完成，可以做任何相关sql操作了</p>]]></content>
    
    
    <categories>
      
      <category>mysql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
      <tag>数据库的增删改查</tag>
      
      <tag>子查询</tag>
      
      <tag>左连接</tag>
      
      <tag>右连接</tag>
      
      <tag>内连接</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux命令</title>
    <link href="undefined2019/08/25/linux%E5%91%BD%E4%BB%A4/"/>
    <url>2019/08/25/linux%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>#操作系统及其分类</p><p>####操作系统</p><p>负责协调硬件设备和软件资源的系统软件</p><p>#####桌面操作系统</p><p>windows界面化</p><p>macOS</p><p>Linux</p><p>#####服务器操作系统</p><p>Linux （安全 稳定 免费）</p><p>Windows  server （付费）</p><p>#####嵌入式操作系统</p><p>Linux</p><h5 id="移动设备操作系统"><a href="#移动设备操作系统" class="headerlink" title="移动设备操作系统"></a>移动设备操作系统</h5><p>Android</p><p>iOS</p><h1 id="Linux版本"><a href="#Linux版本" class="headerlink" title="Linux版本"></a>Linux版本</h1><h5 id="Linux内核版本"><a href="#Linux内核版本" class="headerlink" title="Linux内核版本"></a>Linux内核版本</h5><p>稳定版</p><p>发行版</p><h5 id="Linux发行版本"><a href="#Linux发行版本" class="headerlink" title="Linux发行版本"></a>Linux发行版本</h5><p>Ubuntu</p><p>Centos</p><p>Redhat</p><h4 id="Linux和Windows的区别"><a href="#Linux和Windows的区别" class="headerlink" title="Linux和Windows的区别"></a>Linux和Windows的区别</h4><p>windows通过盘符（C/D/E盘）管理文件和目录而Linux没有盘符的概念，所有的文件和目录都在根目录下（/）</p><h1 id="Linux命令大全"><a href="#Linux命令大全" class="headerlink" title="Linux命令大全"></a>Linux命令大全</h1><p>##Linux常用的几个基本命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">ls 查看文件夹下的内容</span><br><span class="line">ls -a :显示所有文件包含隐藏文件</span><br><span class="line">ls  -l :显示文件的所有详细信息</span><br><span class="line">ls -lh :人性化显示文件大小</span><br><span class="line">ls -alh :查看某个文件下的所有文件包含隐藏文件并显示文件的详细信息，文件大小人性化显示</span><br><span class="line"></span><br><span class="line">ls与通配符一起使用</span><br><span class="line"></span><br><span class="line">ls *.txt :匹配任意字符任意次</span><br><span class="line">ls ?.txt ：只匹配一个字符</span><br><span class="line">ls [abc]/[a-f].py ：匹配[]中任意字符相匹的文件名</span><br><span class="line">ls [abc]*.py :匹配以[]中字符开头的文件名</span><br><span class="line"></span><br><span class="line">cd :切换到家目录</span><br><span class="line">cd ~ : 切换到家目录</span><br><span class="line">cd . :切换到当前目录</span><br><span class="line">cd .. :切换到上一级目录</span><br><span class="line">cd - :返回上一次所在的目录 </span><br><span class="line"></span><br><span class="line">touch 创建文件(eg1:touch <span class="number">1.</span>txt；eg2:touch <span class="number">1.</span>txt <span class="number">2.</span>txt <span class="number">3.</span>txt)</span><br><span class="line">解释：如果文件不存在创建一个新文件，如果文件存在修改文件的修改时间</span><br><span class="line"></span><br><span class="line">mkdir 创建文件夹</span><br><span class="line">mkdir file_name创建一个目录</span><br><span class="line">mkdir &#123;file_name1 file_name2 file_name3&#125;一次创建多个目录</span><br><span class="line">mkdir -p a/b/c 递归创建多级目录</span><br><span class="line">    </span><br><span class="line">rm 删除文件(eg:rm <span class="number">1.</span>txt)</span><br><span class="line">rm -r ：删除目录及目录下的所有内容</span><br><span class="line">rm -i ：交互式删除，删除时会弹出是否确认删除弹窗</span><br><span class="line">rm -f ：强制删除文件或目录</span><br><span class="line">rm -r 删除目录(rm -r file_name)</span><br><span class="line"></span><br><span class="line">clear 清屏</span><br><span class="line">pwd 查看自己在哪</span><br><span class="line">quit() 退出终端</span><br></pre></td></tr></table></figure><h4 id="Linux终端命令格式"><a href="#Linux终端命令格式" class="headerlink" title="Linux终端命令格式"></a>Linux终端命令格式</h4><p>命令  [-选项][参数]</p><p>[]代表可有可无</p><p>####终端中如何查阅帮助信息</p><p>-help or man</p><p>##Liunx的其他命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cp 命令：复制文件/目录</span><br><span class="line">mv 命令：删除文件/目录</span><br><span class="line"></span><br><span class="line">查看文件内容</span><br><span class="line">cat 文件名：查看⽂文件内容、⽂文件合并、追加⽂文件内容等</span><br><span class="line">more 文件名：分屏显示⽂文件内容</span><br><span class="line">grep 搜索文本文件名：搜索⽂文本⽂文件内容</span><br><span class="line">grep -v  文件名: 反向显现内容</span><br><span class="line">grep -n 文件名: 显示⾏行行号</span><br><span class="line">grep -i  文件名:忽略略⼤大⼩小写</span><br><span class="line">   </span><br><span class="line">&gt;/&gt;&gt; ：重定向</span><br><span class="line">| ：管道 </span><br><span class="line"></span><br><span class="line">find -name <span class="string">"文件名"</span>：查找文件并显示文件的路径信息</span><br><span class="line">ln -s [绝对路路径]源⽂文件 链接⽂文件：创建软链接</span><br><span class="line">ln 源⽂文件 链接⽂文件：创建硬链接</span><br></pre></td></tr></table></figure><h3 id="打包压缩解压的命令"><a href="#打包压缩解压的命令" class="headerlink" title="打包压缩解压的命令"></a>打包压缩解压的命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf 包名.tar.gz 被打包的⽂文件 作用:打包和压缩</span><br><span class="line">tar -zxvf 包名.tar.gz 作⽤用:解包和解压缩</span><br><span class="line">tar -zxvf 包名.tar.gz -C /home/admin/桌⾯面/tar 作⽤用:包⾥里里 ⾯面的内容解包解压到 tar⽬目录下</span><br><span class="line">（-c : 打包；-v: 显示进度；-f: 指定包名，必须放在最后 ；-t: 查看包内容；-x: 解包）</span><br><span class="line">zip2(two) :压缩 解压缩 </span><br><span class="line">zip ：压缩</span><br><span class="line">unzip ：解压缩</span><br></pre></td></tr></table></figure><h3 id="修改文件权限的命令"><a href="#修改文件权限的命令" class="headerlink" title="修改文件权限的命令"></a>修改文件权限的命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chmod:修改文件权限</span><br><span class="line">chmod 命令-字母法</span><br><span class="line">chmod u+rw filename 给⽤用户增加权限</span><br><span class="line">chmod g-rw filename 给组⽤用户减少权限</span><br><span class="line">chmod a=x filename 给所有⽤用户设置执⾏行行权限，去掉了了原 有权限</span><br><span class="line">chmod u+rw,g+rw,o+rw filenmae 给三个⽤用户类型增加 读写权限，注意,号分割⽤用户类型</span><br><span class="line">chmod 命令-数字法</span><br><span class="line">chmod 755 ⽂文件名(u/g/o=用户/组/其他，r/w/x分别为4/2/1)</span><br></pre></td></tr></table></figure><h3 id="需要管理员权限的命令"><a href="#需要管理员权限的命令" class="headerlink" title="需要管理员权限的命令"></a>需要管理员权限的命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">which ：查找程序的安装位置</span><br><span class="line">su:切换用户</span><br><span class="line">exit：退出当前登录帐号</span><br><span class="line">who:查看当前操作系统的⽤用户信息</span><br><span class="line">reboot :重启 </span><br><span class="line">shutdown:关机(需要root权限) </span><br><span class="line">ps -aux:显示当前系统的所有进程</span><br><span class="line">ps -aux | grep &quot;进程名&quot;:查看某个进程</span><br><span class="line">kill：杀死进程 （kill 进程id）</span><br><span class="line">top:动态查看系统资源</span><br><span class="line">netstat -anptu | grep &quot;进程名&quot;：查看某个端口信息</span><br></pre></td></tr></table></figure><h3 id="查看日志信息的命令"><a href="#查看日志信息的命令" class="headerlink" title="查看日志信息的命令"></a>查看日志信息的命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">head :查看文件前10行内容,如果想查看其他行数就指定一个数字</span><br><span class="line">head 文件名</span><br><span class="line">head -15 ⽂件名</span><br><span class="line">tail:查看文件结尾n行内容</span><br><span class="line">tail 文件名:⼯作中查看⽇志⽂件，查看内容较多的文件结尾几行内容 </span><br><span class="line">tail -f 文件名 :实时监控⽇志文件,⽅便定位bug</span><br><span class="line">ping 127.0.0.1 &gt; ⽂文件名 ：使⽤用ping命令不停向⽂件中写入内容</span><br></pre></td></tr></table></figure><p>###ls -l 的扩展</p><p>ls -l 可以查看⽂文件夹下⽂文件的详细信息，从左到右依次是:<br><strong>权限</strong>第1个字符如果是 d 表示⽬目录，如果是 - 表示⽂文件 权限类型:rw- </p><p><strong>硬连接数</strong>通俗地讲，就是有多少种⽅方式，可以访问到当前 ⽬目录或⽂文件</p><p><strong>拥有者</strong>家⽬目录下 ⽂文件或⽬目录 的拥有者通常都是当前⽤用户 </p><p><strong>组</strong>在linux中，很多时候，会出现组名和⽤用户名相同的情况 ⼤大⼩小<br><strong>时间</strong><br><strong>文件名</strong></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>操作系统</tag>
      
      <tag>linux</tag>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>